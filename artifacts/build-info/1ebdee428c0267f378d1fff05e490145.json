{
	"id": "1ebdee428c0267f378d1fff05e490145",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"BRIDGE_PARTNERSHIP/erc20Bridge.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport \"./src/Utils.sol\";\r\nimport {IWETH} from \"./src/interfaces/IWETH.sol\";\r\nimport {TokenBase, TokenReceiver, TokenSender} from \"./src/TokenBase.sol\";\r\nimport \"./src/interfaces/IWormholeReceiver.sol\";\r\nimport \"./src/interfaces/IWormholeRelayer.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\"; // use oz < 5.0\r\nimport \"./lib.d.sol\";\r\n\r\n\r\nabstract contract ERC20Bridge is TokenSender , TokenReceiver, Ownable{ \r\n    mapping(uint16 => mapping(address => bool)) internal wormholeEndpoints;\r\n    mapping(uint16 => address) internal wormEndpoints;\r\n    mapping(uint16 => mapping(bytes32 => bool)) internal _delivered;\r\n\r\n    function _initWorm(\r\n        address _wormholeRelayer, // wormhole relayer address\r\n        address _tokenBridge, // wormhole token bridge address\r\n        address _wormhole // wormhole core address\r\n    \r\n    ) internal virtual{\r\n        _initTokenBase(_wormholeRelayer, _tokenBridge, _wormhole);\r\n    }\r\n\r\n    // setters\r\n\r\n    function _setWormholeEndpoint(uint16 wormholeId, address contractAddress) public onlyOwner{\r\n        wormholeEndpoints[wormholeId][contractAddress] = true;\r\n        wormEndpoints[wormholeId] = contractAddress;\r\n    }\r\n\r\n    //to allow recieve from endChain\r\n    function _removeWormholeEndpoint(uint16 wormholeId, address contractAddress) public onlyOwner{\r\n        wormholeEndpoints[wormholeId][contractAddress] = false;\r\n        delete wormEndpoints[wormholeId];\r\n    }\r\n\r\n    function _erc20FeeQuote(\r\n        uint16 wormholeTargetId,\r\n        uint256 gasUnits\r\n    ) internal view returns (uint256 cost) {\r\n        (cost, ) = wormholeRelayer.quoteEVMDeliveryPrice(\r\n            wormholeTargetId,\r\n            0,\r\n            gasUnits\r\n        );\r\n        // Total cost: delivery cost + cost of publishing the 'sending token' wormhole message\r\n        cost = cost + wormhole.messageFee();\r\n    }\r\n\r\n    // returns wormhole sequence for successful transfers\r\n    function _bridgeErc20(\r\n        uint16 targetChain,\r\n        address targetBridge,\r\n        address recipient,\r\n        uint256 amount,\r\n        address token,\r\n        uint256 dstGas\r\n    ) internal virtual returns(bool) {\r\n        (uint256 cost) = _erc20FeeQuote(targetChain ,dstGas);\r\n        if(msg.value < cost) {revert(\"\");}\r\n        \r\n        bytes memory payload = abi.encode(recipient);\r\n        sendTokenWithPayloadToEvm(\r\n            targetChain,\r\n            targetBridge, // address (on targetChain) to send token and payload to\r\n            payload,\r\n            0,\r\n            dstGas, // gas units\r\n            token, // address of IERC20 token contract\r\n            amount, // amount\r\n            wormhole.chainId(), // refund to sending chain\r\n            msg.sender // refund to sender \r\n        );\r\n        return true;\r\n    }\r\n\r\n    function receivePayloadAndTokens(\r\n        bytes memory payload,\r\n        Structs.TokenReceived[] memory receivedTokens,\r\n        bytes32 srcA, // sourceAddress\r\n        uint16 ch,\r\n        bytes32 dh,// deliveryHash,\r\n        bytes[] memory\r\n     ) internal virtual override \r\n     {\r\n        require(receivedTokens.length == 1);\r\n        address bridge = fromWormholeFormat(srcA);\r\n        require(wormholeEndpoints[ch][bridge]== true);\r\n        require(_delivered[ch][dh]== false);\r\n        (\r\n            address recipient\r\n        ) = abi.decode(payload, (address));\r\n        \r\n        uint256 tokenAmt = receivedTokens[0].amount;\r\n        bool x = IERC20(receivedTokens[0].tokenAddress).transfer(recipient,tokenAmt);\r\n        _delivered[ch][dh]= x ? true : false;\r\n    }\r\n    \r\n}"
			},
			"BRIDGE_PARTNERSHIP/lib.d.sol": {
				"content": "//SPDX-License-Identifier: Unlicensed\r\n\r\npragma solidity ^0.8.20;\r\n\r\nlibrary Structs {\r\n\r\n    error WrongFeeOrParams();\r\n\r\n    struct EthBridge{\r\n        uint16 _lzSrcCh;// ins\r\n        uint16 _lzDstChId; // outs\r\n        uint256 amount;\r\n        address dstReciver;\r\n        uint256 timeStamp;\r\n        bool delivered;\r\n    }\r\n\r\n    struct TokenBridge{\r\n        uint16 _wormSrcCh;// bridge ins\r\n        uint16 _wormDstChId; // bridge outs\r\n        address token;\r\n        uint256 amount;\r\n        address dstReciver;\r\n        uint256 timeStamp;\r\n        bool delivered;\r\n    }\r\n\r\n    struct LatestBridge{\r\n        bool isEth; // if isEth == true , then the bridge ethbridge data will be available , if false then tokenBridge\r\n        EthBridge ethbridge; // eth bridge data = destructure with ethBridge struct, is blank data if a token transfer\r\n        TokenBridge tokenbridge;\r\n        bytes[] additionalVaas; // if it is token bridge this data is available \r\n    } \r\n\r\n    struct UserData{\r\n        uint256 bridgeOut;\r\n        uint256 bridgeIn;\r\n        uint256 totalRef;\r\n        uint256 points;\r\n    }\r\n\r\n    struct Referals{\r\n        bool refered;\r\n        address referer;\r\n    }\r\n\r\n    struct User{\r\n        UserData data;\r\n        UserMaps maps;\r\n        Referals referalData;\r\n    }\r\n\r\n    struct UserMaps{\r\n        mapping(uint16=> uint256) outVolEth;\r\n        mapping(address=> mapping(uint16=> uint256)) outVolToken;\r\n        //wormhole maps\r\n        mapping(bytes32=>TokenBridge) tokenBridgeIns;\r\n        mapping(uint256 => mapping(uint16=> TokenBridge)) tokenBridgeOuts;\r\n        mapping(uint256=>mapping(uint16 =>bytes32)) hashes;\r\n        //lzMaps\r\n        mapping(uint256=>mapping(uint16 =>EthBridge)) ethBridgesOut;\r\n        mapping(uint256=>mapping(uint16 =>EthBridge)) ethBridgesIn;\r\n    }\r\n\r\n    struct BridgeData{\r\n        uint256 pointPerTx;\r\n        uint256 totalPoints;\r\n        bool isActive;\r\n        uint256 bridgeFeeEther;\r\n        uint256 percentFee;\r\n    }\r\n    // misc\r\n    struct TokenReceived {\r\n        bytes32 tokenHomeAddress;\r\n        uint16 tokenHomeChain;\r\n        address tokenAddress; // wrapped address if tokenHomeChain !== this chain, else tokenHomeAddress (in evm address format)\r\n        uint256 amount;\r\n        uint256 amountNormalized; // if decimals > 8, normalized to 8 decimal places\r\n    }\r\n}\r\n\r\nlibrary Inputs {\r\n    \r\n    // this struct is the input param of function bridgeErc20()\r\n\r\n    struct ERC20INPUT {\r\n        uint16 targetChain;\r\n        address recipient;\r\n        uint256 amt;\r\n        address token;\r\n        uint256 dstGas;\r\n        address referal;\r\n    }\r\n    // same as the above but for the eth bridge function\r\n    struct ETHINPUT{\r\n        uint16 toChainId; \r\n        address to; \r\n        uint256 amt;\r\n        uint256 dstGas;\r\n        bool useZro;\r\n        address zroPAddr;\r\n        address referal;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol": {
				"content": "// SPDX-License-Identifier: Apache 2\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title WormholeRelayer\r\n * @author\r\n * @notice This project allows developers to build cross-chain applications powered by Wormhole without needing to\r\n * write and run their own relaying infrastructure\r\n *\r\n * We implement the IWormholeRelayer interface that allows users to request a delivery provider to relay a payload (and/or additional messages)\r\n * to a chain and address of their choice.\r\n */\r\n\r\n/**\r\n * @notice VaaKey identifies a wormhole message\r\n *\r\n * @custom:member chainId Wormhole chain ID of the chain where this VAA was emitted from\r\n * @custom:member emitterAddress Address of the emitter of the VAA, in Wormhole bytes32 format\r\n * @custom:member sequence Sequence number of the VAA\r\n */\r\nstruct VaaKey {\r\n    uint16 chainId;\r\n    bytes32 emitterAddress;\r\n    uint64 sequence;\r\n}\r\n\r\n// 0-127 are reserved for standardized KeyTypes, 128-255 are for custom use\r\nuint8 constant VAA_KEY_TYPE = 1;\r\n\r\nstruct MessageKey {\r\n    uint8 keyType; // 0-127 are reserved for standardized KeyTypes, 128-255 are for custom use\r\n    bytes encodedKey;\r\n}\r\n\r\ninterface IWormholeRelayerBase {\r\n    event SendEvent(\r\n        uint64 indexed sequence,\r\n        uint256 deliveryQuote,\r\n        uint256 paymentForExtraReceiverValue\r\n    );\r\n\r\n    function getRegisteredWormholeRelayerContract(\r\n        uint16 chainId\r\n    ) external view returns (bytes32);\r\n\r\n    /**\r\n     * @notice Returns true if a delivery has been attempted for the given deliveryHash\r\n     * Note: invalid deliveries where the tx reverts are not considered attempted\r\n     */\r\n    function deliveryAttempted(\r\n        bytes32 deliveryHash\r\n    ) external view returns (bool attempted);\r\n\r\n    /**\r\n     * @notice block number at which a delivery was successfully executed\r\n     */\r\n    function deliverySuccessBlock(\r\n        bytes32 deliveryHash\r\n    ) external view returns (uint256 blockNumber);\r\n\r\n    /**\r\n     * @notice block number of the latest attempt to execute a delivery that failed\r\n     */\r\n    function deliveryFailureBlock(\r\n        bytes32 deliveryHash\r\n    ) external view returns (uint256 blockNumber);\r\n}\r\n\r\n/**\r\n * @title IWormholeRelayerSend\r\n * @notice The interface to request deliveries\r\n */\r\ninterface IWormholeRelayerSend is IWormholeRelayerBase {\r\n    /**\r\n     * @notice Publishes an instruction for the default delivery provider\r\n     * to relay a payload to the address `targetAddress` on chain `targetChain`\r\n     * with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\r\n     *\r\n     * `targetAddress` must implement the IWormholeReceiver interface\r\n     *\r\n     * This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\r\n     *\r\n     * Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendPayloadToEvm` function\r\n     * with `refundChain` and `refundAddress` as parameters\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\r\n     * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\r\n     * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param gasLimit gas limit with which to call `targetAddress`.\r\n     * @return sequence sequence number of published VAA containing delivery instructions\r\n     */\r\n    function sendPayloadToEvm(\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 gasLimit\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    /**\r\n     * @notice Publishes an instruction for the default delivery provider\r\n     * to relay a payload to the address `targetAddress` on chain `targetChain`\r\n     * with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\r\n     *\r\n     * Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\r\n     * `targetAddress` must implement the IWormholeReceiver interface\r\n     *\r\n     * This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\r\n     * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\r\n     * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\r\n     *        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\r\n     * @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\r\n     * @param refundAddress The address on `refundChain` to deliver any refund to\r\n     * @return sequence sequence number of published VAA containing delivery instructions\r\n     */\r\n    function sendPayloadToEvm(\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 gasLimit,\r\n        uint16 refundChain,\r\n        address refundAddress\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    /**\r\n     * @notice Publishes an instruction for the default delivery provider\r\n     * to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\r\n     * with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\r\n     *\r\n     * `targetAddress` must implement the IWormholeReceiver interface\r\n     *\r\n     * This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\r\n     *\r\n     * Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendVaasToEvm` function\r\n     * with `refundChain` and `refundAddress` as parameters\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\r\n     * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\r\n     * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param gasLimit gas limit with which to call `targetAddress`.\r\n     * @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\r\n     * @return sequence sequence number of published VAA containing delivery instructions\r\n     */\r\n    function sendVaasToEvm(\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 gasLimit,\r\n        VaaKey[] memory vaaKeys\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    /**\r\n     * @notice Publishes an instruction for the default delivery provider\r\n     * to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\r\n     * with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\r\n     *\r\n     * Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\r\n     * `targetAddress` must implement the IWormholeReceiver interface\r\n     *\r\n     * This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\r\n     * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\r\n     * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\r\n     *        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\r\n     * @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\r\n     * @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\r\n     * @param refundAddress The address on `refundChain` to deliver any refund to\r\n     * @return sequence sequence number of published VAA containing delivery instructions\r\n     */\r\n    function sendVaasToEvm(\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 gasLimit,\r\n        VaaKey[] memory vaaKeys,\r\n        uint16 refundChain,\r\n        address refundAddress\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    /**\r\n     * @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\r\n     * to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\r\n     * with gas limit `gasLimit` and `msg.value` equal to\r\n     * receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\r\n     *\r\n     * Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\r\n     * `targetAddress` must implement the IWormholeReceiver interface\r\n     *\r\n     * This function must be called with `msg.value` equal to\r\n     * quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\r\n     * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\r\n     * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\r\n     *        (in addition to the `receiverValue` specified)\r\n     * @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\r\n     *        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\r\n     * @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\r\n     * @param refundAddress The address on `refundChain` to deliver any refund to\r\n     * @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\r\n     * @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\r\n     * @param consistencyLevel Consistency level with which to publish the delivery instructions - see\r\n     *        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\r\n     * @return sequence sequence number of published VAA containing delivery instructions\r\n     */\r\n    function sendToEvm(\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 paymentForExtraReceiverValue,\r\n        uint256 gasLimit,\r\n        uint16 refundChain,\r\n        address refundAddress,\r\n        address deliveryProviderAddress,\r\n        VaaKey[] memory vaaKeys,\r\n        uint8 consistencyLevel\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    /**\r\n     * @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\r\n     * to relay a payload and external messages specified by `messageKeys` to the address `targetAddress` on chain `targetChain`\r\n     * with gas limit `gasLimit` and `msg.value` equal to\r\n     * receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\r\n     *\r\n     * Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\r\n     * `targetAddress` must implement the IWormholeReceiver interface\r\n     *\r\n     * This function must be called with `msg.value` equal to\r\n     * quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue\r\n     *\r\n     * Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected\r\n     * DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\r\n     * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\r\n     * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\r\n     *        (in addition to the `receiverValue` specified)\r\n     * @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\r\n     *        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\r\n     * @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\r\n     * @param refundAddress The address on `refundChain` to deliver any refund to\r\n     * @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\r\n     * @param messageKeys Additional messagess to pass in as parameter in call to `targetAddress`\r\n     * @param consistencyLevel Consistency level with which to publish the delivery instructions - see\r\n     *        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\r\n     * @return sequence sequence number of published VAA containing delivery instructions\r\n     */\r\n    function sendToEvm(\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 paymentForExtraReceiverValue,\r\n        uint256 gasLimit,\r\n        uint16 refundChain,\r\n        address refundAddress,\r\n        address deliveryProviderAddress,\r\n        MessageKey[] memory messageKeys,\r\n        uint8 consistencyLevel\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    /**\r\n     * @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\r\n     * to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\r\n     * with `msg.value` equal to\r\n     * receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\r\n     *\r\n     * Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\r\n     * `targetAddress` must implement the IWormholeReceiver interface\r\n     *\r\n     * This function must be called with `msg.value` equal to\r\n     * quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param targetAddress address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\r\n     * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\r\n     * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\r\n     *        (in addition to the `receiverValue` specified)\r\n     * @param encodedExecutionParameters encoded information on how to execute delivery that may impact pricing\r\n     *        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\r\n     * @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\r\n     * @param refundAddress The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\r\n     * @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\r\n     * @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\r\n     * @param consistencyLevel Consistency level with which to publish the delivery instructions - see\r\n     *        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\r\n     * @return sequence sequence number of published VAA containing delivery instructions\r\n     */\r\n    function send(\r\n        uint16 targetChain,\r\n        bytes32 targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 paymentForExtraReceiverValue,\r\n        bytes memory encodedExecutionParameters,\r\n        uint16 refundChain,\r\n        bytes32 refundAddress,\r\n        address deliveryProviderAddress,\r\n        VaaKey[] memory vaaKeys,\r\n        uint8 consistencyLevel\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    /**\r\n     * @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\r\n     * to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\r\n     * with `msg.value` equal to\r\n     * receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\r\n     *\r\n     * Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\r\n     * `targetAddress` must implement the IWormholeReceiver interface\r\n     *\r\n     * This function must be called with `msg.value` equal to\r\n     * quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue\r\n     *\r\n     * Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected\r\n     * DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param targetAddress address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\r\n     * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\r\n     * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\r\n     *        (in addition to the `receiverValue` specified)\r\n     * @param encodedExecutionParameters encoded information on how to execute delivery that may impact pricing\r\n     *        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\r\n     * @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\r\n     * @param refundAddress The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\r\n     * @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\r\n     * @param messageKeys Additional messagess to pass in as parameter in call to `targetAddress`\r\n     * @param consistencyLevel Consistency level with which to publish the delivery instructions - see\r\n     *        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\r\n     * @return sequence sequence number of published VAA containing delivery instructions\r\n     */\r\n    function send(\r\n        uint16 targetChain,\r\n        bytes32 targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 paymentForExtraReceiverValue,\r\n        bytes memory encodedExecutionParameters,\r\n        uint16 refundChain,\r\n        bytes32 refundAddress,\r\n        address deliveryProviderAddress,\r\n        MessageKey[] memory messageKeys,\r\n        uint8 consistencyLevel\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    /**\r\n     * @notice Requests a previously published delivery instruction to be redelivered\r\n     * (e.g. with a different delivery provider)\r\n     *\r\n     * This function must be called with `msg.value` equal to\r\n     * quoteEVMDeliveryPrice(targetChain, newReceiverValue, newGasLimit, newDeliveryProviderAddress)\r\n     *\r\n     *  @notice *** This will only be able to succeed if the following is true **\r\n     *         - newGasLimit >= gas limit of the old instruction\r\n     *         - newReceiverValue >= receiver value of the old instruction\r\n     *         - newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`\r\n     *\r\n     * @param deliveryVaaKey VaaKey identifying the wormhole message containing the\r\n     *        previously published delivery instructions\r\n     * @param targetChain The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\r\n     * @param newReceiverValue new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param newGasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\r\n     *        `targetChainRefundPerGasUnused` rate quoted by the delivery provider, to the refund chain and address specified in the original request\r\n     * @param newDeliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\r\n     * @return sequence sequence number of published VAA containing redelivery instructions\r\n     *\r\n     * @notice *** This will only be able to succeed if the following is true **\r\n     *         - newGasLimit >= gas limit of the old instruction\r\n     *         - newReceiverValue >= receiver value of the old instruction\r\n     */\r\n    function resendToEvm(\r\n        VaaKey memory deliveryVaaKey,\r\n        uint16 targetChain,\r\n        uint256 newReceiverValue,\r\n        uint256 newGasLimit,\r\n        address newDeliveryProviderAddress\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    /**\r\n     * @notice Requests a previously published delivery instruction to be redelivered\r\n     *\r\n     *\r\n     * This function must be called with `msg.value` equal to\r\n     * quoteDeliveryPrice(targetChain, newReceiverValue, newEncodedExecutionParameters, newDeliveryProviderAddress)\r\n     *\r\n     * @param deliveryVaaKey VaaKey identifying the wormhole message containing the\r\n     *        previously published delivery instructions\r\n     * @param targetChain The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\r\n     * @param newReceiverValue new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param newEncodedExecutionParameters new encoded information on how to execute delivery that may impact pricing\r\n     *        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\r\n     * @param newDeliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\r\n     * @return sequence sequence number of published VAA containing redelivery instructions\r\n     *\r\n     *  @notice *** This will only be able to succeed if the following is true **\r\n     *         - (For EVM_V1) newGasLimit >= gas limit of the old instruction\r\n     *         - newReceiverValue >= receiver value of the old instruction\r\n     *         - (For EVM_V1) newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`\r\n     */\r\n    function resend(\r\n        VaaKey memory deliveryVaaKey,\r\n        uint16 targetChain,\r\n        uint256 newReceiverValue,\r\n        bytes memory newEncodedExecutionParameters,\r\n        address newDeliveryProviderAddress\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    /**\r\n     * @notice Returns the price to request a relay to chain `targetChain`, using the default delivery provider\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param gasLimit gas limit with which to call `targetAddress`.\r\n     * @return nativePriceQuote Price, in units of current chain currency, that the delivery provider charges to perform the relay\r\n     * @return targetChainRefundPerGasUnused amount of target chain currency that will be refunded per unit of gas unused,\r\n     *         if a refundAddress is specified.\r\n     *         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a\r\n     *         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.\r\n     *         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain.\r\n     */\r\n    function quoteEVMDeliveryPrice(\r\n        uint16 targetChain,\r\n        uint256 receiverValue,\r\n        uint256 gasLimit\r\n    )\r\n        external\r\n        view\r\n        returns (\r\n            uint256 nativePriceQuote,\r\n            uint256 targetChainRefundPerGasUnused\r\n        );\r\n\r\n    /**\r\n     * @notice Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param gasLimit gas limit with which to call `targetAddress`.\r\n     * @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\r\n     * @return nativePriceQuote Price, in units of current chain currency, that the delivery provider charges to perform the relay\r\n     * @return targetChainRefundPerGasUnused amount of target chain currency that will be refunded per unit of gas unused,\r\n     *         if a refundAddress is specified\r\n     *         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a\r\n     *         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.\r\n     *         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain.\r\n     */\r\n    function quoteEVMDeliveryPrice(\r\n        uint16 targetChain,\r\n        uint256 receiverValue,\r\n        uint256 gasLimit,\r\n        address deliveryProviderAddress\r\n    )\r\n        external\r\n        view\r\n        returns (\r\n            uint256 nativePriceQuote,\r\n            uint256 targetChainRefundPerGasUnused\r\n        );\r\n\r\n    /**\r\n     * @notice Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param encodedExecutionParameters encoded information on how to execute delivery that may impact pricing\r\n     *        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\r\n     * @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\r\n     * @return nativePriceQuote Price, in units of current chain currency, that the delivery provider charges to perform the relay\r\n     * @return encodedExecutionInfo encoded information on how the delivery will be executed\r\n     *        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` and `targetChainRefundPerGasUnused`\r\n     *             (which is the amount of target chain currency that will be refunded per unit of gas unused,\r\n     *              if a refundAddress is specified)\r\n     */\r\n    function quoteDeliveryPrice(\r\n        uint16 targetChain,\r\n        uint256 receiverValue,\r\n        bytes memory encodedExecutionParameters,\r\n        address deliveryProviderAddress\r\n    )\r\n        external\r\n        view\r\n        returns (uint256 nativePriceQuote, bytes memory encodedExecutionInfo);\r\n\r\n    /**\r\n     * @notice Returns the (extra) amount of target chain currency that `targetAddress`\r\n     * will be called with, if the `paymentForExtraReceiverValue` field is set to `currentChainAmount`\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param currentChainAmount The value that `paymentForExtraReceiverValue` will be set to\r\n     * @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\r\n     * @return targetChainAmount The amount such that if `targetAddress` will be called with `msg.value` equal to\r\n     *         receiverValue + targetChainAmount\r\n     */\r\n    function quoteNativeForChain(\r\n        uint16 targetChain,\r\n        uint256 currentChainAmount,\r\n        address deliveryProviderAddress\r\n    ) external view returns (uint256 targetChainAmount);\r\n\r\n    /**\r\n     * @notice Returns the address of the current default delivery provider\r\n     * @return deliveryProvider The address of (the default delivery provider)'s contract on this source\r\n     *   chain. This must be a contract that implements IDeliveryProvider.\r\n     */\r\n    function getDefaultDeliveryProvider()\r\n        external\r\n        view\r\n        returns (address deliveryProvider);\r\n}\r\n\r\n/**\r\n * @title IWormholeRelayerDelivery\r\n * @notice The interface to execute deliveries. Only relevant for Delivery Providers\r\n */\r\ninterface IWormholeRelayerDelivery is IWormholeRelayerBase {\r\n    enum DeliveryStatus {\r\n        SUCCESS,\r\n        RECEIVER_FAILURE\r\n    }\r\n\r\n    enum RefundStatus {\r\n        REFUND_SENT,\r\n        REFUND_FAIL,\r\n        CROSS_CHAIN_REFUND_SENT,\r\n        CROSS_CHAIN_REFUND_FAIL_PROVIDER_NOT_SUPPORTED,\r\n        CROSS_CHAIN_REFUND_FAIL_NOT_ENOUGH,\r\n        NO_REFUND_REQUESTED\r\n    }\r\n\r\n    /**\r\n     * @custom:member recipientContract - The target contract address\r\n     * @custom:member sourceChain - The chain which this delivery was requested from (in wormhole\r\n     *     ChainID format)\r\n     * @custom:member sequence - The wormhole sequence number of the delivery VAA on the source chain\r\n     *     corresponding to this delivery request\r\n     * @custom:member deliveryVaaHash - The hash of the delivery VAA corresponding to this delivery\r\n     *     request\r\n     * @custom:member gasUsed - The amount of gas that was used to call your target contract\r\n     * @custom:member status:\r\n     *   - RECEIVER_FAILURE, if the target contract reverts\r\n     *   - SUCCESS, if the target contract doesn't revert\r\n     * @custom:member additionalStatusInfo:\r\n     *   - If status is SUCCESS, then this is empty.\r\n     *   - If status is RECEIVER_FAILURE, this is `RETURNDATA_TRUNCATION_THRESHOLD` bytes of the\r\n     *       return data (i.e. potentially truncated revert reason information).\r\n     * @custom:member refundStatus - Result of the refund. REFUND_SUCCESS or REFUND_FAIL are for\r\n     *     refunds where targetChain=refundChain; the others are for targetChain!=refundChain,\r\n     *     where a cross chain refund is necessary, or if the default code path is used where no refund is requested (NO_REFUND_REQUESTED)\r\n     * @custom:member overridesInfo:\r\n     *   - If not an override: empty bytes array\r\n     *   - Otherwise: An encoded `DeliveryOverride`\r\n     */\r\n    event Delivery(\r\n        address indexed recipientContract,\r\n        uint16 indexed sourceChain,\r\n        uint64 indexed sequence,\r\n        bytes32 deliveryVaaHash,\r\n        DeliveryStatus status,\r\n        uint256 gasUsed,\r\n        RefundStatus refundStatus,\r\n        bytes additionalStatusInfo,\r\n        bytes overridesInfo\r\n    );\r\n\r\n    /**\r\n     * @notice The delivery provider calls `deliver` to relay messages as described by one delivery instruction\r\n     *\r\n     * The delivery provider must pass in the specified (by VaaKeys[]) signed wormhole messages (VAAs) from the source chain\r\n     * as well as the signed wormhole message with the delivery instructions (the delivery VAA)\r\n     *\r\n     * The messages will be relayed to the target address (with the specified gas limit and receiver value) iff the following checks are met:\r\n     * - the delivery VAA has a valid signature\r\n     * - the delivery VAA's emitter is one of these WormholeRelayer contracts\r\n     * - the delivery provider passed in at least enough of this chain's currency as msg.value (enough meaning the maximum possible refund)\r\n     * - the instruction's target chain is this chain\r\n     * - the relayed signed VAAs match the descriptions in container.messages (the VAA hashes match, or the emitter address, sequence number pair matches, depending on the description given)\r\n     *\r\n     * @param encodedVMs - An array of signed wormhole messages (all from the same source chain\r\n     *     transaction)\r\n     * @param encodedDeliveryVAA - Signed wormhole message from the source chain's WormholeRelayer\r\n     *     contract with payload being the encoded delivery instruction container\r\n     * @param relayerRefundAddress - The address to which any refunds to the delivery provider\r\n     *     should be sent\r\n     * @param deliveryOverrides - Optional overrides field which must be either an empty bytes array or\r\n     *     an encoded DeliveryOverride struct\r\n     */\r\n    function deliver(\r\n        bytes[] memory encodedVMs,\r\n        bytes memory encodedDeliveryVAA,\r\n        address payable relayerRefundAddress,\r\n        bytes memory deliveryOverrides\r\n    ) external payable;\r\n}\r\n\r\ninterface IWormholeRelayer is IWormholeRelayerDelivery, IWormholeRelayerSend {}\r\n\r\n/*\r\n *  Errors thrown by IWormholeRelayer contract\r\n */\r\n\r\n// Bound chosen by the following formula: `memoryWord * 4 + selectorSize`.\r\n// This means that an error identifier plus four fixed size arguments should be available to developers.\r\n// In the case of a `require` revert with error message, this should provide 2 memory word's worth of data.\r\nuint256 constant RETURNDATA_TRUNCATION_THRESHOLD = 132;\r\n\r\n//When msg.value was not equal to `delivery provider's quoted delivery price` + `paymentForExtraReceiverValue`\r\nerror InvalidMsgValue(uint256 msgValue, uint256 totalFee);\r\n\r\nerror RequestedGasLimitTooLow();\r\n\r\nerror DeliveryProviderDoesNotSupportTargetChain(\r\n    address relayer,\r\n    uint16 chainId\r\n);\r\nerror DeliveryProviderCannotReceivePayment();\r\nerror DeliveryProviderDoesNotSupportMessageKeyType(uint8 keyType);\r\n\r\n//When calling `delivery()` a second time even though a delivery is already in progress\r\nerror ReentrantDelivery(address msgSender, address lockedBy);\r\n\r\nerror InvalidPayloadId(uint8 parsed, uint8 expected);\r\nerror InvalidPayloadLength(uint256 received, uint256 expected);\r\nerror InvalidVaaKeyType(uint8 parsed);\r\nerror TooManyMessageKeys(uint256 numMessageKeys);\r\n\r\nerror InvalidDeliveryVaa(string reason);\r\n//When the delivery VAA (signed wormhole message with delivery instructions) was not emitted by the\r\n//  registered WormholeRelayer contract\r\nerror InvalidEmitter(bytes32 emitter, bytes32 registered, uint16 chainId);\r\nerror MessageKeysLengthDoesNotMatchMessagesLength(uint256 keys, uint256 vaas);\r\nerror VaaKeysDoNotMatchVaas(uint8 index);\r\n//When someone tries to call an external function of the WormholeRelayer that is only intended to be\r\n//  called by the WormholeRelayer itself (to allow retroactive reverts for atomicity)\r\nerror RequesterNotWormholeRelayer();\r\n\r\n//When trying to relay a `DeliveryInstruction` to any other chain but the one it was specified for\r\nerror TargetChainIsNotThisChain(uint16 targetChain);\r\n//When a `DeliveryOverride` contains a gas limit that's less than the original\r\nerror InvalidOverrideGasLimit();\r\n//When a `DeliveryOverride` contains a receiver value that's less than the original\r\nerror InvalidOverrideReceiverValue();\r\n//When a `DeliveryOverride` contains a 'refund per unit of gas unused' that's less than the original\r\nerror InvalidOverrideRefundPerGasUnused();\r\n\r\n//When the delivery provider doesn't pass in sufficient funds (i.e. msg.value does not cover the\r\n// maximum possible refund to the user)\r\nerror InsufficientRelayerFunds(uint256 msgValue, uint256 minimum);\r\n\r\n//When a bytes32 field can't be converted into a 20 byte EVM address, because the 12 padding bytes\r\n//  are non-zero (duplicated from Utils.sol)\r\nerror NotAnEvmAddress(bytes32);\r\n"
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol": {
				"content": "// SPDX-License-Identifier: Apache 2\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @notice Interface for a contract which can receive Wormhole messages.\r\n */\r\ninterface IWormholeReceiver {\r\n    /**\r\n     * @notice When a `send` is performed with this contract as the target, this function will be\r\n     *     invoked by the WormholeRelayer contract\r\n     *\r\n     * NOTE: This function should be restricted such that only the Wormhole Relayer contract can call it.\r\n     *\r\n     * We also recommend that this function checks that `sourceChain` and `sourceAddress` are indeed who\r\n     *       you expect to have requested the calling of `send` on the source chain\r\n     *\r\n     * The invocation of this function corresponding to the `send` request will have msg.value equal\r\n     *   to the receiverValue specified in the send request.\r\n     *\r\n     * If the invocation of this function reverts or exceeds the gas limit\r\n     *   specified by the send requester, this delivery will result in a `ReceiverFailure`.\r\n     *\r\n     * @param payload - an arbitrary message which was included in the delivery by the\r\n     *     requester. This message's signature will already have been verified (as long as msg.sender is the Wormhole Relayer contract)\r\n     * @param additionalMessages - Additional messages which were requested to be included in this delivery.\r\n     *      Note: There are no contract-level guarantees that the messages in this array are what was requested\r\n     *      so **you should verify any sensitive information given here!**\r\n     *\r\n     *      For example, if a 'VaaKey' was specified on the source chain, then MAKE SURE the corresponding message here\r\n     *      has valid signatures (by calling `parseAndVerifyVM(message)` on the Wormhole core contract)\r\n     *\r\n     *      This field can be used to perform and relay TokenBridge or CCTP transfers, and there are example\r\n     *      usages of this at\r\n     *         https://github.com/wormhole-foundation/hello-token\r\n     *         https://github.com/wormhole-foundation/hello-cctp\r\n     *\r\n     * @param sourceAddress - the (wormhole format) address on the sending chain which requested\r\n     *     this delivery.\r\n     * @param sourceChain - the wormhole chain ID where this delivery was requested.\r\n     * @param deliveryHash - the VAA hash of the deliveryVAA.\r\n     *\r\n     */\r\n    function receiveWormholeMessages(\r\n        bytes memory payload,\r\n        bytes[] memory additionalMessages,\r\n        bytes32 sourceAddress,\r\n        uint16 sourceChain,\r\n        bytes32 deliveryHash\r\n    ) external payable;\r\n}\r\n"
			},
			"BRIDGE_PARTNERSHIP/src/TokenBase.sol": {
				"content": "pragma solidity ^0.8.13;\r\n\r\nimport \"./interfaces/IWormholeReceiver.sol\";\r\nimport \"./interfaces/IWormholeRelayer.sol\";\r\nimport \"./interfaces/ITokenBridge.sol\";\r\nimport {IERC20} from \"./interfaces/IERC20.sol\";\r\nimport {Base} from \"./WormholeRelayerSDK.sol\";\r\nimport \"../lib.d.sol\";\r\nimport \"./Utils.sol\";\r\n\r\nabstract contract TokenBase is Base {\r\n    ITokenBridge public tokenBridge;\r\n\r\n    function  _initTokenBase(address _wormholeRelayer,address _tokenBridge,address _wormhole) internal virtual{\r\n        _initBase(_wormholeRelayer , _wormhole);\r\n        tokenBridge = ITokenBridge(_tokenBridge);\r\n    }\r\n}\r\n\r\nabstract contract TokenSender is TokenBase {\r\n\r\n    /**\r\n     * transferTokens wraps common boilerplate for sending tokens to another chain using IWormholeRelayer.\r\n     * A payload can be included in the transfer vaa. By including a payload here instead of the deliveryVaa,\r\n     * fewer trust assumptions are placed on the WormholeRelayer contract.\r\n     *\r\n     * - approves tokenBridge to spend 'amount' of 'token'\r\n     * - emits token transfer VAA\r\n     * - returns VAA key for inclusion in WormholeRelayer `additionalVaas` argument\r\n     *\r\n     * Note: this function uses transferTokensWithPayload instead of transferTokens since the former requires that only the targetAddress\r\n     *       can redeem transfers. Otherwise it's possible for another address to redeem the transfer before the targetContract is invoked by\r\n     *       the offchain relayer and the target contract would have to be hardened against this.\r\n     */\r\n    function transferTokens(\r\n        address token,\r\n        uint256 amount,\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload\r\n    ) internal returns (VaaKey memory) {\r\n        IERC20(token).approve(address(tokenBridge), amount);\r\n        uint64 sequence = tokenBridge.transferTokensWithPayload{\r\n            value: wormhole.messageFee()\r\n        }(\r\n            token,\r\n            amount,\r\n            targetChain,\r\n            toWormholeFormat(targetAddress),\r\n            0,\r\n            payload\r\n        );\r\n        return\r\n            VaaKey({\r\n                emitterAddress: toWormholeFormat(address(tokenBridge)),\r\n                chainId: wormhole.chainId(),\r\n                sequence: sequence\r\n            });\r\n    }\r\n\r\n    // Publishes a wormhole message representing a 'TokenBridge' transfer of 'amount' of 'token'\r\n    // and requests a delivery of the transfer along with 'payload' to 'targetAddress' on 'targetChain'\r\n    //\r\n    // The second step is done by publishing a wormhole message representing a request\r\n    // to call 'receiveWormholeMessages' on the address 'targetAddress' on chain 'targetChain'\r\n    // with the payload 'payload'\r\n\r\n\r\n    function sendTokenWithPayloadToEvm(\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 gasLimit,\r\n        address token,\r\n        uint256 amount,\r\n        uint16 refundChain,\r\n        address refundAddress\r\n    ) internal returns (uint64) {\r\n        VaaKey[] memory vaaKeys = new VaaKey[](1);\r\n        vaaKeys[0] = transferTokens(token, amount, targetChain, targetAddress,bytes(\"\"));\r\n\r\n        (uint256 cost, ) = wormholeRelayer.quoteEVMDeliveryPrice(\r\n            targetChain,\r\n            receiverValue,\r\n            gasLimit\r\n        );\r\n        return\r\n            wormholeRelayer.sendVaasToEvm{value: cost}(\r\n                targetChain,\r\n                targetAddress,\r\n                payload,\r\n                receiverValue,\r\n                gasLimit,\r\n                vaaKeys,\r\n                refundChain,\r\n                refundAddress\r\n            );\r\n    }\r\n}\r\n\r\nabstract contract TokenReceiver is TokenBase {\r\n\r\n    function getDecimals(\r\n        address tokenAddress\r\n    ) internal view returns (uint8 decimals) {\r\n        // query decimals\r\n        (, bytes memory queriedDecimals) = address(tokenAddress).staticcall(\r\n            abi.encodeWithSignature(\"decimals()\")\r\n        );\r\n        decimals = abi.decode(queriedDecimals, (uint8));\r\n    }\r\n\r\n    function getTokenAddressOnThisChain(\r\n        uint16 tokenHomeChain,\r\n        bytes32 tokenHomeAddress\r\n    ) internal view returns (address tokenAddressOnThisChain) {\r\n        return\r\n            tokenHomeChain == wormhole.chainId()\r\n                ? fromWormholeFormat(tokenHomeAddress)\r\n                : tokenBridge.wrappedAsset(tokenHomeChain, tokenHomeAddress);\r\n    }\r\n\r\n    function receiveWormholeMessages(\r\n        bytes memory payload,\r\n        bytes[] memory additionalVaas,\r\n        bytes32 sourceAddress,\r\n        uint16 sourceChain,\r\n        bytes32 deliveryHash\r\n    ) external payable {\r\n        Structs.TokenReceived[] memory receivedTokens = new Structs.TokenReceived[](\r\n            additionalVaas.length\r\n        );\r\n\r\n        for (uint256 i = 0; i < additionalVaas.length; ++i) {\r\n            IWormhole.VM memory parsed = wormhole.parseVM(additionalVaas[i]);\r\n            require(\r\n                parsed.emitterAddress ==\r\n                    tokenBridge.bridgeContracts(parsed.emitterChainId),\r\n                \"Not a Token Bridge VAA\"\r\n            );\r\n            ITokenBridge.TransferWithPayload memory transfer = tokenBridge\r\n                .parseTransferWithPayload(parsed.payload);\r\n            require(\r\n                transfer.to == toWormholeFormat(address(this)) &&\r\n                    transfer.toChain == wormhole.chainId(),\r\n                \"Token was not sent to this address\"\r\n            );\r\n\r\n            tokenBridge.completeTransferWithPayload(additionalVaas[i]);\r\n\r\n            address thisChainTokenAddress = getTokenAddressOnThisChain(\r\n                transfer.tokenChain,\r\n                transfer.tokenAddress\r\n            );\r\n            uint8 decimals = getDecimals(thisChainTokenAddress);\r\n            uint256 denormalizedAmount = transfer.amount;\r\n            if (decimals > 8)\r\n                denormalizedAmount *= uint256(10) ** (decimals - 8);\r\n\r\n            receivedTokens[i] = Structs.TokenReceived({\r\n                tokenHomeAddress: transfer.tokenAddress,\r\n                tokenHomeChain: transfer.tokenChain,\r\n                tokenAddress: thisChainTokenAddress,\r\n                amount: denormalizedAmount,\r\n                amountNormalized: transfer.amount\r\n            });\r\n        }\r\n\r\n        // call into overriden method\r\n        receivePayloadAndTokens(\r\n            payload,\r\n            receivedTokens,\r\n            sourceAddress,\r\n            sourceChain,\r\n            deliveryHash,\r\n            additionalVaas\r\n        );\r\n    }\r\n\r\n    // Implement this function to handle in-bound deliveries that include a TokenBridge transfer\r\n    function receivePayloadAndTokens(\r\n        bytes memory payload,\r\n        Structs.TokenReceived[] memory receivedTokens,\r\n        bytes32 sourceAddress,\r\n        uint16 sourceChain,\r\n        bytes32 deliveryHash,\r\n        bytes[] memory additionalVaas\r\n    ) internal virtual {}\r\n}\r\n"
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/IWETH.sol": {
				"content": "// contracts/Bridge.sol\r\n// SPDX-License-Identifier: Apache 2\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\ninterface IWETH is IERC20 {\r\n    function deposit() external payable;\r\n    function withdraw(uint256 amount) external;\r\n}\r\n"
			},
			"BRIDGE_PARTNERSHIP/src/Utils.sol": {
				"content": "\r\npragma solidity ^0.8.13;\r\n\r\nimport \"./interfaces/IWormholeRelayer.sol\";\r\n\r\nfunction toWormholeFormat(address addr) pure returns (bytes32) {\r\n    return bytes32(uint256(uint160(addr)));\r\n}\r\n\r\nfunction fromWormholeFormat(bytes32 whFormatAddress) pure returns (address) {\r\n    if (uint256(whFormatAddress) >> 160 != 0) {\r\n        revert NotAnEvmAddress(whFormatAddress);\r\n    }\r\n    return address(uint160(uint256(whFormatAddress)));\r\n}\r\n\r\nfunction addressToBytes32CCTP(address addr) pure returns (bytes32) {\r\n        return toWormholeFormat(addr);\r\n}"
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\r\n}\r\n"
			},
			"BRIDGE_PARTNERSHIP/src/WormholeRelayerSDK.sol": {
				"content": "pragma solidity ^0.8.13;\r\n\r\nimport \"./interfaces/IWormholeReceiver.sol\";\r\nimport \"./interfaces/IWormholeRelayer.sol\";\r\nimport \"./Utils.sol\";\r\nimport {Base} from \"./Base.sol\";\r\nimport {TokenBase, TokenReceiver, TokenSender} from \"./TokenBase.sol\";\r\nimport {CCTPBase, CCTPReceiver, CCTPSender} from \"./CCTPBase.sol\";\r\nimport {CCTPAndTokenBase, CCTPAndTokenReceiver, CCTPAndTokenSender} from \"./CCTPAndTokenBase.sol\";\r\n\r\n"
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/ITokenBridge.sol": {
				"content": "// contracts/Bridge.sol\r\n// SPDX-License-Identifier: Apache 2\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IWETH.sol\";\r\nimport \"./IWormhole.sol\";\r\n\r\ninterface ITokenBridge {\r\n    struct Transfer {\r\n        uint8 payloadID;\r\n        uint256 amount;\r\n        bytes32 tokenAddress;\r\n        uint16 tokenChain;\r\n        bytes32 to;\r\n        uint16 toChain;\r\n        uint256 fee;\r\n    }\r\n\r\n    struct TransferWithPayload {\r\n        uint8 payloadID;\r\n        uint256 amount;\r\n        bytes32 tokenAddress;\r\n        uint16 tokenChain;\r\n        bytes32 to;\r\n        uint16 toChain;\r\n        bytes32 fromAddress;\r\n        bytes payload;\r\n    }\r\n\r\n    struct AssetMeta {\r\n        uint8 payloadID;\r\n        bytes32 tokenAddress;\r\n        uint16 tokenChain;\r\n        uint8 decimals;\r\n        bytes32 symbol;\r\n        bytes32 name;\r\n    }\r\n\r\n    struct RegisterChain {\r\n        bytes32 module;\r\n        uint8 action;\r\n        uint16 chainId;\r\n        uint16 emitterChainID;\r\n        bytes32 emitterAddress;\r\n    }\r\n\r\n    struct UpgradeContract {\r\n        bytes32 module;\r\n        uint8 action;\r\n        uint16 chainId;\r\n        bytes32 newContract;\r\n    }\r\n\r\n    struct RecoverChainId {\r\n        bytes32 module;\r\n        uint8 action;\r\n        uint256 evmChainId;\r\n        uint16 newChainId;\r\n    }\r\n\r\n    event ContractUpgraded(address indexed oldContract, address indexed newContract);\r\n\r\n    function _parseTransferCommon(bytes memory encoded) external pure returns (Transfer memory transfer);\r\n\r\n    function attestToken(address tokenAddress, uint32 nonce) external payable returns (uint64 sequence);\r\n\r\n    function wrapAndTransferETH(uint16 recipientChain, bytes32 recipient, uint256 arbiterFee, uint32 nonce)\r\n        external\r\n        payable\r\n        returns (uint64 sequence);\r\n\r\n    function wrapAndTransferETHWithPayload(uint16 recipientChain, bytes32 recipient, uint32 nonce, bytes memory payload)\r\n        external\r\n        payable\r\n        returns (uint64 sequence);\r\n\r\n    function transferTokens(\r\n        address token,\r\n        uint256 amount,\r\n        uint16 recipientChain,\r\n        bytes32 recipient,\r\n        uint256 arbiterFee,\r\n        uint32 nonce\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    function transferTokensWithPayload(\r\n        address token,\r\n        uint256 amount,\r\n        uint16 recipientChain,\r\n        bytes32 recipient,\r\n        uint32 nonce,\r\n        bytes memory payload\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    function updateWrapped(bytes memory encodedVm) external returns (address token);\r\n\r\n    function createWrapped(bytes memory encodedVm) external returns (address token);\r\n\r\n    function completeTransferWithPayload(bytes memory encodedVm) external returns (bytes memory);\r\n\r\n    function completeTransferAndUnwrapETHWithPayload(bytes memory encodedVm) external returns (bytes memory);\r\n\r\n    function completeTransfer(bytes memory encodedVm) external;\r\n\r\n    function completeTransferAndUnwrapETH(bytes memory encodedVm) external;\r\n\r\n    function encodeAssetMeta(AssetMeta memory meta) external pure returns (bytes memory encoded);\r\n\r\n    function encodeTransfer(Transfer memory transfer) external pure returns (bytes memory encoded);\r\n\r\n    function encodeTransferWithPayload(TransferWithPayload memory transfer)\r\n        external\r\n        pure\r\n        returns (bytes memory encoded);\r\n\r\n    function parsePayloadID(bytes memory encoded) external pure returns (uint8 payloadID);\r\n\r\n    function parseAssetMeta(bytes memory encoded) external pure returns (AssetMeta memory meta);\r\n\r\n    function parseTransfer(bytes memory encoded) external pure returns (Transfer memory transfer);\r\n\r\n    function parseTransferWithPayload(bytes memory encoded)\r\n        external\r\n        pure\r\n        returns (TransferWithPayload memory transfer);\r\n\r\n    function governanceActionIsConsumed(bytes32 hash) external view returns (bool);\r\n\r\n    function isInitialized(address impl) external view returns (bool);\r\n\r\n    function isTransferCompleted(bytes32 hash) external view returns (bool);\r\n\r\n    function wormhole() external view returns (IWormhole);\r\n\r\n    function chainId() external view returns (uint16);\r\n\r\n    function evmChainId() external view returns (uint256);\r\n\r\n    function isFork() external view returns (bool);\r\n\r\n    function governanceChainId() external view returns (uint16);\r\n\r\n    function governanceContract() external view returns (bytes32);\r\n\r\n    function wrappedAsset(uint16 tokenChainId, bytes32 tokenAddress) external view returns (address);\r\n\r\n    function bridgeContracts(uint16 chainId_) external view returns (bytes32);\r\n\r\n    function tokenImplementation() external view returns (address);\r\n\r\n    function WETH() external view returns (IWETH);\r\n\r\n    function outstandingBridged(address token) external view returns (uint256);\r\n\r\n    function isWrappedAsset(address token) external view returns (bool);\r\n\r\n    function finality() external view returns (uint8);\r\n\r\n    function implementation() external view returns (address);\r\n\r\n    function initialize() external;\r\n\r\n    function registerChain(bytes memory encodedVM) external;\r\n\r\n    function upgrade(bytes memory encodedVM) external;\r\n\r\n    function submitRecoverChainId(bytes memory encodedVM) external;\r\n\r\n    function parseRegisterChain(bytes memory encoded) external pure returns (RegisterChain memory chain);\r\n\r\n    function parseUpgrade(bytes memory encoded) external pure returns (UpgradeContract memory chain);\r\n\r\n    function parseRecoverChainId(bytes memory encodedRecoverChainId)\r\n        external\r\n        pure\r\n        returns (RecoverChainId memory rci);\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol": {
				"content": "// contracts/Messages.sol\r\n// SPDX-License-Identifier: Apache 2\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IWormhole {\r\n    struct GuardianSet {\r\n        address[] keys;\r\n        uint32 expirationTime;\r\n    }\r\n\r\n    struct Signature {\r\n        bytes32 r;\r\n        bytes32 s;\r\n        uint8 v;\r\n        uint8 guardianIndex;\r\n    }\r\n\r\n    struct VM {\r\n        uint8 version;\r\n        uint32 timestamp;\r\n        uint32 nonce;\r\n        uint16 emitterChainId;\r\n        bytes32 emitterAddress;\r\n        uint64 sequence;\r\n        uint8 consistencyLevel;\r\n        bytes payload;\r\n        uint32 guardianSetIndex;\r\n        Signature[] signatures;\r\n        bytes32 hash;\r\n    }\r\n\r\n    struct ContractUpgrade {\r\n        bytes32 module;\r\n        uint8 action;\r\n        uint16 chain;\r\n        address newContract;\r\n    }\r\n\r\n    struct GuardianSetUpgrade {\r\n        bytes32 module;\r\n        uint8 action;\r\n        uint16 chain;\r\n        GuardianSet newGuardianSet;\r\n        uint32 newGuardianSetIndex;\r\n    }\r\n\r\n    struct SetMessageFee {\r\n        bytes32 module;\r\n        uint8 action;\r\n        uint16 chain;\r\n        uint256 messageFee;\r\n    }\r\n\r\n    struct TransferFees {\r\n        bytes32 module;\r\n        uint8 action;\r\n        uint16 chain;\r\n        uint256 amount;\r\n        bytes32 recipient;\r\n    }\r\n\r\n    struct RecoverChainId {\r\n        bytes32 module;\r\n        uint8 action;\r\n        uint256 evmChainId;\r\n        uint16 newChainId;\r\n    }\r\n\r\n    event LogMessagePublished(\r\n        address indexed sender, uint64 sequence, uint32 nonce, bytes payload, uint8 consistencyLevel\r\n    );\r\n    event ContractUpgraded(address indexed oldContract, address indexed newContract);\r\n    event GuardianSetAdded(uint32 indexed index);\r\n\r\n    function publishMessage(uint32 nonce, bytes memory payload, uint8 consistencyLevel)\r\n        external\r\n        payable\r\n        returns (uint64 sequence);\r\n\r\n    function initialize() external;\r\n\r\n    function parseAndVerifyVM(bytes calldata encodedVM)\r\n        external\r\n        view\r\n        returns (VM memory vm, bool valid, string memory reason);\r\n\r\n    function verifyVM(VM memory vm) external view returns (bool valid, string memory reason);\r\n\r\n    function verifySignatures(bytes32 hash, Signature[] memory signatures, GuardianSet memory guardianSet)\r\n        external\r\n        pure\r\n        returns (bool valid, string memory reason);\r\n\r\n    function parseVM(bytes memory encodedVM) external pure returns (VM memory vm);\r\n\r\n    function quorum(uint256 numGuardians) external pure returns (uint256 numSignaturesRequiredForQuorum);\r\n\r\n    function getGuardianSet(uint32 index) external view returns (GuardianSet memory);\r\n\r\n    function getCurrentGuardianSetIndex() external view returns (uint32);\r\n\r\n    function getGuardianSetExpiry() external view returns (uint32);\r\n\r\n    function governanceActionIsConsumed(bytes32 hash) external view returns (bool);\r\n\r\n    function isInitialized(address impl) external view returns (bool);\r\n\r\n    function chainId() external view returns (uint16);\r\n\r\n    function isFork() external view returns (bool);\r\n\r\n    function governanceChainId() external view returns (uint16);\r\n\r\n    function governanceContract() external view returns (bytes32);\r\n\r\n    function messageFee() external view returns (uint256);\r\n\r\n    function evmChainId() external view returns (uint256);\r\n\r\n    function nextSequence(address emitter) external view returns (uint64);\r\n\r\n    function parseContractUpgrade(bytes memory encodedUpgrade) external pure returns (ContractUpgrade memory cu);\r\n\r\n    function parseGuardianSetUpgrade(bytes memory encodedUpgrade)\r\n        external\r\n        pure\r\n        returns (GuardianSetUpgrade memory gsu);\r\n\r\n    function parseSetMessageFee(bytes memory encodedSetMessageFee) external pure returns (SetMessageFee memory smf);\r\n\r\n    function parseTransferFees(bytes memory encodedTransferFees) external pure returns (TransferFees memory tf);\r\n\r\n    function parseRecoverChainId(bytes memory encodedRecoverChainId)\r\n        external\r\n        pure\r\n        returns (RecoverChainId memory rci);\r\n\r\n    function submitContractUpgrade(bytes memory _vm) external;\r\n\r\n    function submitSetMessageFee(bytes memory _vm) external;\r\n\r\n    function submitNewGuardianSet(bytes memory _vm) external;\r\n\r\n    function submitTransferFees(bytes memory _vm) external;\r\n\r\n    function submitRecoverChainId(bytes memory _vm) external;\r\n}\r\n"
			},
			"BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol": {
				"content": "pragma solidity ^0.8.13;\r\n\r\nimport \"./interfaces/IWormholeReceiver.sol\";\r\nimport \"./interfaces/IWormholeRelayer.sol\";\r\nimport \"./interfaces/ITokenBridge.sol\";\r\nimport {IERC20} from \"./interfaces/IERC20.sol\";\r\nimport \"./interfaces/CCTPInterfaces/ITokenMessenger.sol\";\r\nimport \"./interfaces/CCTPInterfaces/IMessageTransmitter.sol\";\r\n\r\nimport \"./Utils.sol\";\r\nimport \"./TokenBase.sol\";\r\nimport \"./CCTPBase.sol\";\r\n\r\nabstract contract CCTPAndTokenBase is CCTPBase {\r\n    ITokenBridge public tokenBridge;\r\n\r\n    enum Transfer {\r\n        TOKEN_BRIDGE,\r\n        CCTP\r\n    }\r\n\r\n    function _initCCTP(\r\n        address _wormholeRelayer,\r\n        address _tokenBridge,\r\n        address _wormhole,\r\n        address _circleMessageTransmitter,\r\n        address _circleTokenMessenger,\r\n        address _USDC\r\n    )\r\n    internal\r\n    {\r\n        _initCCTPBase(\r\n            _wormholeRelayer,\r\n            _wormhole,\r\n            _circleMessageTransmitter,\r\n            _circleTokenMessenger,\r\n            _USDC\r\n        );\r\n        tokenBridge = ITokenBridge(_tokenBridge);\r\n    }\r\n}\r\n\r\nabstract contract CCTPAndTokenSender is CCTPAndTokenBase {\r\n    // CCTP Sender functions, taken from \"./CCTPBase.sol\"\r\n\r\n    uint8 internal constant CONSISTENCY_LEVEL_FINALIZED = 15;\r\n\r\n    using CCTPMessageLib for *;\r\n\r\n    mapping(uint16 => uint32) public chainIdToCCTPDomain;\r\n\r\n    /**\r\n     * Sets the CCTP Domain corresponding to chain 'chain' to be 'cctpDomain'\r\n     * So that transfers of USDC to chain 'chain' use the target CCTP domain 'cctpDomain'\r\n     *\r\n     * This action can only be performed by 'cctpConfigurationOwner', who is set to be the deployer\r\n     *\r\n     * Currently, cctp domains are:\r\n     * Ethereum: Wormhole chain id 2, cctp domain 0\r\n     * Avalanche: Wormhole chain id 6, cctp domain 1\r\n     * Optimism: Wormhole chain id 24, cctp domain 2\r\n     * Arbitrum: Wormhole chain id 23, cctp domain 3\r\n     * Base: Wormhole chain id 30, cctp domain 6\r\n     *\r\n     * These can be set via:\r\n     * setCCTPDomain(2, 0);\r\n     * setCCTPDomain(6, 1);\r\n     * setCCTPDomain(24, 2);\r\n     * setCCTPDomain(23, 3);\r\n     * setCCTPDomain(30, 6);\r\n     */\r\n    function setCCTPDomain(uint16 chain, uint32 cctpDomain) public {\r\n        require(\r\n            msg.sender == cctpConfigurationOwner,\r\n            \"Not allowed to set CCTP Domain\"\r\n        );\r\n        chainIdToCCTPDomain[chain] = cctpDomain;\r\n    }\r\n\r\n    function getCCTPDomain(uint16 chain) internal view returns (uint32) {\r\n        return chainIdToCCTPDomain[chain];\r\n    }\r\n\r\n    /**\r\n     * transferUSDC wraps common boilerplate for sending tokens to another chain using IWormholeRelayer\r\n     * - approves the Circle TokenMessenger contract to spend 'amount' of USDC\r\n     * - calls Circle's 'depositForBurnWithCaller'\r\n     * - returns key for inclusion in WormholeRelayer `additionalVaas` argument\r\n     *\r\n     * Note: this requires that only the targetAddress can redeem transfers.\r\n     *\r\n     */\r\n\r\n    function transferUSDC(\r\n        uint256 amount,\r\n        uint16 targetChain,\r\n        address targetAddress\r\n    ) internal returns (MessageKey memory) {\r\n        IERC20(USDC).approve(address(circleTokenMessenger), amount);\r\n        bytes32 targetAddressBytes32 = addressToBytes32CCTP(targetAddress);\r\n        uint64 nonce = circleTokenMessenger.depositForBurnWithCaller(\r\n            amount,\r\n            getCCTPDomain(targetChain),\r\n            targetAddressBytes32,\r\n            USDC,\r\n            targetAddressBytes32\r\n        );\r\n        return\r\n            MessageKey(\r\n                CCTPMessageLib.CCTP_KEY_TYPE,\r\n                abi.encodePacked(getCCTPDomain(wormhole.chainId()), nonce)\r\n            );\r\n    }\r\n\r\n    // Publishes a CCTP transfer of 'amount' of USDC\r\n    // and requests a delivery of the transfer along with 'payload' to 'targetAddress' on 'targetChain'\r\n    //\r\n    // The second step is done by publishing a wormhole message representing a request\r\n    // to call 'receiveWormholeMessages' on the address 'targetAddress' on chain 'targetChain'\r\n    // with the payload 'abi.encode(Transfer.CCTP, amount, payload)'\r\n    // (we encode a Transfer enum to distinguish this from a TokenBridge transfer)\r\n    // (and we encode the amount so it can be checked on the target chain)\r\n    function sendUSDCWithPayloadToEvm(\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 gasLimit,\r\n        uint256 amount\r\n    ) internal returns (uint64 sequence) {\r\n        MessageKey[] memory messageKeys = new MessageKey[](1);\r\n        messageKeys[0] = transferUSDC(amount, targetChain, targetAddress);\r\n\r\n        bytes memory userPayload = abi.encode(Transfer.CCTP, amount, payload);\r\n        address defaultDeliveryProvider = wormholeRelayer\r\n            .getDefaultDeliveryProvider();\r\n\r\n        (uint256 cost, ) = wormholeRelayer.quoteEVMDeliveryPrice(\r\n            targetChain,\r\n            receiverValue,\r\n            gasLimit\r\n        );\r\n\r\n        sequence = wormholeRelayer.sendToEvm{value: cost}(\r\n            targetChain,\r\n            targetAddress,\r\n            userPayload,\r\n            receiverValue,\r\n            0,\r\n            gasLimit,\r\n            targetChain,\r\n            address(0x0),\r\n            defaultDeliveryProvider,\r\n            messageKeys,\r\n            CONSISTENCY_LEVEL_FINALIZED\r\n        );\r\n    }\r\n\r\n    // TokenBridge Sender functions, taken from \"./TokenBase.sol\"\r\n\r\n    /**\r\n     * transferTokens wraps common boilerplate for sending tokens to another chain using IWormholeRelayer\r\n     * - approves tokenBridge to spend 'amount' of 'token'\r\n     * - emits token transfer VAA\r\n     * - returns VAA key for inclusion in WormholeRelayer `additionalVaas` argument\r\n     *\r\n     * Note: this function uses transferTokensWithPayload instead of transferTokens since the former requires that only the targetAddress\r\n     *       can redeem transfers. Otherwise it's possible for another address to redeem the transfer before the targetContract is invoked by\r\n     *       the offchain relayer and the target contract would have to be hardened against this.\r\n     *\r\n     */\r\n    function transferTokens(\r\n        address token,\r\n        uint256 amount,\r\n        uint16 targetChain,\r\n        address targetAddress\r\n    ) internal returns (VaaKey memory) {\r\n        return\r\n            transferTokens(\r\n                token,\r\n                amount,\r\n                targetChain,\r\n                targetAddress,\r\n                bytes(\"\")\r\n            );\r\n    }\r\n\r\n    /**\r\n     * transferTokens wraps common boilerplate for sending tokens to another chain using IWormholeRelayer.\r\n     * A payload can be included in the transfer vaa. By including a payload here instead of the deliveryVaa,\r\n     * fewer trust assumptions are placed on the WormholeRelayer contract.\r\n     *\r\n     * - approves tokenBridge to spend 'amount' of 'token'\r\n     * - emits token transfer VAA\r\n     * - returns VAA key for inclusion in WormholeRelayer `additionalVaas` argument\r\n     *\r\n     * Note: this function uses transferTokensWithPayload instead of transferTokens since the former requires that only the targetAddress\r\n     *       can redeem transfers. Otherwise it's possible for another address to redeem the transfer before the targetContract is invoked by\r\n     *       the offchain relayer and the target contract would have to be hardened against this.\r\n     */\r\n    function transferTokens(\r\n        address token,\r\n        uint256 amount,\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload\r\n    ) internal returns (VaaKey memory) {\r\n        IERC20(token).approve(address(tokenBridge), amount);\r\n        uint64 sequence = tokenBridge.transferTokensWithPayload{\r\n            value: wormhole.messageFee()\r\n        }(\r\n            token,\r\n            amount,\r\n            targetChain,\r\n            toWormholeFormat(targetAddress),\r\n            0,\r\n            payload\r\n        );\r\n        return\r\n            VaaKey({\r\n                emitterAddress: toWormholeFormat(address(tokenBridge)),\r\n                chainId: wormhole.chainId(),\r\n                sequence: sequence\r\n            });\r\n    }\r\n\r\n    // Publishes a wormhole message representing a 'TokenBridge' transfer of 'amount' of 'token'\r\n    // and requests a delivery of the transfer along with 'payload' to 'targetAddress' on 'targetChain'\r\n    //\r\n    // The second step is done by publishing a wormhole message representing a request\r\n    // to call 'receiveWormholeMessages' on the address 'targetAddress' on chain 'targetChain'\r\n    // with the payload 'abi.encode(Transfer.TOKEN_BRIDGE, payload)'\r\n    // (we encode a Transfer enum to distinguish this from a CCTP transfer)\r\n    function sendTokenWithPayloadToEvm(\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 gasLimit,\r\n        address token,\r\n        uint256 amount\r\n    ) internal returns (uint64) {\r\n        VaaKey[] memory vaaKeys = new VaaKey[](1);\r\n        vaaKeys[0] = transferTokens(token, amount, targetChain, targetAddress);\r\n\r\n        (uint256 cost, ) = wormholeRelayer.quoteEVMDeliveryPrice(\r\n            targetChain,\r\n            receiverValue,\r\n            gasLimit\r\n        );\r\n        return\r\n            wormholeRelayer.sendVaasToEvm{value: cost}(\r\n                targetChain,\r\n                targetAddress,\r\n                abi.encode(Transfer.TOKEN_BRIDGE, payload),\r\n                receiverValue,\r\n                gasLimit,\r\n                vaaKeys\r\n            );\r\n    }\r\n\r\n    function sendTokenWithPayloadToEvm(\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 gasLimit,\r\n        address token,\r\n        uint256 amount,\r\n        uint16 refundChain,\r\n        address refundAddress\r\n    ) internal returns (uint64) {\r\n        VaaKey[] memory vaaKeys = new VaaKey[](1);\r\n        vaaKeys[0] = transferTokens(token, amount, targetChain, targetAddress);\r\n\r\n        (uint256 cost, ) = wormholeRelayer.quoteEVMDeliveryPrice(\r\n            targetChain,\r\n            receiverValue,\r\n            gasLimit\r\n        );\r\n        return\r\n            wormholeRelayer.sendVaasToEvm{value: cost}(\r\n                targetChain,\r\n                targetAddress,\r\n                abi.encode(Transfer.TOKEN_BRIDGE, payload),\r\n                receiverValue,\r\n                gasLimit,\r\n                vaaKeys,\r\n                refundChain,\r\n                refundAddress\r\n            );\r\n    }\r\n}\r\n\r\nabstract contract CCTPAndTokenReceiver is CCTPAndTokenBase {\r\n    function redeemUSDC(\r\n        bytes memory cctpMessage\r\n    ) internal returns (uint256 amount) {\r\n        (bytes memory message, bytes memory signature) = abi.decode(\r\n            cctpMessage,\r\n            (bytes, bytes)\r\n        );\r\n        uint256 beforeBalance = IERC20(USDC).balanceOf(address(this));\r\n        circleMessageTransmitter.receiveMessage(message, signature);\r\n        return IERC20(USDC).balanceOf(address(this)) - beforeBalance;\r\n    }\r\n\r\n    struct TokenReceived {\r\n        bytes32 tokenHomeAddress;\r\n        uint16 tokenHomeChain;\r\n        address tokenAddress; // wrapped address if tokenHomeChain !== this chain, else tokenHomeAddress (in evm address format)\r\n        uint256 amount;\r\n        uint256 amountNormalized; // if decimals > 8, normalized to 8 decimal places\r\n    }\r\n\r\n    function getDecimals(\r\n        address tokenAddress\r\n    ) internal view returns (uint8 decimals) {\r\n        // query decimals\r\n        (, bytes memory queriedDecimals) = address(tokenAddress).staticcall(\r\n            abi.encodeWithSignature(\"decimals()\")\r\n        );\r\n        decimals = abi.decode(queriedDecimals, (uint8));\r\n    }\r\n\r\n    function getTokenAddressOnThisChain(\r\n        uint16 tokenHomeChain,\r\n        bytes32 tokenHomeAddress\r\n    ) internal view returns (address tokenAddressOnThisChain) {\r\n        return\r\n            tokenHomeChain == wormhole.chainId()\r\n                ? fromWormholeFormat(tokenHomeAddress)\r\n                : tokenBridge.wrappedAsset(tokenHomeChain, tokenHomeAddress);\r\n    }\r\n\r\n    function receiveWormholeMessages(\r\n        bytes memory payload,\r\n        bytes[] memory additionalMessages,\r\n        bytes32 sourceAddress,\r\n        uint16 sourceChain,\r\n        bytes32 deliveryHash\r\n    ) external payable {\r\n        Transfer transferType = abi.decode(payload, (Transfer));\r\n        if (transferType == Transfer.TOKEN_BRIDGE) {\r\n            TokenReceived[] memory receivedTokens = new TokenReceived[](\r\n                additionalMessages.length\r\n            );\r\n\r\n            for (uint256 i = 0; i < additionalMessages.length; ++i) {\r\n                IWormhole.VM memory parsed = wormhole.parseVM(\r\n                    additionalMessages[i]\r\n                );\r\n                require(\r\n                    parsed.emitterAddress ==\r\n                        tokenBridge.bridgeContracts(parsed.emitterChainId),\r\n                    \"Not a Token Bridge VAA\"\r\n                );\r\n                ITokenBridge.TransferWithPayload memory transfer = tokenBridge\r\n                    .parseTransferWithPayload(parsed.payload);\r\n                require(\r\n                    transfer.to == toWormholeFormat(address(this)) &&\r\n                        transfer.toChain == wormhole.chainId(),\r\n                    \"Token was not sent to this address\"\r\n                );\r\n\r\n                tokenBridge.completeTransferWithPayload(additionalMessages[i]);\r\n\r\n                address thisChainTokenAddress = getTokenAddressOnThisChain(\r\n                    transfer.tokenChain,\r\n                    transfer.tokenAddress\r\n                );\r\n                uint8 decimals = getDecimals(thisChainTokenAddress);\r\n                uint256 denormalizedAmount = transfer.amount;\r\n                if (decimals > 8)\r\n                    denormalizedAmount *= uint256(10) ** (decimals - 8);\r\n\r\n                receivedTokens[i] = TokenReceived({\r\n                    tokenHomeAddress: transfer.tokenAddress,\r\n                    tokenHomeChain: transfer.tokenChain,\r\n                    tokenAddress: thisChainTokenAddress,\r\n                    amount: denormalizedAmount,\r\n                    amountNormalized: transfer.amount\r\n                });\r\n            }\r\n\r\n            (, bytes memory userPayload) = abi.decode(\r\n                payload,\r\n                (Transfer, bytes)\r\n            );\r\n\r\n            // call into overriden method\r\n            receivePayloadAndTokens(\r\n                userPayload,\r\n                receivedTokens,\r\n                sourceAddress,\r\n                sourceChain,\r\n                deliveryHash\r\n            );\r\n        } else if (transferType == Transfer.CCTP) {\r\n            // Currently, 'sendUSDCWithPayloadToEVM' only sends one CCTP transfer\r\n            // That can be modified if the integrator desires to send multiple CCTP transfers\r\n            // in which case the following code would have to be modified to support\r\n            // redeeming these multiple transfers and checking that their 'amount's are accurate\r\n            require(\r\n                additionalMessages.length <= 1,\r\n                \"CCTP: At most one Message is supported\"\r\n            );\r\n\r\n            uint256 amountUSDCReceived;\r\n            if (additionalMessages.length == 1) {\r\n                amountUSDCReceived = redeemUSDC(additionalMessages[0]);\r\n            }\r\n\r\n            (, uint256 amount, bytes memory userPayload) = abi.decode(\r\n                payload,\r\n                (Transfer, uint256, bytes)\r\n            );\r\n\r\n            // Check that the correct amount was received\r\n            // It is important to verify that the 'USDC' sent in by the relayer is the same amount\r\n            // that the sender sent in on the source chain\r\n            require(amount == amountUSDCReceived, \"Wrong amount received\");\r\n\r\n            receivePayloadAndUSDC(\r\n                userPayload,\r\n                amountUSDCReceived,\r\n                sourceAddress,\r\n                sourceChain,\r\n                deliveryHash\r\n            );\r\n        } else {\r\n            revert(\"Invalid transfer type\");\r\n        }\r\n    }\r\n\r\n    // Implement this function to handle in-bound deliveries that include a CCTP transfer\r\n    function receivePayloadAndUSDC(\r\n        bytes memory payload,\r\n        uint256 amountUSDCReceived,\r\n        bytes32 sourceAddress,\r\n        uint16 sourceChain,\r\n        bytes32 deliveryHash\r\n    ) internal virtual {}\r\n\r\n    // Implement this function to handle in-bound deliveries that include a TokenBridge transfer\r\n    function receivePayloadAndTokens(\r\n        bytes memory payload,\r\n        TokenReceived[] memory receivedTokens,\r\n        bytes32 sourceAddress,\r\n        uint16 sourceChain,\r\n        bytes32 deliveryHash\r\n    ) internal virtual {}\r\n}\r\n"
			},
			"BRIDGE_PARTNERSHIP/src/CCTPBase.sol": {
				"content": "pragma solidity ^0.8.13;\r\n\r\nimport \"./interfaces/IWormholeReceiver.sol\";\r\nimport \"./interfaces/IWormholeRelayer.sol\";\r\nimport {IERC20} from \"./interfaces/IERC20.sol\";\r\nimport \"./interfaces/CCTPInterfaces/ITokenMessenger.sol\";\r\nimport \"./interfaces/CCTPInterfaces/IMessageTransmitter.sol\";\r\n\r\nimport \"./Utils.sol\";\r\nimport \"./Base.sol\";\r\n\r\nlibrary CCTPMessageLib {\r\n    // The second standardized key type is a CCTP Key\r\n    // representing a CCTP transfer of USDC\r\n    // (on the IWormholeRelayer interface)\r\n\r\n    // Note - the default delivery provider only will relay CCTP transfers that were sent\r\n    // in the same transaction that this message was emitted!\r\n    // (This will always be the case if 'CCTPSender' is used)\r\n\r\n    uint8 constant CCTP_KEY_TYPE = 2;\r\n\r\n    // encoded using abi.encodePacked(domain, nonce)\r\n    struct CCTPKey {\r\n        uint32 domain;\r\n        uint64 nonce;\r\n    }\r\n\r\n    // encoded using abi.encode(message, signature)\r\n    struct CCTPMessage {\r\n        bytes message;\r\n        bytes signature;\r\n    }\r\n}\r\n\r\nabstract contract CCTPBase is Base {\r\n    ITokenMessenger circleTokenMessenger;\r\n    IMessageTransmitter circleMessageTransmitter;\r\n    address USDC;\r\n    address cctpConfigurationOwner;\r\n\r\n    function _initCCTPBase(\r\n        address _wormholeRelayer,\r\n        address _wormhole,\r\n        address _circleMessageTransmitter,\r\n        address _circleTokenMessenger,\r\n        address _USDC\r\n    ) internal{\r\n        _initBase(_wormholeRelayer , _wormhole);\r\n        circleTokenMessenger = ITokenMessenger(_circleTokenMessenger);\r\n        circleMessageTransmitter = IMessageTransmitter(\r\n            _circleMessageTransmitter\r\n        );\r\n        USDC = _USDC;\r\n        cctpConfigurationOwner = msg.sender;\r\n    }\r\n}\r\n\r\nabstract contract CCTPSender is CCTPBase {\r\n    uint8 internal constant CONSISTENCY_LEVEL_FINALIZED = 15;\r\n\r\n    using CCTPMessageLib for *;\r\n\r\n    mapping(uint16 => uint32) public chainIdToCCTPDomain;\r\n\r\n    /**\r\n     * Sets the CCTP Domain corresponding to chain 'chain' to be 'cctpDomain'\r\n     * So that transfers of USDC to chain 'chain' use the target CCTP domain 'cctpDomain'\r\n     *\r\n     * This action can only be performed by 'cctpConfigurationOwner', who is set to be the deployer\r\n     *\r\n     * Currently, cctp domains are:\r\n     * Ethereum: Wormhole chain id 2, cctp domain 0\r\n     * Avalanche: Wormhole chain id 6, cctp domain 1\r\n     * Optimism: Wormhole chain id 24, cctp domain 2\r\n     * Arbitrum: Wormhole chain id 23, cctp domain 3\r\n     * Base: Wormhole chain id 30, cctp domain 6\r\n     *\r\n     * These can be set via:\r\n     * setCCTPDomain(2, 0);\r\n     * setCCTPDomain(6, 1);\r\n     * setCCTPDomain(24, 2);\r\n     * setCCTPDomain(23, 3);\r\n     * setCCTPDomain(30, 6);\r\n     */\r\n    function setCCTPDomain(uint16 chain, uint32 cctpDomain) public {\r\n        require(\r\n            msg.sender == cctpConfigurationOwner,\r\n            \"Not allowed to set CCTP Domain\"\r\n        );\r\n        chainIdToCCTPDomain[chain] = cctpDomain;\r\n    }\r\n\r\n    function getCCTPDomain(uint16 chain) internal view returns (uint32) {\r\n        return chainIdToCCTPDomain[chain];\r\n    }\r\n\r\n    /**\r\n     * transferUSDC wraps common boilerplate for sending tokens to another chain using IWormholeRelayer\r\n     * - approves the Circle TokenMessenger contract to spend 'amount' of USDC\r\n     * - calls Circle's 'depositForBurnWithCaller'\r\n     * - returns key for inclusion in WormholeRelayer `additionalVaas` argument\r\n     *\r\n     * Note: this requires that only the targetAddress can redeem transfers.\r\n     *\r\n     */\r\n\r\n    function transferUSDC(\r\n        uint256 amount,\r\n        uint16 targetChain,\r\n        address targetAddress\r\n    ) internal returns (MessageKey memory) {\r\n        IERC20(USDC).approve(address(circleTokenMessenger), amount);\r\n        bytes32 targetAddressBytes32 = addressToBytes32CCTP(targetAddress);\r\n        uint64 nonce = circleTokenMessenger.depositForBurnWithCaller(\r\n            amount,\r\n            getCCTPDomain(targetChain),\r\n            targetAddressBytes32,\r\n            USDC,\r\n            targetAddressBytes32\r\n        );\r\n        return\r\n            MessageKey(\r\n                CCTPMessageLib.CCTP_KEY_TYPE,\r\n                abi.encodePacked(getCCTPDomain(wormhole.chainId()), nonce)\r\n            );\r\n    }\r\n\r\n    // Publishes a CCTP transfer of 'amount' of USDC\r\n    // and requests a delivery of the transfer along with 'payload' to 'targetAddress' on 'targetChain'\r\n    //\r\n    // The second step is done by publishing a wormhole message representing a request\r\n    // to call 'receiveWormholeMessages' on the address 'targetAddress' on chain 'targetChain'\r\n    // with the payload 'abi.encode(amount, payload)'\r\n    // (and we encode the amount so it can be checked on the target chain)\r\n    function sendUSDCWithPayloadToEvm(\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 gasLimit,\r\n        uint256 amount\r\n    ) internal returns (uint64 sequence) {\r\n        MessageKey[] memory messageKeys = new MessageKey[](1);\r\n        messageKeys[0] = transferUSDC(amount, targetChain, targetAddress);\r\n\r\n        bytes memory userPayload = abi.encode(amount, payload);\r\n        address defaultDeliveryProvider = wormholeRelayer\r\n            .getDefaultDeliveryProvider();\r\n\r\n        (uint256 cost, ) = wormholeRelayer.quoteEVMDeliveryPrice(\r\n            targetChain,\r\n            receiverValue,\r\n            gasLimit\r\n        );\r\n\r\n        sequence = wormholeRelayer.sendToEvm{value: cost}(\r\n            targetChain,\r\n            targetAddress,\r\n            userPayload,\r\n            receiverValue,\r\n            0,\r\n            gasLimit,\r\n            targetChain,\r\n            address(0x0),\r\n            defaultDeliveryProvider,\r\n            messageKeys,\r\n            CONSISTENCY_LEVEL_FINALIZED\r\n        );\r\n    }\r\n}\r\n\r\nabstract contract CCTPReceiver is CCTPBase {\r\n    function redeemUSDC(\r\n        bytes memory cctpMessage\r\n    ) internal returns (uint256 amount) {\r\n        (bytes memory message, bytes memory signature) = abi.decode(\r\n            cctpMessage,\r\n            (bytes, bytes)\r\n        );\r\n        uint256 beforeBalance = IERC20(USDC).balanceOf(address(this));\r\n        circleMessageTransmitter.receiveMessage(message, signature);\r\n        return IERC20(USDC).balanceOf(address(this)) - beforeBalance;\r\n    }\r\n\r\n    function receiveWormholeMessages(\r\n        bytes memory payload,\r\n        bytes[] memory additionalMessages,\r\n        bytes32 sourceAddress,\r\n        uint16 sourceChain,\r\n        bytes32 deliveryHash\r\n    ) external payable {\r\n        // Currently, 'sendUSDCWithPayloadToEVM' only sends one CCTP transfer\r\n        // That can be modified if the integrator desires to send multiple CCTP transfers\r\n        // in which case the following code would have to be modified to support\r\n        // redeeming these multiple transfers and checking that their 'amount's are accurate\r\n        require(\r\n            additionalMessages.length <= 1,\r\n            \"CCTP: At most one Message is supported\"\r\n        );\r\n\r\n        uint256 amountUSDCReceived;\r\n        if (additionalMessages.length == 1) {\r\n            amountUSDCReceived = redeemUSDC(additionalMessages[0]);\r\n        }\r\n\r\n        (uint256 amount, bytes memory userPayload) = abi.decode(\r\n            payload,\r\n            (uint256, bytes)\r\n        );\r\n\r\n        // Check that the correct amount was received\r\n        // It is important to verify that the 'USDC' sent in by the relayer is the same amount\r\n        // that the sender sent in on the source chain\r\n        require(amount == amountUSDCReceived, \"Wrong amount received\");\r\n\r\n        receivePayloadAndUSDC(\r\n            userPayload,\r\n            amountUSDCReceived,\r\n            sourceAddress,\r\n            sourceChain,\r\n            deliveryHash\r\n        );\r\n    }\r\n\r\n    // Implement this function to handle in-bound deliveries that include a CCTP transfer\r\n    function receivePayloadAndUSDC(\r\n        bytes memory payload,\r\n        uint256 amountUSDCReceived,\r\n        bytes32 sourceAddress,\r\n        uint16 sourceChain,\r\n        bytes32 deliveryHash\r\n    ) internal virtual {}\r\n}\r\n"
			},
			"BRIDGE_PARTNERSHIP/src/Base.sol": {
				"content": "pragma solidity ^0.8.13;\r\n\r\nimport \"./interfaces/IWormholeReceiver.sol\";\r\nimport \"./interfaces/IWormholeRelayer.sol\";\r\nimport \"./interfaces/IWormhole.sol\";\r\nimport \"./Utils.sol\";\r\n\r\nabstract contract Base {\r\n    IWormholeRelayer public wormholeRelayer;\r\n    IWormhole public wormhole;\r\n\r\n    address registrationOwner;\r\n    mapping(uint16 => bytes32) registeredSenders;\r\n\r\n    function _initBase(address _wormholeRelayer,address _wormhole) internal{\r\n        wormholeRelayer = IWormholeRelayer(_wormholeRelayer);\r\n        wormhole = IWormhole(_wormhole);\r\n        registrationOwner = msg.sender;\r\n    }\r\n\r\n    modifier onlyWormholeRelayer() {\r\n        require(\r\n            msg.sender == address(wormholeRelayer),\r\n            \"Msg.sender is not Wormhole Relayer\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier isRegisteredSender(uint16 sourceChain, bytes32 sourceAddress) {\r\n        require(\r\n            registeredSenders[sourceChain] == sourceAddress,\r\n            \"Not registered sender\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * Sets the registered address for 'sourceChain' to 'sourceAddress'\r\n     * So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid\r\n     *\r\n     * Assumes only one sender per chain is valid\r\n     * Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\r\n     */\r\n    function setRegisteredSender(\r\n        uint16 sourceChain,\r\n        bytes32 sourceAddress\r\n    ) public {\r\n        require(\r\n            msg.sender == registrationOwner,\r\n            \"Not allowed to set registered sender\"\r\n        );\r\n        registeredSenders[sourceChain] = sourceAddress;\r\n    }\r\n}\r\n"
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol": {
				"content": "/*\r\n * Copyright (c) 2022, Circle Internet Financial Limited.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IRelayer.sol\";\r\nimport \"./IReceiver.sol\";\r\n\r\n/**\r\n * @title IMessageTransmitter\r\n * @notice Interface for message transmitters, which both relay and receive messages.\r\n */\r\ninterface IMessageTransmitter is IRelayer, IReceiver {\r\n\r\n}\r\n"
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol": {
				"content": "\r\npragma solidity ^0.8.0;\r\n\r\ninterface ITokenMessenger {\r\n   /**\r\n     * @notice Deposits and burns tokens from sender to be minted on destination domain. The mint\r\n     * on the destination domain must be called by `destinationCaller`.\r\n     * WARNING: if the `destinationCaller` does not represent a valid address as bytes32, then it will not be possible\r\n     * to broadcast the message on the destination domain. This is an advanced feature, and the standard\r\n     * depositForBurn() should be preferred for use cases where a specific destination caller is not required.\r\n     * Emits a `DepositForBurn` event.\r\n     * @dev reverts if:\r\n     * - given destinationCaller is zero address\r\n     * - given burnToken is not supported\r\n     * - given destinationDomain has no TokenMessenger registered\r\n     * - transferFrom() reverts. For example, if sender's burnToken balance or approved allowance\r\n     * to this contract is less than `amount`.\r\n     * - burn() reverts. For example, if `amount` is 0.\r\n     * - MessageTransmitter returns false or reverts.\r\n     * @param amount amount of tokens to burn\r\n     * @param destinationDomain destination domain\r\n     * @param mintRecipient address of mint recipient on destination domain\r\n     * @param burnToken address of contract to burn deposited tokens, on local domain\r\n     * @param destinationCaller caller on the destination domain, as bytes32\r\n     * @return nonce unique nonce reserved by message\r\n     */\r\n    function depositForBurnWithCaller(\r\n        uint256 amount,\r\n        uint32 destinationDomain,\r\n        bytes32 mintRecipient,\r\n        address burnToken,\r\n        bytes32 destinationCaller\r\n    ) external returns (uint64 nonce);\r\n}\r\n"
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol": {
				"content": "/*\r\n * Copyright (c) 2022, Circle Internet Financial Limited.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title IReceiver\r\n * @notice Receives messages on destination chain and forwards them to IMessageDestinationHandler\r\n */\r\ninterface IReceiver {\r\n    /**\r\n     * @notice Receives an incoming message, validating the header and passing\r\n     * the body to application-specific handler.\r\n     * @param message The message raw bytes\r\n     * @param signature The message signature\r\n     * @return success bool, true if successful\r\n     */\r\n    function receiveMessage(bytes calldata message, bytes calldata signature)\r\n        external\r\n        returns (bool success);\r\n}\r\n"
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol": {
				"content": "/*\r\n * Copyright (c) 2022, Circle Internet Financial Limited.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title IRelayer\r\n * @notice Sends messages from source domain to destination domain\r\n */\r\ninterface IRelayer {\r\n    /**\r\n     * @notice Sends an outgoing message from the source domain.\r\n     * @dev Increment nonce, format the message, and emit `MessageSent` event with message information.\r\n     * @param destinationDomain Domain of destination chain\r\n     * @param recipient Address of message recipient on destination domain as bytes32\r\n     * @param messageBody Raw bytes content of message\r\n     * @return nonce reserved by message\r\n     */\r\n    function sendMessage(\r\n        uint32 destinationDomain,\r\n        bytes32 recipient,\r\n        bytes calldata messageBody\r\n    ) external returns (uint64);\r\n\r\n    /**\r\n     * @notice Sends an outgoing message from the source domain, with a specified caller on the\r\n     * destination domain.\r\n     * @dev Increment nonce, format the message, and emit `MessageSent` event with message information.\r\n     * WARNING: if the `destinationCaller` does not represent a valid address as bytes32, then it will not be possible\r\n     * to broadcast the message on the destination domain. This is an advanced feature, and the standard\r\n     * sendMessage() should be preferred for use cases where a specific destination caller is not required.\r\n     * @param destinationDomain Domain of destination chain\r\n     * @param recipient Address of message recipient on destination domain as bytes32\r\n     * @param destinationCaller caller on the destination domain, as bytes32\r\n     * @param messageBody Raw bytes content of message\r\n     * @return nonce reserved by message\r\n     */\r\n    function sendMessageWithCaller(\r\n        uint32 destinationDomain,\r\n        bytes32 recipient,\r\n        bytes32 destinationCaller,\r\n        bytes calldata messageBody\r\n    ) external returns (uint64);\r\n\r\n    /**\r\n     * @notice Replace a message with a new message body and/or destination caller.\r\n     * @dev The `originalAttestation` must be a valid attestation of `originalMessage`.\r\n     * @param originalMessage original message to replace\r\n     * @param originalAttestation attestation of `originalMessage`\r\n     * @param newMessageBody new message body of replaced message\r\n     * @param newDestinationCaller the new destination caller\r\n     */\r\n    function replaceMessage(\r\n        bytes calldata originalMessage,\r\n        bytes calldata originalAttestation,\r\n        bytes calldata newMessageBody,\r\n        bytes32 newDestinationCaller\r\n    ) external;\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BRIDGE_PARTNERSHIP/erc20Bridge.sol": {
				"ERC20Bridge": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "NotAnEvmAddress",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "wormholeId",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "_removeWormholeEndpoint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "wormholeId",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "_setWormholeEndpoint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "bytes[]",
									"name": "additionalVaas",
									"type": "bytes[]"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								},
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "receiveWormholeMessages",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridge",
							"outputs": [
								{
									"internalType": "contract ITokenBridge",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_removeWormholeEndpoint(uint16,address)": "7e63e29d",
							"_setWormholeEndpoint(uint16,address)": "c8fbaf72",
							"owner()": "8da5cb5b",
							"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": "529dca32",
							"renounceOwnership()": "715018a6",
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"tokenBridge()": "c6328a46",
							"transferOwnership(address)": "f2fde38b",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"NotAnEvmAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"wormholeId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"_removeWormholeEndpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"wormholeId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"_setWormholeEndpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"additionalVaas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"receiveWormholeMessages\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridge\",\"outputs\":[{\"internalType\":\"contract ITokenBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/erc20Bridge.sol\":\"ERC20Bridge\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"BRIDGE_PARTNERSHIP/erc20Bridge.sol\":{\"keccak256\":\"0xceeaf0c7c9ec71df377d17ea3e7de222cfdd9c44ac92efa948c8485ea1a6a3f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ea7a7b8f67907d7db665cfff64ac0d9dfba91a71c5c330be07751b2afd462a\",\"dweb:/ipfs/QmQYkUJzocU2GKQ6h59WdqHLMSP6SuPh63SyjqSEZJiXei\"]},\"BRIDGE_PARTNERSHIP/lib.d.sol\":{\"keccak256\":\"0x2875da2b3be594eb327b762fb8e8580e50c9b1d2850065e38c5ad688d960bdfa\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://d074d6b0e3e77088e6d0bfc6957b4d6f8b86d94990be1da9aabbabb2785535db\",\"dweb:/ipfs/QmNa5Fk1mSnYpZhtmB65cM9gGQDCw8eyadAQpPKAQh96Aj\"]},\"BRIDGE_PARTNERSHIP/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol\":{\"keccak256\":\"0x4c2b579e45cd567796c6639d4a1b7332e196343b2b0b351d4b2f1b7eb9a5de15\",\"urls\":[\"bzz-raw://ead29a9e0ccf4f0559c6aacf2dff6654b33e2a897c96b44c8a601d51a102e3b6\",\"dweb:/ipfs/QmQqiw27bAZUMZG2uMhSUnfxp9SVRpi25VGGnkTqw6MYEj\"]},\"BRIDGE_PARTNERSHIP/src/CCTPBase.sol\":{\"keccak256\":\"0xb0cb70d96d3c57421feca6842eab200246abcfcd1da1d53003449c9f517b9b36\",\"urls\":[\"bzz-raw://b12d2fa5425eaf7bfb6d5c7c2f949dbd50c11939f4636a64cd1b440ab4010999\",\"dweb:/ipfs/QmZZoGiQPRTCZtmjxsTzcd55wCkiriPiBPFU911XP3536i\"]},\"BRIDGE_PARTNERSHIP/src/TokenBase.sol\":{\"keccak256\":\"0x3b5fb0a5f7771786872b6860c4d3da6ee7bf25b8056cf3d6698a6e0249b93e6c\",\"urls\":[\"bzz-raw://01d3397960486a2d66765b317d97f9f2f804a77c324ca9bac680d05f1ca647e9\",\"dweb:/ipfs/QmeAT4kfAqE1YLT4Goe24bBNLPZksBZ4nJmQoKpHo6Js2g\"]},\"BRIDGE_PARTNERSHIP/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"BRIDGE_PARTNERSHIP/src/WormholeRelayerSDK.sol\":{\"keccak256\":\"0x39b2a67c047941692c560b01198cfa5e24d326c11c23ae6b420571849ae80d0c\",\"urls\":[\"bzz-raw://37d655ea5d15012a32f05f08151d5cb597065b5af6102060c2f7836b32356e25\",\"dweb:/ipfs/QmYNenC57JECfqSmjnXa59yxkmPjTmSi6fh53XC343d3ru\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0xad665028667c70a3663044b335e3a1d388da3018bf4720853adb9fa8f49a9342\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://d86e90b3ee0c951fe3169df0af0d1071fb073d506923ecfee4e51f3eef941919\",\"dweb:/ipfs/Qmdu9AjEp1JaD6KEwe5S5pxgnzii5QXFR2peApBNkhNTes\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xbb3a2b248ef78c421dd137e75236af605d4618acca294e8930a9ba1aed769c9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://e5402ba174843110d8ac66b1f7cc90d4dbc2d50996ed15165a64b093b33dfcd8\",\"dweb:/ipfs/QmfRtStHfFaQjSs5wocQmQEdosd6a5QmTP6rbB6ETqgmb4\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 708,
								"contract": "BRIDGE_PARTNERSHIP/erc20Bridge.sol:ERC20Bridge",
								"label": "wormholeRelayer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWormholeRelayer)3919"
							},
							{
								"astId": 711,
								"contract": "BRIDGE_PARTNERSHIP/erc20Bridge.sol:ERC20Bridge",
								"label": "wormhole",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWormhole)3485"
							},
							{
								"astId": 713,
								"contract": "BRIDGE_PARTNERSHIP/erc20Bridge.sol:ERC20Bridge",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 717,
								"contract": "BRIDGE_PARTNERSHIP/erc20Bridge.sol:ERC20Bridge",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_bytes32)"
							},
							{
								"astId": 2103,
								"contract": "BRIDGE_PARTNERSHIP/erc20Bridge.sol:ERC20Bridge",
								"label": "tokenBridge",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ITokenBridge)3155"
							},
							{
								"astId": 8,
								"contract": "BRIDGE_PARTNERSHIP/erc20Bridge.sol:ERC20Bridge",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 281,
								"contract": "BRIDGE_PARTNERSHIP/erc20Bridge.sol:ERC20Bridge",
								"label": "wormholeEndpoints",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint16,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 285,
								"contract": "BRIDGE_PARTNERSHIP/erc20Bridge.sol:ERC20Bridge",
								"label": "wormEndpoints",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint16,t_address)"
							},
							{
								"astId": 291,
								"contract": "BRIDGE_PARTNERSHIP/erc20Bridge.sol:ERC20Bridge",
								"label": "_delivered",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint16,t_mapping(t_bytes32,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(ITokenBridge)3155": {
								"encoding": "inplace",
								"label": "contract ITokenBridge",
								"numberOfBytes": "20"
							},
							"t_contract(IWormhole)3485": {
								"encoding": "inplace",
								"label": "contract IWormhole",
								"numberOfBytes": "20"
							},
							"t_contract(IWormholeRelayer)3919": {
								"encoding": "inplace",
								"label": "contract IWormholeRelayer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint16,t_address)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_mapping(t_uint16,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_uint16,t_mapping(t_bytes32,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => mapping(bytes32 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_bytes32,t_bool)"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				}
			},
			"BRIDGE_PARTNERSHIP/lib.d.sol": {
				"Inputs": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BRIDGE_PARTNERSHIP/lib.d.sol\":2352:2889  library Inputs {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"BRIDGE_PARTNERSHIP/lib.d.sol\":2352:2889  library Inputs {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208016a81ce35d53176ab100d00a1ae527916a07786f6801c2e0c11f5d5f32f79564736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208016a81ce35d53176ab100d00a1ae527916a07786f6801c2e0c11f5d5f32f79564736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 AND 0xA8 SHR 0xE3 0x5D MSTORE8 OR PUSH11 0xB100D00A1AE527916A0778 PUSH16 0x6801C2E0C11F5D5F32F79564736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "2352:537:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;2352:537:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208016a81ce35d53176ab100d00a1ae527916a07786f6801c2e0c11f5d5f32f79564736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 AND 0xA8 SHR 0xE3 0x5D MSTORE8 OR PUSH11 0xB100D00A1AE527916A0778 PUSH16 0x6801C2E0C11F5D5F32F79564736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "2352:537:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208016a81ce35d53176ab100d00a1ae527916a07786f6801c2e0c11f5d5f32f79564736f6c63430008140033",
									".code": [
										{
											"begin": 2352,
											"end": 2889,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 2352,
											"end": 2889,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2352,
											"end": 2889,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2352,
											"end": 2889,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2352,
											"end": 2889,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2889,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2352,
											"end": 2889,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2889,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2352,
											"end": 2889,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"BRIDGE_PARTNERSHIP/erc20Bridge.sol",
								"BRIDGE_PARTNERSHIP/lib.d.sol",
								"BRIDGE_PARTNERSHIP/src/Base.sol",
								"BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol",
								"BRIDGE_PARTNERSHIP/src/CCTPBase.sol",
								"BRIDGE_PARTNERSHIP/src/TokenBase.sol",
								"BRIDGE_PARTNERSHIP/src/Utils.sol",
								"BRIDGE_PARTNERSHIP/src/WormholeRelayerSDK.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/ITokenBridge.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/IWETH.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/lib.d.sol\":\"Inputs\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/lib.d.sol\":{\"keccak256\":\"0x2875da2b3be594eb327b762fb8e8580e50c9b1d2850065e38c5ad688d960bdfa\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://d074d6b0e3e77088e6d0bfc6957b4d6f8b86d94990be1da9aabbabb2785535db\",\"dweb:/ipfs/QmNa5Fk1mSnYpZhtmB65cM9gGQDCw8eyadAQpPKAQh96Aj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Structs": {
					"abi": [
						{
							"inputs": [],
							"name": "WrongFeeOrParams",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BRIDGE_PARTNERSHIP/lib.d.sol\":69:2348  library Structs {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"BRIDGE_PARTNERSHIP/lib.d.sol\":69:2348  library Structs {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122019628c9205b968721548a419ce8cd224bbda6b9ea3882b6410a2b4777ff3a8ea64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122019628c9205b968721548a419ce8cd224bbda6b9ea3882b6410a2b4777ff3a8ea64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH3 0x8C9205 0xB9 PUSH9 0x721548A419CE8CD224 0xBB 0xDA PUSH12 0x9EA3882B6410A2B4777FF3A8 0xEA PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "69:2279:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;69:2279:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122019628c9205b968721548a419ce8cd224bbda6b9ea3882b6410a2b4777ff3a8ea64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH3 0x8C9205 0xB9 PUSH9 0x721548A419CE8CD224 0xBB 0xDA PUSH12 0x9EA3882B6410A2B4777FF3A8 0xEA PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "69:2279:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122019628c9205b968721548a419ce8cd224bbda6b9ea3882b6410a2b4777ff3a8ea64736f6c63430008140033",
									".code": [
										{
											"begin": 69,
											"end": 2348,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 69,
											"end": 2348,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 69,
											"end": 2348,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 69,
											"end": 2348,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 69,
											"end": 2348,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 69,
											"end": 2348,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 69,
											"end": 2348,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 69,
											"end": 2348,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 2348,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"BRIDGE_PARTNERSHIP/erc20Bridge.sol",
								"BRIDGE_PARTNERSHIP/lib.d.sol",
								"BRIDGE_PARTNERSHIP/src/Base.sol",
								"BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol",
								"BRIDGE_PARTNERSHIP/src/CCTPBase.sol",
								"BRIDGE_PARTNERSHIP/src/TokenBase.sol",
								"BRIDGE_PARTNERSHIP/src/Utils.sol",
								"BRIDGE_PARTNERSHIP/src/WormholeRelayerSDK.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/ITokenBridge.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/IWETH.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WrongFeeOrParams\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/lib.d.sol\":\"Structs\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/lib.d.sol\":{\"keccak256\":\"0x2875da2b3be594eb327b762fb8e8580e50c9b1d2850065e38c5ad688d960bdfa\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://d074d6b0e3e77088e6d0bfc6957b4d6f8b86d94990be1da9aabbabb2785535db\",\"dweb:/ipfs/QmNa5Fk1mSnYpZhtmB65cM9gGQDCw8eyadAQpPKAQh96Aj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BRIDGE_PARTNERSHIP/src/Base.sol": {
				"Base": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/Base.sol\":\"Base\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"BRIDGE_PARTNERSHIP/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 708,
								"contract": "BRIDGE_PARTNERSHIP/src/Base.sol:Base",
								"label": "wormholeRelayer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWormholeRelayer)3919"
							},
							{
								"astId": 711,
								"contract": "BRIDGE_PARTNERSHIP/src/Base.sol:Base",
								"label": "wormhole",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWormhole)3485"
							},
							{
								"astId": 713,
								"contract": "BRIDGE_PARTNERSHIP/src/Base.sol:Base",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 717,
								"contract": "BRIDGE_PARTNERSHIP/src/Base.sol:Base",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_bytes32)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IWormhole)3485": {
								"encoding": "inplace",
								"label": "contract IWormhole",
								"numberOfBytes": "20"
							},
							"t_contract(IWormholeRelayer)3919": {
								"encoding": "inplace",
								"label": "contract IWormholeRelayer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				}
			},
			"BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol": {
				"CCTPAndTokenBase": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridge",
							"outputs": [
								{
									"internalType": "contract ITokenBridge",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"tokenBridge()": "c6328a46",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridge\",\"outputs\":[{\"internalType\":\"contract ITokenBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol\":\"CCTPAndTokenBase\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/lib.d.sol\":{\"keccak256\":\"0x2875da2b3be594eb327b762fb8e8580e50c9b1d2850065e38c5ad688d960bdfa\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://d074d6b0e3e77088e6d0bfc6957b4d6f8b86d94990be1da9aabbabb2785535db\",\"dweb:/ipfs/QmNa5Fk1mSnYpZhtmB65cM9gGQDCw8eyadAQpPKAQh96Aj\"]},\"BRIDGE_PARTNERSHIP/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol\":{\"keccak256\":\"0x4c2b579e45cd567796c6639d4a1b7332e196343b2b0b351d4b2f1b7eb9a5de15\",\"urls\":[\"bzz-raw://ead29a9e0ccf4f0559c6aacf2dff6654b33e2a897c96b44c8a601d51a102e3b6\",\"dweb:/ipfs/QmQqiw27bAZUMZG2uMhSUnfxp9SVRpi25VGGnkTqw6MYEj\"]},\"BRIDGE_PARTNERSHIP/src/CCTPBase.sol\":{\"keccak256\":\"0xb0cb70d96d3c57421feca6842eab200246abcfcd1da1d53003449c9f517b9b36\",\"urls\":[\"bzz-raw://b12d2fa5425eaf7bfb6d5c7c2f949dbd50c11939f4636a64cd1b440ab4010999\",\"dweb:/ipfs/QmZZoGiQPRTCZtmjxsTzcd55wCkiriPiBPFU911XP3536i\"]},\"BRIDGE_PARTNERSHIP/src/TokenBase.sol\":{\"keccak256\":\"0x3b5fb0a5f7771786872b6860c4d3da6ee7bf25b8056cf3d6698a6e0249b93e6c\",\"urls\":[\"bzz-raw://01d3397960486a2d66765b317d97f9f2f804a77c324ca9bac680d05f1ca647e9\",\"dweb:/ipfs/QmeAT4kfAqE1YLT4Goe24bBNLPZksBZ4nJmQoKpHo6Js2g\"]},\"BRIDGE_PARTNERSHIP/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"BRIDGE_PARTNERSHIP/src/WormholeRelayerSDK.sol\":{\"keccak256\":\"0x39b2a67c047941692c560b01198cfa5e24d326c11c23ae6b420571849ae80d0c\",\"urls\":[\"bzz-raw://37d655ea5d15012a32f05f08151d5cb597065b5af6102060c2f7836b32356e25\",\"dweb:/ipfs/QmYNenC57JECfqSmjnXa59yxkmPjTmSi6fh53XC343d3ru\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0xad665028667c70a3663044b335e3a1d388da3018bf4720853adb9fa8f49a9342\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://d86e90b3ee0c951fe3169df0af0d1071fb073d506923ecfee4e51f3eef941919\",\"dweb:/ipfs/Qmdu9AjEp1JaD6KEwe5S5pxgnzii5QXFR2peApBNkhNTes\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xbb3a2b248ef78c421dd137e75236af605d4618acca294e8930a9ba1aed769c9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://e5402ba174843110d8ac66b1f7cc90d4dbc2d50996ed15165a64b093b33dfcd8\",\"dweb:/ipfs/QmfRtStHfFaQjSs5wocQmQEdosd6a5QmTP6rbB6ETqgmb4\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 708,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenBase",
								"label": "wormholeRelayer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWormholeRelayer)3919"
							},
							{
								"astId": 711,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenBase",
								"label": "wormhole",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWormhole)3485"
							},
							{
								"astId": 713,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenBase",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 717,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenBase",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_bytes32)"
							},
							{
								"astId": 1710,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenBase",
								"label": "circleTokenMessenger",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ITokenMessenger)2677"
							},
							{
								"astId": 1713,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenBase",
								"label": "circleMessageTransmitter",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IMessageTransmitter)2602"
							},
							{
								"astId": 1715,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenBase",
								"label": "USDC",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1717,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenBase",
								"label": "cctpConfigurationOwner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 815,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenBase",
								"label": "tokenBridge",
								"offset": 0,
								"slot": "8",
								"type": "t_contract(ITokenBridge)3155"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IMessageTransmitter)2602": {
								"encoding": "inplace",
								"label": "contract IMessageTransmitter",
								"numberOfBytes": "20"
							},
							"t_contract(ITokenBridge)3155": {
								"encoding": "inplace",
								"label": "contract ITokenBridge",
								"numberOfBytes": "20"
							},
							"t_contract(ITokenMessenger)2677": {
								"encoding": "inplace",
								"label": "contract ITokenMessenger",
								"numberOfBytes": "20"
							},
							"t_contract(IWormhole)3485": {
								"encoding": "inplace",
								"label": "contract IWormhole",
								"numberOfBytes": "20"
							},
							"t_contract(IWormholeRelayer)3919": {
								"encoding": "inplace",
								"label": "contract IWormholeRelayer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				},
				"CCTPAndTokenReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "NotAnEvmAddress",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "bytes[]",
									"name": "additionalMessages",
									"type": "bytes[]"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								},
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "receiveWormholeMessages",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridge",
							"outputs": [
								{
									"internalType": "contract ITokenBridge",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": "529dca32",
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"tokenBridge()": "c6328a46",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"NotAnEvmAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"additionalMessages\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"receiveWormholeMessages\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridge\",\"outputs\":[{\"internalType\":\"contract ITokenBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol\":\"CCTPAndTokenReceiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/lib.d.sol\":{\"keccak256\":\"0x2875da2b3be594eb327b762fb8e8580e50c9b1d2850065e38c5ad688d960bdfa\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://d074d6b0e3e77088e6d0bfc6957b4d6f8b86d94990be1da9aabbabb2785535db\",\"dweb:/ipfs/QmNa5Fk1mSnYpZhtmB65cM9gGQDCw8eyadAQpPKAQh96Aj\"]},\"BRIDGE_PARTNERSHIP/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol\":{\"keccak256\":\"0x4c2b579e45cd567796c6639d4a1b7332e196343b2b0b351d4b2f1b7eb9a5de15\",\"urls\":[\"bzz-raw://ead29a9e0ccf4f0559c6aacf2dff6654b33e2a897c96b44c8a601d51a102e3b6\",\"dweb:/ipfs/QmQqiw27bAZUMZG2uMhSUnfxp9SVRpi25VGGnkTqw6MYEj\"]},\"BRIDGE_PARTNERSHIP/src/CCTPBase.sol\":{\"keccak256\":\"0xb0cb70d96d3c57421feca6842eab200246abcfcd1da1d53003449c9f517b9b36\",\"urls\":[\"bzz-raw://b12d2fa5425eaf7bfb6d5c7c2f949dbd50c11939f4636a64cd1b440ab4010999\",\"dweb:/ipfs/QmZZoGiQPRTCZtmjxsTzcd55wCkiriPiBPFU911XP3536i\"]},\"BRIDGE_PARTNERSHIP/src/TokenBase.sol\":{\"keccak256\":\"0x3b5fb0a5f7771786872b6860c4d3da6ee7bf25b8056cf3d6698a6e0249b93e6c\",\"urls\":[\"bzz-raw://01d3397960486a2d66765b317d97f9f2f804a77c324ca9bac680d05f1ca647e9\",\"dweb:/ipfs/QmeAT4kfAqE1YLT4Goe24bBNLPZksBZ4nJmQoKpHo6Js2g\"]},\"BRIDGE_PARTNERSHIP/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"BRIDGE_PARTNERSHIP/src/WormholeRelayerSDK.sol\":{\"keccak256\":\"0x39b2a67c047941692c560b01198cfa5e24d326c11c23ae6b420571849ae80d0c\",\"urls\":[\"bzz-raw://37d655ea5d15012a32f05f08151d5cb597065b5af6102060c2f7836b32356e25\",\"dweb:/ipfs/QmYNenC57JECfqSmjnXa59yxkmPjTmSi6fh53XC343d3ru\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0xad665028667c70a3663044b335e3a1d388da3018bf4720853adb9fa8f49a9342\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://d86e90b3ee0c951fe3169df0af0d1071fb073d506923ecfee4e51f3eef941919\",\"dweb:/ipfs/Qmdu9AjEp1JaD6KEwe5S5pxgnzii5QXFR2peApBNkhNTes\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xbb3a2b248ef78c421dd137e75236af605d4618acca294e8930a9ba1aed769c9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://e5402ba174843110d8ac66b1f7cc90d4dbc2d50996ed15165a64b093b33dfcd8\",\"dweb:/ipfs/QmfRtStHfFaQjSs5wocQmQEdosd6a5QmTP6rbB6ETqgmb4\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 708,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenReceiver",
								"label": "wormholeRelayer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWormholeRelayer)3919"
							},
							{
								"astId": 711,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenReceiver",
								"label": "wormhole",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWormhole)3485"
							},
							{
								"astId": 713,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenReceiver",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 717,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenReceiver",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_bytes32)"
							},
							{
								"astId": 1710,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenReceiver",
								"label": "circleTokenMessenger",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ITokenMessenger)2677"
							},
							{
								"astId": 1713,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenReceiver",
								"label": "circleMessageTransmitter",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IMessageTransmitter)2602"
							},
							{
								"astId": 1715,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenReceiver",
								"label": "USDC",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1717,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenReceiver",
								"label": "cctpConfigurationOwner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 815,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenReceiver",
								"label": "tokenBridge",
								"offset": 0,
								"slot": "8",
								"type": "t_contract(ITokenBridge)3155"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IMessageTransmitter)2602": {
								"encoding": "inplace",
								"label": "contract IMessageTransmitter",
								"numberOfBytes": "20"
							},
							"t_contract(ITokenBridge)3155": {
								"encoding": "inplace",
								"label": "contract ITokenBridge",
								"numberOfBytes": "20"
							},
							"t_contract(ITokenMessenger)2677": {
								"encoding": "inplace",
								"label": "contract ITokenMessenger",
								"numberOfBytes": "20"
							},
							"t_contract(IWormhole)3485": {
								"encoding": "inplace",
								"label": "contract IWormhole",
								"numberOfBytes": "20"
							},
							"t_contract(IWormholeRelayer)3919": {
								"encoding": "inplace",
								"label": "contract IWormholeRelayer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				},
				"CCTPAndTokenSender": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"name": "chainIdToCCTPDomain",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "chain",
									"type": "uint16"
								},
								{
									"internalType": "uint32",
									"name": "cctpDomain",
									"type": "uint32"
								}
							],
							"name": "setCCTPDomain",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridge",
							"outputs": [
								{
									"internalType": "contract ITokenBridge",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"chainIdToCCTPDomain(uint16)": "3a57cd63",
							"setCCTPDomain(uint16,uint32)": "c6a4fd1c",
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"tokenBridge()": "c6328a46",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"chainIdToCCTPDomain\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chain\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"cctpDomain\",\"type\":\"uint32\"}],\"name\":\"setCCTPDomain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridge\",\"outputs\":[{\"internalType\":\"contract ITokenBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setCCTPDomain(uint16,uint32)\":{\"notice\":\"Sets the CCTP Domain corresponding to chain 'chain' to be 'cctpDomain' So that transfers of USDC to chain 'chain' use the target CCTP domain 'cctpDomain' This action can only be performed by 'cctpConfigurationOwner', who is set to be the deployer Currently, cctp domains are: Ethereum: Wormhole chain id 2, cctp domain 0 Avalanche: Wormhole chain id 6, cctp domain 1 Optimism: Wormhole chain id 24, cctp domain 2 Arbitrum: Wormhole chain id 23, cctp domain 3 Base: Wormhole chain id 30, cctp domain 6 These can be set via: setCCTPDomain(2, 0); setCCTPDomain(6, 1); setCCTPDomain(24, 2); setCCTPDomain(23, 3); setCCTPDomain(30, 6);\"},\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol\":\"CCTPAndTokenSender\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/lib.d.sol\":{\"keccak256\":\"0x2875da2b3be594eb327b762fb8e8580e50c9b1d2850065e38c5ad688d960bdfa\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://d074d6b0e3e77088e6d0bfc6957b4d6f8b86d94990be1da9aabbabb2785535db\",\"dweb:/ipfs/QmNa5Fk1mSnYpZhtmB65cM9gGQDCw8eyadAQpPKAQh96Aj\"]},\"BRIDGE_PARTNERSHIP/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol\":{\"keccak256\":\"0x4c2b579e45cd567796c6639d4a1b7332e196343b2b0b351d4b2f1b7eb9a5de15\",\"urls\":[\"bzz-raw://ead29a9e0ccf4f0559c6aacf2dff6654b33e2a897c96b44c8a601d51a102e3b6\",\"dweb:/ipfs/QmQqiw27bAZUMZG2uMhSUnfxp9SVRpi25VGGnkTqw6MYEj\"]},\"BRIDGE_PARTNERSHIP/src/CCTPBase.sol\":{\"keccak256\":\"0xb0cb70d96d3c57421feca6842eab200246abcfcd1da1d53003449c9f517b9b36\",\"urls\":[\"bzz-raw://b12d2fa5425eaf7bfb6d5c7c2f949dbd50c11939f4636a64cd1b440ab4010999\",\"dweb:/ipfs/QmZZoGiQPRTCZtmjxsTzcd55wCkiriPiBPFU911XP3536i\"]},\"BRIDGE_PARTNERSHIP/src/TokenBase.sol\":{\"keccak256\":\"0x3b5fb0a5f7771786872b6860c4d3da6ee7bf25b8056cf3d6698a6e0249b93e6c\",\"urls\":[\"bzz-raw://01d3397960486a2d66765b317d97f9f2f804a77c324ca9bac680d05f1ca647e9\",\"dweb:/ipfs/QmeAT4kfAqE1YLT4Goe24bBNLPZksBZ4nJmQoKpHo6Js2g\"]},\"BRIDGE_PARTNERSHIP/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"BRIDGE_PARTNERSHIP/src/WormholeRelayerSDK.sol\":{\"keccak256\":\"0x39b2a67c047941692c560b01198cfa5e24d326c11c23ae6b420571849ae80d0c\",\"urls\":[\"bzz-raw://37d655ea5d15012a32f05f08151d5cb597065b5af6102060c2f7836b32356e25\",\"dweb:/ipfs/QmYNenC57JECfqSmjnXa59yxkmPjTmSi6fh53XC343d3ru\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0xad665028667c70a3663044b335e3a1d388da3018bf4720853adb9fa8f49a9342\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://d86e90b3ee0c951fe3169df0af0d1071fb073d506923ecfee4e51f3eef941919\",\"dweb:/ipfs/Qmdu9AjEp1JaD6KEwe5S5pxgnzii5QXFR2peApBNkhNTes\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xbb3a2b248ef78c421dd137e75236af605d4618acca294e8930a9ba1aed769c9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://e5402ba174843110d8ac66b1f7cc90d4dbc2d50996ed15165a64b093b33dfcd8\",\"dweb:/ipfs/QmfRtStHfFaQjSs5wocQmQEdosd6a5QmTP6rbB6ETqgmb4\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 708,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenSender",
								"label": "wormholeRelayer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWormholeRelayer)3919"
							},
							{
								"astId": 711,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenSender",
								"label": "wormhole",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWormhole)3485"
							},
							{
								"astId": 713,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenSender",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 717,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenSender",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_bytes32)"
							},
							{
								"astId": 1710,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenSender",
								"label": "circleTokenMessenger",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ITokenMessenger)2677"
							},
							{
								"astId": 1713,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenSender",
								"label": "circleMessageTransmitter",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IMessageTransmitter)2602"
							},
							{
								"astId": 1715,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenSender",
								"label": "USDC",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1717,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenSender",
								"label": "cctpConfigurationOwner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 815,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenSender",
								"label": "tokenBridge",
								"offset": 0,
								"slot": "8",
								"type": "t_contract(ITokenBridge)3155"
							},
							{
								"astId": 860,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol:CCTPAndTokenSender",
								"label": "chainIdToCCTPDomain",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint16,t_uint32)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IMessageTransmitter)2602": {
								"encoding": "inplace",
								"label": "contract IMessageTransmitter",
								"numberOfBytes": "20"
							},
							"t_contract(ITokenBridge)3155": {
								"encoding": "inplace",
								"label": "contract ITokenBridge",
								"numberOfBytes": "20"
							},
							"t_contract(ITokenMessenger)2677": {
								"encoding": "inplace",
								"label": "contract ITokenMessenger",
								"numberOfBytes": "20"
							},
							"t_contract(IWormhole)3485": {
								"encoding": "inplace",
								"label": "contract IWormhole",
								"numberOfBytes": "20"
							},
							"t_contract(IWormholeRelayer)3919": {
								"encoding": "inplace",
								"label": "contract IWormholeRelayer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_mapping(t_uint16,t_uint32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setCCTPDomain(uint16,uint32)": {
								"notice": "Sets the CCTP Domain corresponding to chain 'chain' to be 'cctpDomain' So that transfers of USDC to chain 'chain' use the target CCTP domain 'cctpDomain' This action can only be performed by 'cctpConfigurationOwner', who is set to be the deployer Currently, cctp domains are: Ethereum: Wormhole chain id 2, cctp domain 0 Avalanche: Wormhole chain id 6, cctp domain 1 Optimism: Wormhole chain id 24, cctp domain 2 Arbitrum: Wormhole chain id 23, cctp domain 3 Base: Wormhole chain id 30, cctp domain 6 These can be set via: setCCTPDomain(2, 0); setCCTPDomain(6, 1); setCCTPDomain(24, 2); setCCTPDomain(23, 3); setCCTPDomain(30, 6);"
							},
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				}
			},
			"BRIDGE_PARTNERSHIP/src/CCTPBase.sol": {
				"CCTPBase": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/CCTPBase.sol\":\"CCTPBase\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"BRIDGE_PARTNERSHIP/src/CCTPBase.sol\":{\"keccak256\":\"0xb0cb70d96d3c57421feca6842eab200246abcfcd1da1d53003449c9f517b9b36\",\"urls\":[\"bzz-raw://b12d2fa5425eaf7bfb6d5c7c2f949dbd50c11939f4636a64cd1b440ab4010999\",\"dweb:/ipfs/QmZZoGiQPRTCZtmjxsTzcd55wCkiriPiBPFU911XP3536i\"]},\"BRIDGE_PARTNERSHIP/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 708,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPBase",
								"label": "wormholeRelayer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWormholeRelayer)3919"
							},
							{
								"astId": 711,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPBase",
								"label": "wormhole",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWormhole)3485"
							},
							{
								"astId": 713,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPBase",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 717,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPBase",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_bytes32)"
							},
							{
								"astId": 1710,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPBase",
								"label": "circleTokenMessenger",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ITokenMessenger)2677"
							},
							{
								"astId": 1713,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPBase",
								"label": "circleMessageTransmitter",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IMessageTransmitter)2602"
							},
							{
								"astId": 1715,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPBase",
								"label": "USDC",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1717,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPBase",
								"label": "cctpConfigurationOwner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IMessageTransmitter)2602": {
								"encoding": "inplace",
								"label": "contract IMessageTransmitter",
								"numberOfBytes": "20"
							},
							"t_contract(ITokenMessenger)2677": {
								"encoding": "inplace",
								"label": "contract ITokenMessenger",
								"numberOfBytes": "20"
							},
							"t_contract(IWormhole)3485": {
								"encoding": "inplace",
								"label": "contract IWormhole",
								"numberOfBytes": "20"
							},
							"t_contract(IWormholeRelayer)3919": {
								"encoding": "inplace",
								"label": "contract IWormholeRelayer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				},
				"CCTPMessageLib": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BRIDGE_PARTNERSHIP/src/CCTPBase.sol\":339:1040  library CCTPMessageLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"BRIDGE_PARTNERSHIP/src/CCTPBase.sol\":339:1040  library CCTPMessageLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220200eab37c312698976ab02c41f3b38fee37e47355e8dc0fbbb67336f7bd2af3a64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220200eab37c312698976ab02c41f3b38fee37e47355e8dc0fbbb67336f7bd2af3a64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xE 0xAB CALLDATACOPY 0xC3 SLT PUSH10 0x8976AB02C41F3B38FEE3 PUSH31 0x47355E8DC0FBBB67336F7BD2AF3A64736F6C63430008140033000000000000 ",
							"sourceMap": "339:701:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;339:701:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220200eab37c312698976ab02c41f3b38fee37e47355e8dc0fbbb67336f7bd2af3a64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xE 0xAB CALLDATACOPY 0xC3 SLT PUSH10 0x8976AB02C41F3B38FEE3 PUSH31 0x47355E8DC0FBBB67336F7BD2AF3A64736F6C63430008140033000000000000 ",
							"sourceMap": "339:701:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220200eab37c312698976ab02c41f3b38fee37e47355e8dc0fbbb67336f7bd2af3a64736f6c63430008140033",
									".code": [
										{
											"begin": 339,
											"end": 1040,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 339,
											"end": 1040,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 339,
											"end": 1040,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 339,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 339,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 1040,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 339,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 1040,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 339,
											"end": 1040,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"BRIDGE_PARTNERSHIP/erc20Bridge.sol",
								"BRIDGE_PARTNERSHIP/lib.d.sol",
								"BRIDGE_PARTNERSHIP/src/Base.sol",
								"BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol",
								"BRIDGE_PARTNERSHIP/src/CCTPBase.sol",
								"BRIDGE_PARTNERSHIP/src/TokenBase.sol",
								"BRIDGE_PARTNERSHIP/src/Utils.sol",
								"BRIDGE_PARTNERSHIP/src/WormholeRelayerSDK.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/ITokenBridge.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/IWETH.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol",
								"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/CCTPBase.sol\":\"CCTPMessageLib\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"BRIDGE_PARTNERSHIP/src/CCTPBase.sol\":{\"keccak256\":\"0xb0cb70d96d3c57421feca6842eab200246abcfcd1da1d53003449c9f517b9b36\",\"urls\":[\"bzz-raw://b12d2fa5425eaf7bfb6d5c7c2f949dbd50c11939f4636a64cd1b440ab4010999\",\"dweb:/ipfs/QmZZoGiQPRTCZtmjxsTzcd55wCkiriPiBPFU911XP3536i\"]},\"BRIDGE_PARTNERSHIP/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"CCTPReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "bytes[]",
									"name": "additionalMessages",
									"type": "bytes[]"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								},
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "receiveWormholeMessages",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": "529dca32",
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"additionalMessages\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"receiveWormholeMessages\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/CCTPBase.sol\":\"CCTPReceiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"BRIDGE_PARTNERSHIP/src/CCTPBase.sol\":{\"keccak256\":\"0xb0cb70d96d3c57421feca6842eab200246abcfcd1da1d53003449c9f517b9b36\",\"urls\":[\"bzz-raw://b12d2fa5425eaf7bfb6d5c7c2f949dbd50c11939f4636a64cd1b440ab4010999\",\"dweb:/ipfs/QmZZoGiQPRTCZtmjxsTzcd55wCkiriPiBPFU911XP3536i\"]},\"BRIDGE_PARTNERSHIP/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 708,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPReceiver",
								"label": "wormholeRelayer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWormholeRelayer)3919"
							},
							{
								"astId": 711,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPReceiver",
								"label": "wormhole",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWormhole)3485"
							},
							{
								"astId": 713,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPReceiver",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 717,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPReceiver",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_bytes32)"
							},
							{
								"astId": 1710,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPReceiver",
								"label": "circleTokenMessenger",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ITokenMessenger)2677"
							},
							{
								"astId": 1713,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPReceiver",
								"label": "circleMessageTransmitter",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IMessageTransmitter)2602"
							},
							{
								"astId": 1715,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPReceiver",
								"label": "USDC",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1717,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPReceiver",
								"label": "cctpConfigurationOwner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IMessageTransmitter)2602": {
								"encoding": "inplace",
								"label": "contract IMessageTransmitter",
								"numberOfBytes": "20"
							},
							"t_contract(ITokenMessenger)2677": {
								"encoding": "inplace",
								"label": "contract ITokenMessenger",
								"numberOfBytes": "20"
							},
							"t_contract(IWormhole)3485": {
								"encoding": "inplace",
								"label": "contract IWormhole",
								"numberOfBytes": "20"
							},
							"t_contract(IWormholeRelayer)3919": {
								"encoding": "inplace",
								"label": "contract IWormholeRelayer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				},
				"CCTPSender": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"name": "chainIdToCCTPDomain",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "chain",
									"type": "uint16"
								},
								{
									"internalType": "uint32",
									"name": "cctpDomain",
									"type": "uint32"
								}
							],
							"name": "setCCTPDomain",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"chainIdToCCTPDomain(uint16)": "3a57cd63",
							"setCCTPDomain(uint16,uint32)": "c6a4fd1c",
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"chainIdToCCTPDomain\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chain\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"cctpDomain\",\"type\":\"uint32\"}],\"name\":\"setCCTPDomain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setCCTPDomain(uint16,uint32)\":{\"notice\":\"Sets the CCTP Domain corresponding to chain 'chain' to be 'cctpDomain' So that transfers of USDC to chain 'chain' use the target CCTP domain 'cctpDomain' This action can only be performed by 'cctpConfigurationOwner', who is set to be the deployer Currently, cctp domains are: Ethereum: Wormhole chain id 2, cctp domain 0 Avalanche: Wormhole chain id 6, cctp domain 1 Optimism: Wormhole chain id 24, cctp domain 2 Arbitrum: Wormhole chain id 23, cctp domain 3 Base: Wormhole chain id 30, cctp domain 6 These can be set via: setCCTPDomain(2, 0); setCCTPDomain(6, 1); setCCTPDomain(24, 2); setCCTPDomain(23, 3); setCCTPDomain(30, 6);\"},\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/CCTPBase.sol\":\"CCTPSender\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"BRIDGE_PARTNERSHIP/src/CCTPBase.sol\":{\"keccak256\":\"0xb0cb70d96d3c57421feca6842eab200246abcfcd1da1d53003449c9f517b9b36\",\"urls\":[\"bzz-raw://b12d2fa5425eaf7bfb6d5c7c2f949dbd50c11939f4636a64cd1b440ab4010999\",\"dweb:/ipfs/QmZZoGiQPRTCZtmjxsTzcd55wCkiriPiBPFU911XP3536i\"]},\"BRIDGE_PARTNERSHIP/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 708,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPSender",
								"label": "wormholeRelayer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWormholeRelayer)3919"
							},
							{
								"astId": 711,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPSender",
								"label": "wormhole",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWormhole)3485"
							},
							{
								"astId": 713,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPSender",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 717,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPSender",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_bytes32)"
							},
							{
								"astId": 1710,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPSender",
								"label": "circleTokenMessenger",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ITokenMessenger)2677"
							},
							{
								"astId": 1713,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPSender",
								"label": "circleMessageTransmitter",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IMessageTransmitter)2602"
							},
							{
								"astId": 1715,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPSender",
								"label": "USDC",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1717,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPSender",
								"label": "cctpConfigurationOwner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1769,
								"contract": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol:CCTPSender",
								"label": "chainIdToCCTPDomain",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint16,t_uint32)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IMessageTransmitter)2602": {
								"encoding": "inplace",
								"label": "contract IMessageTransmitter",
								"numberOfBytes": "20"
							},
							"t_contract(ITokenMessenger)2677": {
								"encoding": "inplace",
								"label": "contract ITokenMessenger",
								"numberOfBytes": "20"
							},
							"t_contract(IWormhole)3485": {
								"encoding": "inplace",
								"label": "contract IWormhole",
								"numberOfBytes": "20"
							},
							"t_contract(IWormholeRelayer)3919": {
								"encoding": "inplace",
								"label": "contract IWormholeRelayer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_mapping(t_uint16,t_uint32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setCCTPDomain(uint16,uint32)": {
								"notice": "Sets the CCTP Domain corresponding to chain 'chain' to be 'cctpDomain' So that transfers of USDC to chain 'chain' use the target CCTP domain 'cctpDomain' This action can only be performed by 'cctpConfigurationOwner', who is set to be the deployer Currently, cctp domains are: Ethereum: Wormhole chain id 2, cctp domain 0 Avalanche: Wormhole chain id 6, cctp domain 1 Optimism: Wormhole chain id 24, cctp domain 2 Arbitrum: Wormhole chain id 23, cctp domain 3 Base: Wormhole chain id 30, cctp domain 6 These can be set via: setCCTPDomain(2, 0); setCCTPDomain(6, 1); setCCTPDomain(24, 2); setCCTPDomain(23, 3); setCCTPDomain(30, 6);"
							},
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				}
			},
			"BRIDGE_PARTNERSHIP/src/TokenBase.sol": {
				"TokenBase": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridge",
							"outputs": [
								{
									"internalType": "contract ITokenBridge",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"tokenBridge()": "c6328a46",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridge\",\"outputs\":[{\"internalType\":\"contract ITokenBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/TokenBase.sol\":\"TokenBase\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/lib.d.sol\":{\"keccak256\":\"0x2875da2b3be594eb327b762fb8e8580e50c9b1d2850065e38c5ad688d960bdfa\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://d074d6b0e3e77088e6d0bfc6957b4d6f8b86d94990be1da9aabbabb2785535db\",\"dweb:/ipfs/QmNa5Fk1mSnYpZhtmB65cM9gGQDCw8eyadAQpPKAQh96Aj\"]},\"BRIDGE_PARTNERSHIP/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol\":{\"keccak256\":\"0x4c2b579e45cd567796c6639d4a1b7332e196343b2b0b351d4b2f1b7eb9a5de15\",\"urls\":[\"bzz-raw://ead29a9e0ccf4f0559c6aacf2dff6654b33e2a897c96b44c8a601d51a102e3b6\",\"dweb:/ipfs/QmQqiw27bAZUMZG2uMhSUnfxp9SVRpi25VGGnkTqw6MYEj\"]},\"BRIDGE_PARTNERSHIP/src/CCTPBase.sol\":{\"keccak256\":\"0xb0cb70d96d3c57421feca6842eab200246abcfcd1da1d53003449c9f517b9b36\",\"urls\":[\"bzz-raw://b12d2fa5425eaf7bfb6d5c7c2f949dbd50c11939f4636a64cd1b440ab4010999\",\"dweb:/ipfs/QmZZoGiQPRTCZtmjxsTzcd55wCkiriPiBPFU911XP3536i\"]},\"BRIDGE_PARTNERSHIP/src/TokenBase.sol\":{\"keccak256\":\"0x3b5fb0a5f7771786872b6860c4d3da6ee7bf25b8056cf3d6698a6e0249b93e6c\",\"urls\":[\"bzz-raw://01d3397960486a2d66765b317d97f9f2f804a77c324ca9bac680d05f1ca647e9\",\"dweb:/ipfs/QmeAT4kfAqE1YLT4Goe24bBNLPZksBZ4nJmQoKpHo6Js2g\"]},\"BRIDGE_PARTNERSHIP/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"BRIDGE_PARTNERSHIP/src/WormholeRelayerSDK.sol\":{\"keccak256\":\"0x39b2a67c047941692c560b01198cfa5e24d326c11c23ae6b420571849ae80d0c\",\"urls\":[\"bzz-raw://37d655ea5d15012a32f05f08151d5cb597065b5af6102060c2f7836b32356e25\",\"dweb:/ipfs/QmYNenC57JECfqSmjnXa59yxkmPjTmSi6fh53XC343d3ru\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0xad665028667c70a3663044b335e3a1d388da3018bf4720853adb9fa8f49a9342\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://d86e90b3ee0c951fe3169df0af0d1071fb073d506923ecfee4e51f3eef941919\",\"dweb:/ipfs/Qmdu9AjEp1JaD6KEwe5S5pxgnzii5QXFR2peApBNkhNTes\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xbb3a2b248ef78c421dd137e75236af605d4618acca294e8930a9ba1aed769c9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://e5402ba174843110d8ac66b1f7cc90d4dbc2d50996ed15165a64b093b33dfcd8\",\"dweb:/ipfs/QmfRtStHfFaQjSs5wocQmQEdosd6a5QmTP6rbB6ETqgmb4\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 708,
								"contract": "BRIDGE_PARTNERSHIP/src/TokenBase.sol:TokenBase",
								"label": "wormholeRelayer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWormholeRelayer)3919"
							},
							{
								"astId": 711,
								"contract": "BRIDGE_PARTNERSHIP/src/TokenBase.sol:TokenBase",
								"label": "wormhole",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWormhole)3485"
							},
							{
								"astId": 713,
								"contract": "BRIDGE_PARTNERSHIP/src/TokenBase.sol:TokenBase",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 717,
								"contract": "BRIDGE_PARTNERSHIP/src/TokenBase.sol:TokenBase",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_bytes32)"
							},
							{
								"astId": 2103,
								"contract": "BRIDGE_PARTNERSHIP/src/TokenBase.sol:TokenBase",
								"label": "tokenBridge",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ITokenBridge)3155"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(ITokenBridge)3155": {
								"encoding": "inplace",
								"label": "contract ITokenBridge",
								"numberOfBytes": "20"
							},
							"t_contract(IWormhole)3485": {
								"encoding": "inplace",
								"label": "contract IWormhole",
								"numberOfBytes": "20"
							},
							"t_contract(IWormholeRelayer)3919": {
								"encoding": "inplace",
								"label": "contract IWormholeRelayer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				},
				"TokenReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "NotAnEvmAddress",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "bytes[]",
									"name": "additionalVaas",
									"type": "bytes[]"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								},
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "receiveWormholeMessages",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridge",
							"outputs": [
								{
									"internalType": "contract ITokenBridge",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": "529dca32",
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"tokenBridge()": "c6328a46",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"NotAnEvmAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"additionalVaas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"receiveWormholeMessages\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridge\",\"outputs\":[{\"internalType\":\"contract ITokenBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/TokenBase.sol\":\"TokenReceiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/lib.d.sol\":{\"keccak256\":\"0x2875da2b3be594eb327b762fb8e8580e50c9b1d2850065e38c5ad688d960bdfa\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://d074d6b0e3e77088e6d0bfc6957b4d6f8b86d94990be1da9aabbabb2785535db\",\"dweb:/ipfs/QmNa5Fk1mSnYpZhtmB65cM9gGQDCw8eyadAQpPKAQh96Aj\"]},\"BRIDGE_PARTNERSHIP/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol\":{\"keccak256\":\"0x4c2b579e45cd567796c6639d4a1b7332e196343b2b0b351d4b2f1b7eb9a5de15\",\"urls\":[\"bzz-raw://ead29a9e0ccf4f0559c6aacf2dff6654b33e2a897c96b44c8a601d51a102e3b6\",\"dweb:/ipfs/QmQqiw27bAZUMZG2uMhSUnfxp9SVRpi25VGGnkTqw6MYEj\"]},\"BRIDGE_PARTNERSHIP/src/CCTPBase.sol\":{\"keccak256\":\"0xb0cb70d96d3c57421feca6842eab200246abcfcd1da1d53003449c9f517b9b36\",\"urls\":[\"bzz-raw://b12d2fa5425eaf7bfb6d5c7c2f949dbd50c11939f4636a64cd1b440ab4010999\",\"dweb:/ipfs/QmZZoGiQPRTCZtmjxsTzcd55wCkiriPiBPFU911XP3536i\"]},\"BRIDGE_PARTNERSHIP/src/TokenBase.sol\":{\"keccak256\":\"0x3b5fb0a5f7771786872b6860c4d3da6ee7bf25b8056cf3d6698a6e0249b93e6c\",\"urls\":[\"bzz-raw://01d3397960486a2d66765b317d97f9f2f804a77c324ca9bac680d05f1ca647e9\",\"dweb:/ipfs/QmeAT4kfAqE1YLT4Goe24bBNLPZksBZ4nJmQoKpHo6Js2g\"]},\"BRIDGE_PARTNERSHIP/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"BRIDGE_PARTNERSHIP/src/WormholeRelayerSDK.sol\":{\"keccak256\":\"0x39b2a67c047941692c560b01198cfa5e24d326c11c23ae6b420571849ae80d0c\",\"urls\":[\"bzz-raw://37d655ea5d15012a32f05f08151d5cb597065b5af6102060c2f7836b32356e25\",\"dweb:/ipfs/QmYNenC57JECfqSmjnXa59yxkmPjTmSi6fh53XC343d3ru\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0xad665028667c70a3663044b335e3a1d388da3018bf4720853adb9fa8f49a9342\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://d86e90b3ee0c951fe3169df0af0d1071fb073d506923ecfee4e51f3eef941919\",\"dweb:/ipfs/Qmdu9AjEp1JaD6KEwe5S5pxgnzii5QXFR2peApBNkhNTes\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xbb3a2b248ef78c421dd137e75236af605d4618acca294e8930a9ba1aed769c9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://e5402ba174843110d8ac66b1f7cc90d4dbc2d50996ed15165a64b093b33dfcd8\",\"dweb:/ipfs/QmfRtStHfFaQjSs5wocQmQEdosd6a5QmTP6rbB6ETqgmb4\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 708,
								"contract": "BRIDGE_PARTNERSHIP/src/TokenBase.sol:TokenReceiver",
								"label": "wormholeRelayer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWormholeRelayer)3919"
							},
							{
								"astId": 711,
								"contract": "BRIDGE_PARTNERSHIP/src/TokenBase.sol:TokenReceiver",
								"label": "wormhole",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWormhole)3485"
							},
							{
								"astId": 713,
								"contract": "BRIDGE_PARTNERSHIP/src/TokenBase.sol:TokenReceiver",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 717,
								"contract": "BRIDGE_PARTNERSHIP/src/TokenBase.sol:TokenReceiver",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_bytes32)"
							},
							{
								"astId": 2103,
								"contract": "BRIDGE_PARTNERSHIP/src/TokenBase.sol:TokenReceiver",
								"label": "tokenBridge",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ITokenBridge)3155"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(ITokenBridge)3155": {
								"encoding": "inplace",
								"label": "contract ITokenBridge",
								"numberOfBytes": "20"
							},
							"t_contract(IWormhole)3485": {
								"encoding": "inplace",
								"label": "contract IWormhole",
								"numberOfBytes": "20"
							},
							"t_contract(IWormholeRelayer)3919": {
								"encoding": "inplace",
								"label": "contract IWormholeRelayer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				},
				"TokenSender": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridge",
							"outputs": [
								{
									"internalType": "contract ITokenBridge",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"tokenBridge()": "c6328a46",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridge\",\"outputs\":[{\"internalType\":\"contract ITokenBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/TokenBase.sol\":\"TokenSender\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/lib.d.sol\":{\"keccak256\":\"0x2875da2b3be594eb327b762fb8e8580e50c9b1d2850065e38c5ad688d960bdfa\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://d074d6b0e3e77088e6d0bfc6957b4d6f8b86d94990be1da9aabbabb2785535db\",\"dweb:/ipfs/QmNa5Fk1mSnYpZhtmB65cM9gGQDCw8eyadAQpPKAQh96Aj\"]},\"BRIDGE_PARTNERSHIP/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol\":{\"keccak256\":\"0x4c2b579e45cd567796c6639d4a1b7332e196343b2b0b351d4b2f1b7eb9a5de15\",\"urls\":[\"bzz-raw://ead29a9e0ccf4f0559c6aacf2dff6654b33e2a897c96b44c8a601d51a102e3b6\",\"dweb:/ipfs/QmQqiw27bAZUMZG2uMhSUnfxp9SVRpi25VGGnkTqw6MYEj\"]},\"BRIDGE_PARTNERSHIP/src/CCTPBase.sol\":{\"keccak256\":\"0xb0cb70d96d3c57421feca6842eab200246abcfcd1da1d53003449c9f517b9b36\",\"urls\":[\"bzz-raw://b12d2fa5425eaf7bfb6d5c7c2f949dbd50c11939f4636a64cd1b440ab4010999\",\"dweb:/ipfs/QmZZoGiQPRTCZtmjxsTzcd55wCkiriPiBPFU911XP3536i\"]},\"BRIDGE_PARTNERSHIP/src/TokenBase.sol\":{\"keccak256\":\"0x3b5fb0a5f7771786872b6860c4d3da6ee7bf25b8056cf3d6698a6e0249b93e6c\",\"urls\":[\"bzz-raw://01d3397960486a2d66765b317d97f9f2f804a77c324ca9bac680d05f1ca647e9\",\"dweb:/ipfs/QmeAT4kfAqE1YLT4Goe24bBNLPZksBZ4nJmQoKpHo6Js2g\"]},\"BRIDGE_PARTNERSHIP/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"BRIDGE_PARTNERSHIP/src/WormholeRelayerSDK.sol\":{\"keccak256\":\"0x39b2a67c047941692c560b01198cfa5e24d326c11c23ae6b420571849ae80d0c\",\"urls\":[\"bzz-raw://37d655ea5d15012a32f05f08151d5cb597065b5af6102060c2f7836b32356e25\",\"dweb:/ipfs/QmYNenC57JECfqSmjnXa59yxkmPjTmSi6fh53XC343d3ru\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0xad665028667c70a3663044b335e3a1d388da3018bf4720853adb9fa8f49a9342\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://d86e90b3ee0c951fe3169df0af0d1071fb073d506923ecfee4e51f3eef941919\",\"dweb:/ipfs/Qmdu9AjEp1JaD6KEwe5S5pxgnzii5QXFR2peApBNkhNTes\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xbb3a2b248ef78c421dd137e75236af605d4618acca294e8930a9ba1aed769c9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://e5402ba174843110d8ac66b1f7cc90d4dbc2d50996ed15165a64b093b33dfcd8\",\"dweb:/ipfs/QmfRtStHfFaQjSs5wocQmQEdosd6a5QmTP6rbB6ETqgmb4\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 708,
								"contract": "BRIDGE_PARTNERSHIP/src/TokenBase.sol:TokenSender",
								"label": "wormholeRelayer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWormholeRelayer)3919"
							},
							{
								"astId": 711,
								"contract": "BRIDGE_PARTNERSHIP/src/TokenBase.sol:TokenSender",
								"label": "wormhole",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWormhole)3485"
							},
							{
								"astId": 713,
								"contract": "BRIDGE_PARTNERSHIP/src/TokenBase.sol:TokenSender",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 717,
								"contract": "BRIDGE_PARTNERSHIP/src/TokenBase.sol:TokenSender",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_bytes32)"
							},
							{
								"astId": 2103,
								"contract": "BRIDGE_PARTNERSHIP/src/TokenBase.sol:TokenSender",
								"label": "tokenBridge",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ITokenBridge)3155"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(ITokenBridge)3155": {
								"encoding": "inplace",
								"label": "contract ITokenBridge",
								"numberOfBytes": "20"
							},
							"t_contract(IWormhole)3485": {
								"encoding": "inplace",
								"label": "contract IWormhole",
								"numberOfBytes": "20"
							},
							"t_contract(IWormholeRelayer)3919": {
								"encoding": "inplace",
								"label": "contract IWormholeRelayer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				}
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol": {
				"IMessageTransmitter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "message",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "receiveMessage",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "originalMessage",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "originalAttestation",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "newMessageBody",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "newDestinationCaller",
									"type": "bytes32"
								}
							],
							"name": "replaceMessage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "destinationDomain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "messageBody",
									"type": "bytes"
								}
							],
							"name": "sendMessage",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "destinationDomain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "destinationCaller",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "messageBody",
									"type": "bytes"
								}
							],
							"name": "sendMessageWithCaller",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"receiveMessage(bytes,bytes)": {
								"params": {
									"message": "The message raw bytes",
									"signature": "The message signature"
								},
								"returns": {
									"success": "bool, true if successful"
								}
							},
							"replaceMessage(bytes,bytes,bytes,bytes32)": {
								"details": "The `originalAttestation` must be a valid attestation of `originalMessage`.",
								"params": {
									"newDestinationCaller": "the new destination caller",
									"newMessageBody": "new message body of replaced message",
									"originalAttestation": "attestation of `originalMessage`",
									"originalMessage": "original message to replace"
								}
							},
							"sendMessage(uint32,bytes32,bytes)": {
								"details": "Increment nonce, format the message, and emit `MessageSent` event with message information.",
								"params": {
									"destinationDomain": "Domain of destination chain",
									"messageBody": "Raw bytes content of message",
									"recipient": "Address of message recipient on destination domain as bytes32"
								},
								"returns": {
									"_0": "nonce reserved by message"
								}
							},
							"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)": {
								"details": "Increment nonce, format the message, and emit `MessageSent` event with message information. WARNING: if the `destinationCaller` does not represent a valid address as bytes32, then it will not be possible to broadcast the message on the destination domain. This is an advanced feature, and the standard sendMessage() should be preferred for use cases where a specific destination caller is not required.",
								"params": {
									"destinationCaller": "caller on the destination domain, as bytes32",
									"destinationDomain": "Domain of destination chain",
									"messageBody": "Raw bytes content of message",
									"recipient": "Address of message recipient on destination domain as bytes32"
								},
								"returns": {
									"_0": "nonce reserved by message"
								}
							}
						},
						"title": "IMessageTransmitter",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"receiveMessage(bytes,bytes)": "57ecfd28",
							"replaceMessage(bytes,bytes,bytes,bytes32)": "b857b774",
							"sendMessage(uint32,bytes32,bytes)": "0ba469bc",
							"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)": "f7259a75"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"receiveMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"originalMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"originalAttestation\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"newMessageBody\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"newDestinationCaller\",\"type\":\"bytes32\"}],\"name\":\"replaceMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"name\":\"sendMessage\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"destinationCaller\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"name\":\"sendMessageWithCaller\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveMessage(bytes,bytes)\":{\"params\":{\"message\":\"The message raw bytes\",\"signature\":\"The message signature\"},\"returns\":{\"success\":\"bool, true if successful\"}},\"replaceMessage(bytes,bytes,bytes,bytes32)\":{\"details\":\"The `originalAttestation` must be a valid attestation of `originalMessage`.\",\"params\":{\"newDestinationCaller\":\"the new destination caller\",\"newMessageBody\":\"new message body of replaced message\",\"originalAttestation\":\"attestation of `originalMessage`\",\"originalMessage\":\"original message to replace\"}},\"sendMessage(uint32,bytes32,bytes)\":{\"details\":\"Increment nonce, format the message, and emit `MessageSent` event with message information.\",\"params\":{\"destinationDomain\":\"Domain of destination chain\",\"messageBody\":\"Raw bytes content of message\",\"recipient\":\"Address of message recipient on destination domain as bytes32\"},\"returns\":{\"_0\":\"nonce reserved by message\"}},\"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)\":{\"details\":\"Increment nonce, format the message, and emit `MessageSent` event with message information. WARNING: if the `destinationCaller` does not represent a valid address as bytes32, then it will not be possible to broadcast the message on the destination domain. This is an advanced feature, and the standard sendMessage() should be preferred for use cases where a specific destination caller is not required.\",\"params\":{\"destinationCaller\":\"caller on the destination domain, as bytes32\",\"destinationDomain\":\"Domain of destination chain\",\"messageBody\":\"Raw bytes content of message\",\"recipient\":\"Address of message recipient on destination domain as bytes32\"},\"returns\":{\"_0\":\"nonce reserved by message\"}}},\"title\":\"IMessageTransmitter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiveMessage(bytes,bytes)\":{\"notice\":\"Receives an incoming message, validating the header and passing the body to application-specific handler.\"},\"replaceMessage(bytes,bytes,bytes,bytes32)\":{\"notice\":\"Replace a message with a new message body and/or destination caller.\"},\"sendMessage(uint32,bytes32,bytes)\":{\"notice\":\"Sends an outgoing message from the source domain.\"},\"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)\":{\"notice\":\"Sends an outgoing message from the source domain, with a specified caller on the destination domain.\"}},\"notice\":\"Interface for message transmitters, which both relay and receive messages.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":\"IMessageTransmitter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"receiveMessage(bytes,bytes)": {
								"notice": "Receives an incoming message, validating the header and passing the body to application-specific handler."
							},
							"replaceMessage(bytes,bytes,bytes,bytes32)": {
								"notice": "Replace a message with a new message body and/or destination caller."
							},
							"sendMessage(uint32,bytes32,bytes)": {
								"notice": "Sends an outgoing message from the source domain."
							},
							"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)": {
								"notice": "Sends an outgoing message from the source domain, with a specified caller on the destination domain."
							}
						},
						"notice": "Interface for message transmitters, which both relay and receive messages.",
						"version": 1
					}
				}
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol": {
				"IReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "message",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "receiveMessage",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"receiveMessage(bytes,bytes)": {
								"params": {
									"message": "The message raw bytes",
									"signature": "The message signature"
								},
								"returns": {
									"success": "bool, true if successful"
								}
							}
						},
						"title": "IReceiver",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"receiveMessage(bytes,bytes)": "57ecfd28"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"receiveMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveMessage(bytes,bytes)\":{\"params\":{\"message\":\"The message raw bytes\",\"signature\":\"The message signature\"},\"returns\":{\"success\":\"bool, true if successful\"}}},\"title\":\"IReceiver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiveMessage(bytes,bytes)\":{\"notice\":\"Receives an incoming message, validating the header and passing the body to application-specific handler.\"}},\"notice\":\"Receives messages on destination chain and forwards them to IMessageDestinationHandler\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol\":\"IReceiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"receiveMessage(bytes,bytes)": {
								"notice": "Receives an incoming message, validating the header and passing the body to application-specific handler."
							}
						},
						"notice": "Receives messages on destination chain and forwards them to IMessageDestinationHandler",
						"version": 1
					}
				}
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol": {
				"IRelayer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "originalMessage",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "originalAttestation",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "newMessageBody",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "newDestinationCaller",
									"type": "bytes32"
								}
							],
							"name": "replaceMessage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "destinationDomain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "messageBody",
									"type": "bytes"
								}
							],
							"name": "sendMessage",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "destinationDomain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "destinationCaller",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "messageBody",
									"type": "bytes"
								}
							],
							"name": "sendMessageWithCaller",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"replaceMessage(bytes,bytes,bytes,bytes32)": {
								"details": "The `originalAttestation` must be a valid attestation of `originalMessage`.",
								"params": {
									"newDestinationCaller": "the new destination caller",
									"newMessageBody": "new message body of replaced message",
									"originalAttestation": "attestation of `originalMessage`",
									"originalMessage": "original message to replace"
								}
							},
							"sendMessage(uint32,bytes32,bytes)": {
								"details": "Increment nonce, format the message, and emit `MessageSent` event with message information.",
								"params": {
									"destinationDomain": "Domain of destination chain",
									"messageBody": "Raw bytes content of message",
									"recipient": "Address of message recipient on destination domain as bytes32"
								},
								"returns": {
									"_0": "nonce reserved by message"
								}
							},
							"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)": {
								"details": "Increment nonce, format the message, and emit `MessageSent` event with message information. WARNING: if the `destinationCaller` does not represent a valid address as bytes32, then it will not be possible to broadcast the message on the destination domain. This is an advanced feature, and the standard sendMessage() should be preferred for use cases where a specific destination caller is not required.",
								"params": {
									"destinationCaller": "caller on the destination domain, as bytes32",
									"destinationDomain": "Domain of destination chain",
									"messageBody": "Raw bytes content of message",
									"recipient": "Address of message recipient on destination domain as bytes32"
								},
								"returns": {
									"_0": "nonce reserved by message"
								}
							}
						},
						"title": "IRelayer",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"replaceMessage(bytes,bytes,bytes,bytes32)": "b857b774",
							"sendMessage(uint32,bytes32,bytes)": "0ba469bc",
							"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)": "f7259a75"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"originalMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"originalAttestation\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"newMessageBody\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"newDestinationCaller\",\"type\":\"bytes32\"}],\"name\":\"replaceMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"name\":\"sendMessage\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"destinationCaller\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"name\":\"sendMessageWithCaller\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"replaceMessage(bytes,bytes,bytes,bytes32)\":{\"details\":\"The `originalAttestation` must be a valid attestation of `originalMessage`.\",\"params\":{\"newDestinationCaller\":\"the new destination caller\",\"newMessageBody\":\"new message body of replaced message\",\"originalAttestation\":\"attestation of `originalMessage`\",\"originalMessage\":\"original message to replace\"}},\"sendMessage(uint32,bytes32,bytes)\":{\"details\":\"Increment nonce, format the message, and emit `MessageSent` event with message information.\",\"params\":{\"destinationDomain\":\"Domain of destination chain\",\"messageBody\":\"Raw bytes content of message\",\"recipient\":\"Address of message recipient on destination domain as bytes32\"},\"returns\":{\"_0\":\"nonce reserved by message\"}},\"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)\":{\"details\":\"Increment nonce, format the message, and emit `MessageSent` event with message information. WARNING: if the `destinationCaller` does not represent a valid address as bytes32, then it will not be possible to broadcast the message on the destination domain. This is an advanced feature, and the standard sendMessage() should be preferred for use cases where a specific destination caller is not required.\",\"params\":{\"destinationCaller\":\"caller on the destination domain, as bytes32\",\"destinationDomain\":\"Domain of destination chain\",\"messageBody\":\"Raw bytes content of message\",\"recipient\":\"Address of message recipient on destination domain as bytes32\"},\"returns\":{\"_0\":\"nonce reserved by message\"}}},\"title\":\"IRelayer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"replaceMessage(bytes,bytes,bytes,bytes32)\":{\"notice\":\"Replace a message with a new message body and/or destination caller.\"},\"sendMessage(uint32,bytes32,bytes)\":{\"notice\":\"Sends an outgoing message from the source domain.\"},\"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)\":{\"notice\":\"Sends an outgoing message from the source domain, with a specified caller on the destination domain.\"}},\"notice\":\"Sends messages from source domain to destination domain\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol\":\"IRelayer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"replaceMessage(bytes,bytes,bytes,bytes32)": {
								"notice": "Replace a message with a new message body and/or destination caller."
							},
							"sendMessage(uint32,bytes32,bytes)": {
								"notice": "Sends an outgoing message from the source domain."
							},
							"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)": {
								"notice": "Sends an outgoing message from the source domain, with a specified caller on the destination domain."
							}
						},
						"notice": "Sends messages from source domain to destination domain",
						"version": 1
					}
				}
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol": {
				"ITokenMessenger": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "destinationDomain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "mintRecipient",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "burnToken",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "destinationCaller",
									"type": "bytes32"
								}
							],
							"name": "depositForBurnWithCaller",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "nonce",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"depositForBurnWithCaller(uint256,uint32,bytes32,address,bytes32)": {
								"details": "reverts if: - given destinationCaller is zero address - given burnToken is not supported - given destinationDomain has no TokenMessenger registered - transferFrom() reverts. For example, if sender's burnToken balance or approved allowance to this contract is less than `amount`. - burn() reverts. For example, if `amount` is 0. - MessageTransmitter returns false or reverts.",
								"params": {
									"amount": "amount of tokens to burn",
									"burnToken": "address of contract to burn deposited tokens, on local domain",
									"destinationCaller": "caller on the destination domain, as bytes32",
									"destinationDomain": "destination domain",
									"mintRecipient": "address of mint recipient on destination domain"
								},
								"returns": {
									"nonce": "unique nonce reserved by message"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"depositForBurnWithCaller(uint256,uint32,bytes32,address,bytes32)": "f856ddb6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"mintRecipient\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"burnToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"destinationCaller\",\"type\":\"bytes32\"}],\"name\":\"depositForBurnWithCaller\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"depositForBurnWithCaller(uint256,uint32,bytes32,address,bytes32)\":{\"details\":\"reverts if: - given destinationCaller is zero address - given burnToken is not supported - given destinationDomain has no TokenMessenger registered - transferFrom() reverts. For example, if sender's burnToken balance or approved allowance to this contract is less than `amount`. - burn() reverts. For example, if `amount` is 0. - MessageTransmitter returns false or reverts.\",\"params\":{\"amount\":\"amount of tokens to burn\",\"burnToken\":\"address of contract to burn deposited tokens, on local domain\",\"destinationCaller\":\"caller on the destination domain, as bytes32\",\"destinationDomain\":\"destination domain\",\"mintRecipient\":\"address of mint recipient on destination domain\"},\"returns\":{\"nonce\":\"unique nonce reserved by message\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"depositForBurnWithCaller(uint256,uint32,bytes32,address,bytes32)\":{\"notice\":\"Deposits and burns tokens from sender to be minted on destination domain. The mint on the destination domain must be called by `destinationCaller`. WARNING: if the `destinationCaller` does not represent a valid address as bytes32, then it will not be possible to broadcast the message on the destination domain. This is an advanced feature, and the standard depositForBurn() should be preferred for use cases where a specific destination caller is not required. Emits a `DepositForBurn` event.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":\"ITokenMessenger\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"depositForBurnWithCaller(uint256,uint32,bytes32,address,bytes32)": {
								"notice": "Deposits and burns tokens from sender to be minted on destination domain. The mint on the destination domain must be called by `destinationCaller`. WARNING: if the `destinationCaller` does not represent a valid address as bytes32, then it will not be possible to broadcast the message on the destination domain. This is an advanced feature, and the standard depositForBurn() should be preferred for use cases where a specific destination caller is not required. Emits a `DepositForBurn` event."
							}
						},
						"version": 1
					}
				}
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/ITokenBridge.sol": {
				"ITokenBridge": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newContract",
									"type": "address"
								}
							],
							"name": "ContractUpgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "contract IWETH",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "_parseTransferCommon",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "to",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "toChain",
											"type": "uint16"
										},
										{
											"internalType": "uint256",
											"name": "fee",
											"type": "uint256"
										}
									],
									"internalType": "struct ITokenBridge.Transfer",
									"name": "transfer",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								}
							],
							"name": "attestToken",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "chainId_",
									"type": "uint16"
								}
							],
							"name": "bridgeContracts",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "chainId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "completeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "completeTransferAndUnwrapETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "completeTransferAndUnwrapETHWithPayload",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "completeTransferWithPayload",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "createWrapped",
							"outputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "symbol",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "name",
											"type": "bytes32"
										}
									],
									"internalType": "struct ITokenBridge.AssetMeta",
									"name": "meta",
									"type": "tuple"
								}
							],
							"name": "encodeAssetMeta",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "to",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "toChain",
											"type": "uint16"
										},
										{
											"internalType": "uint256",
											"name": "fee",
											"type": "uint256"
										}
									],
									"internalType": "struct ITokenBridge.Transfer",
									"name": "transfer",
									"type": "tuple"
								}
							],
							"name": "encodeTransfer",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "to",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "toChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "fromAddress",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "payload",
											"type": "bytes"
										}
									],
									"internalType": "struct ITokenBridge.TransferWithPayload",
									"name": "transfer",
									"type": "tuple"
								}
							],
							"name": "encodeTransferWithPayload",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "evmChainId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finality",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								}
							],
							"name": "governanceActionIsConsumed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceChainId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceContract",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isFork",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "impl",
									"type": "address"
								}
							],
							"name": "isInitialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								}
							],
							"name": "isTransferCompleted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "isWrappedAsset",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "outstandingBridged",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parseAssetMeta",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "symbol",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "name",
											"type": "bytes32"
										}
									],
									"internalType": "struct ITokenBridge.AssetMeta",
									"name": "meta",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parsePayloadID",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "payloadID",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedRecoverChainId",
									"type": "bytes"
								}
							],
							"name": "parseRecoverChainId",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "evmChainId",
											"type": "uint256"
										},
										{
											"internalType": "uint16",
											"name": "newChainId",
											"type": "uint16"
										}
									],
									"internalType": "struct ITokenBridge.RecoverChainId",
									"name": "rci",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parseRegisterChain",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "uint16",
											"name": "emitterChainID",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										}
									],
									"internalType": "struct ITokenBridge.RegisterChain",
									"name": "chain",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parseTransfer",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "to",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "toChain",
											"type": "uint16"
										},
										{
											"internalType": "uint256",
											"name": "fee",
											"type": "uint256"
										}
									],
									"internalType": "struct ITokenBridge.Transfer",
									"name": "transfer",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parseTransferWithPayload",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "to",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "toChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "fromAddress",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "payload",
											"type": "bytes"
										}
									],
									"internalType": "struct ITokenBridge.TransferWithPayload",
									"name": "transfer",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parseUpgrade",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "newContract",
											"type": "bytes32"
										}
									],
									"internalType": "struct ITokenBridge.UpgradeContract",
									"name": "chain",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVM",
									"type": "bytes"
								}
							],
							"name": "registerChain",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVM",
									"type": "bytes"
								}
							],
							"name": "submitRecoverChainId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "recipientChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "arbiterFee",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								}
							],
							"name": "transferTokens",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "recipientChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								}
							],
							"name": "transferTokensWithPayload",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "updateWrapped",
							"outputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVM",
									"type": "bytes"
								}
							],
							"name": "upgrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "recipientChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "arbiterFee",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								}
							],
							"name": "wrapAndTransferETH",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "recipientChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								}
							],
							"name": "wrapAndTransferETHWithPayload",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "tokenChainId",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "tokenAddress",
									"type": "bytes32"
								}
							],
							"name": "wrappedAsset",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"_parseTransferCommon(bytes)": "e89bc401",
							"attestToken(address,uint32)": "c48fa115",
							"bridgeContracts(uint16)": "ad66a5f1",
							"chainId()": "9a8a0592",
							"completeTransfer(bytes)": "c6878519",
							"completeTransferAndUnwrapETH(bytes)": "ff200cde",
							"completeTransferAndUnwrapETHWithPayload(bytes)": "1c8475e4",
							"completeTransferWithPayload(bytes)": "c3f511c1",
							"createWrapped(bytes)": "e8059810",
							"encodeAssetMeta((uint8,bytes32,uint16,uint8,bytes32,bytes32))": "b046223b",
							"encodeTransfer((uint8,uint256,bytes32,uint16,bytes32,uint16,uint256))": "5f854266",
							"encodeTransferWithPayload((uint8,uint256,bytes32,uint16,bytes32,uint16,bytes32,bytes))": "d56e2e24",
							"evmChainId()": "64d42b17",
							"finality()": "739fc8d1",
							"governanceActionIsConsumed(bytes32)": "2c3c02a4",
							"governanceChainId()": "fbe3c2cd",
							"governanceContract()": "b172b222",
							"implementation()": "5c60da1b",
							"initialize()": "8129fc1c",
							"isFork()": "e039f224",
							"isInitialized(address)": "d60b347f",
							"isTransferCompleted(bytes32)": "aa4efa5b",
							"isWrappedAsset(address)": "1a2be4da",
							"outstandingBridged(address)": "b96c7e4d",
							"parseAssetMeta(bytes)": "07dfd8fb",
							"parsePayloadID(bytes)": "0f509008",
							"parseRecoverChainId(bytes)": "cb4cfea8",
							"parseRegisterChain(bytes)": "01f53255",
							"parseTransfer(bytes)": "2b511375",
							"parseTransferWithPayload(bytes)": "ea63738d",
							"parseUpgrade(bytes)": "fbeeacd9",
							"registerChain(bytes)": "a5799f93",
							"submitRecoverChainId(bytes)": "178149e7",
							"tokenImplementation()": "2f3a3d5d",
							"transferTokens(address,uint256,uint16,bytes32,uint256,uint32)": "0f5287b0",
							"transferTokensWithPayload(address,uint256,uint16,bytes32,uint32,bytes)": "c5a5ebda",
							"updateWrapped(bytes)": "f768441f",
							"upgrade(bytes)": "25394645",
							"wormhole()": "84acd1bb",
							"wrapAndTransferETH(uint16,bytes32,uint256,uint32)": "9981509f",
							"wrapAndTransferETHWithPayload(uint16,bytes32,uint32,bytes)": "bee9cdfc",
							"wrappedAsset(uint16,bytes32)": "1ff1e286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractUpgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"_parseTransferCommon\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"toChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBridge.Transfer\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"attestToken\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId_\",\"type\":\"uint16\"}],\"name\":\"bridgeContracts\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"completeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"completeTransferAndUnwrapETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"completeTransferAndUnwrapETHWithPayload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"completeTransferWithPayload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"createWrapped\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"symbol\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"internalType\":\"struct ITokenBridge.AssetMeta\",\"name\":\"meta\",\"type\":\"tuple\"}],\"name\":\"encodeAssetMeta\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"toChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBridge.Transfer\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"name\":\"encodeTransfer\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"toChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"fromAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct ITokenBridge.TransferWithPayload\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"name\":\"encodeTransferWithPayload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"evmChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finality\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"governanceActionIsConsumed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFork\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"isTransferCompleted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isWrappedAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"outstandingBridged\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parseAssetMeta\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"symbol\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"internalType\":\"struct ITokenBridge.AssetMeta\",\"name\":\"meta\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parsePayloadID\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedRecoverChainId\",\"type\":\"bytes\"}],\"name\":\"parseRecoverChainId\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"evmChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"newChainId\",\"type\":\"uint16\"}],\"internalType\":\"struct ITokenBridge.RecoverChainId\",\"name\":\"rci\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parseRegisterChain\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"emitterChainID\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"}],\"internalType\":\"struct ITokenBridge.RegisterChain\",\"name\":\"chain\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parseTransfer\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"toChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBridge.Transfer\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parseTransferWithPayload\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"toChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"fromAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct ITokenBridge.TransferWithPayload\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parseUpgrade\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"newContract\",\"type\":\"bytes32\"}],\"internalType\":\"struct ITokenBridge.UpgradeContract\",\"name\":\"chain\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"registerChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"submitRecoverChainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"arbiterFee\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"transferTokens\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"transferTokensWithPayload\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"updateWrapped\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"arbiterFee\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"wrapAndTransferETH\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"wrapAndTransferETHWithPayload\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"tokenChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"}],\"name\":\"wrappedAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/interfaces/ITokenBridge.sol\":\"ITokenBridge\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0xad665028667c70a3663044b335e3a1d388da3018bf4720853adb9fa8f49a9342\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://d86e90b3ee0c951fe3169df0af0d1071fb073d506923ecfee4e51f3eef941919\",\"dweb:/ipfs/Qmdu9AjEp1JaD6KEwe5S5pxgnzii5QXFR2peApBNkhNTes\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xbb3a2b248ef78c421dd137e75236af605d4618acca294e8930a9ba1aed769c9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://e5402ba174843110d8ac66b1f7cc90d4dbc2d50996ed15165a64b093b33dfcd8\",\"dweb:/ipfs/QmfRtStHfFaQjSs5wocQmQEdosd6a5QmTP6rbB6ETqgmb4\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/IWETH.sol": {
				"IWETH": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"deposit()": "d0e30db0",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/interfaces/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"BRIDGE_PARTNERSHIP/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xbb3a2b248ef78c421dd137e75236af605d4618acca294e8930a9ba1aed769c9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://e5402ba174843110d8ac66b1f7cc90d4dbc2d50996ed15165a64b093b33dfcd8\",\"dweb:/ipfs/QmfRtStHfFaQjSs5wocQmQEdosd6a5QmTP6rbB6ETqgmb4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol": {
				"IWormhole": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newContract",
									"type": "address"
								}
							],
							"name": "ContractUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "index",
									"type": "uint32"
								}
							],
							"name": "GuardianSetAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "LogMessagePublished",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "chainId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "evmChainId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentGuardianSetIndex",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "index",
									"type": "uint32"
								}
							],
							"name": "getGuardianSet",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address[]",
											"name": "keys",
											"type": "address[]"
										},
										{
											"internalType": "uint32",
											"name": "expirationTime",
											"type": "uint32"
										}
									],
									"internalType": "struct IWormhole.GuardianSet",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getGuardianSetExpiry",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								}
							],
							"name": "governanceActionIsConsumed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceChainId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceContract",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isFork",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "impl",
									"type": "address"
								}
							],
							"name": "isInitialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "messageFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "emitter",
									"type": "address"
								}
							],
							"name": "nextSequence",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVM",
									"type": "bytes"
								}
							],
							"name": "parseAndVerifyVM",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "version",
											"type": "uint8"
										},
										{
											"internalType": "uint32",
											"name": "timestamp",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "nonce",
											"type": "uint32"
										},
										{
											"internalType": "uint16",
											"name": "emitterChainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										},
										{
											"internalType": "uint8",
											"name": "consistencyLevel",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "payload",
											"type": "bytes"
										},
										{
											"internalType": "uint32",
											"name": "guardianSetIndex",
											"type": "uint32"
										},
										{
											"components": [
												{
													"internalType": "bytes32",
													"name": "r",
													"type": "bytes32"
												},
												{
													"internalType": "bytes32",
													"name": "s",
													"type": "bytes32"
												},
												{
													"internalType": "uint8",
													"name": "v",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "guardianIndex",
													"type": "uint8"
												}
											],
											"internalType": "struct IWormhole.Signature[]",
											"name": "signatures",
											"type": "tuple[]"
										},
										{
											"internalType": "bytes32",
											"name": "hash",
											"type": "bytes32"
										}
									],
									"internalType": "struct IWormhole.VM",
									"name": "vm",
									"type": "tuple"
								},
								{
									"internalType": "bool",
									"name": "valid",
									"type": "bool"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedUpgrade",
									"type": "bytes"
								}
							],
							"name": "parseContractUpgrade",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint16",
											"name": "chain",
											"type": "uint16"
										},
										{
											"internalType": "address",
											"name": "newContract",
											"type": "address"
										}
									],
									"internalType": "struct IWormhole.ContractUpgrade",
									"name": "cu",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedUpgrade",
									"type": "bytes"
								}
							],
							"name": "parseGuardianSetUpgrade",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint16",
											"name": "chain",
											"type": "uint16"
										},
										{
											"components": [
												{
													"internalType": "address[]",
													"name": "keys",
													"type": "address[]"
												},
												{
													"internalType": "uint32",
													"name": "expirationTime",
													"type": "uint32"
												}
											],
											"internalType": "struct IWormhole.GuardianSet",
											"name": "newGuardianSet",
											"type": "tuple"
										},
										{
											"internalType": "uint32",
											"name": "newGuardianSetIndex",
											"type": "uint32"
										}
									],
									"internalType": "struct IWormhole.GuardianSetUpgrade",
									"name": "gsu",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedRecoverChainId",
									"type": "bytes"
								}
							],
							"name": "parseRecoverChainId",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "evmChainId",
											"type": "uint256"
										},
										{
											"internalType": "uint16",
											"name": "newChainId",
											"type": "uint16"
										}
									],
									"internalType": "struct IWormhole.RecoverChainId",
									"name": "rci",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedSetMessageFee",
									"type": "bytes"
								}
							],
							"name": "parseSetMessageFee",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint16",
											"name": "chain",
											"type": "uint16"
										},
										{
											"internalType": "uint256",
											"name": "messageFee",
											"type": "uint256"
										}
									],
									"internalType": "struct IWormhole.SetMessageFee",
									"name": "smf",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedTransferFees",
									"type": "bytes"
								}
							],
							"name": "parseTransferFees",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint16",
											"name": "chain",
											"type": "uint16"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "recipient",
											"type": "bytes32"
										}
									],
									"internalType": "struct IWormhole.TransferFees",
									"name": "tf",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVM",
									"type": "bytes"
								}
							],
							"name": "parseVM",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "version",
											"type": "uint8"
										},
										{
											"internalType": "uint32",
											"name": "timestamp",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "nonce",
											"type": "uint32"
										},
										{
											"internalType": "uint16",
											"name": "emitterChainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										},
										{
											"internalType": "uint8",
											"name": "consistencyLevel",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "payload",
											"type": "bytes"
										},
										{
											"internalType": "uint32",
											"name": "guardianSetIndex",
											"type": "uint32"
										},
										{
											"components": [
												{
													"internalType": "bytes32",
													"name": "r",
													"type": "bytes32"
												},
												{
													"internalType": "bytes32",
													"name": "s",
													"type": "bytes32"
												},
												{
													"internalType": "uint8",
													"name": "v",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "guardianIndex",
													"type": "uint8"
												}
											],
											"internalType": "struct IWormhole.Signature[]",
											"name": "signatures",
											"type": "tuple[]"
										},
										{
											"internalType": "bytes32",
											"name": "hash",
											"type": "bytes32"
										}
									],
									"internalType": "struct IWormhole.VM",
									"name": "vm",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "publishMessage",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numGuardians",
									"type": "uint256"
								}
							],
							"name": "quorum",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "numSignaturesRequiredForQuorum",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_vm",
									"type": "bytes"
								}
							],
							"name": "submitContractUpgrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_vm",
									"type": "bytes"
								}
							],
							"name": "submitNewGuardianSet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_vm",
									"type": "bytes"
								}
							],
							"name": "submitRecoverChainId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_vm",
									"type": "bytes"
								}
							],
							"name": "submitSetMessageFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_vm",
									"type": "bytes"
								}
							],
							"name": "submitTransferFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								},
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "guardianIndex",
											"type": "uint8"
										}
									],
									"internalType": "struct IWormhole.Signature[]",
									"name": "signatures",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "address[]",
											"name": "keys",
											"type": "address[]"
										},
										{
											"internalType": "uint32",
											"name": "expirationTime",
											"type": "uint32"
										}
									],
									"internalType": "struct IWormhole.GuardianSet",
									"name": "guardianSet",
									"type": "tuple"
								}
							],
							"name": "verifySignatures",
							"outputs": [
								{
									"internalType": "bool",
									"name": "valid",
									"type": "bool"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "version",
											"type": "uint8"
										},
										{
											"internalType": "uint32",
											"name": "timestamp",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "nonce",
											"type": "uint32"
										},
										{
											"internalType": "uint16",
											"name": "emitterChainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										},
										{
											"internalType": "uint8",
											"name": "consistencyLevel",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "payload",
											"type": "bytes"
										},
										{
											"internalType": "uint32",
											"name": "guardianSetIndex",
											"type": "uint32"
										},
										{
											"components": [
												{
													"internalType": "bytes32",
													"name": "r",
													"type": "bytes32"
												},
												{
													"internalType": "bytes32",
													"name": "s",
													"type": "bytes32"
												},
												{
													"internalType": "uint8",
													"name": "v",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "guardianIndex",
													"type": "uint8"
												}
											],
											"internalType": "struct IWormhole.Signature[]",
											"name": "signatures",
											"type": "tuple[]"
										},
										{
											"internalType": "bytes32",
											"name": "hash",
											"type": "bytes32"
										}
									],
									"internalType": "struct IWormhole.VM",
									"name": "vm",
									"type": "tuple"
								}
							],
							"name": "verifyVM",
							"outputs": [
								{
									"internalType": "bool",
									"name": "valid",
									"type": "bool"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"chainId()": "9a8a0592",
							"evmChainId()": "64d42b17",
							"getCurrentGuardianSetIndex()": "1cfe7951",
							"getGuardianSet(uint32)": "f951975a",
							"getGuardianSetExpiry()": "eb8d3f12",
							"governanceActionIsConsumed(bytes32)": "2c3c02a4",
							"governanceChainId()": "fbe3c2cd",
							"governanceContract()": "b172b222",
							"initialize()": "8129fc1c",
							"isFork()": "e039f224",
							"isInitialized(address)": "d60b347f",
							"messageFee()": "1a90a219",
							"nextSequence(address)": "4cf842b5",
							"parseAndVerifyVM(bytes)": "c0fd8bde",
							"parseContractUpgrade(bytes)": "4fdc60fa",
							"parseGuardianSetUpgrade(bytes)": "04ca84cf",
							"parseRecoverChainId(bytes)": "cb4cfea8",
							"parseSetMessageFee(bytes)": "515f3247",
							"parseTransferFees(bytes)": "0319e59c",
							"parseVM(bytes)": "a9e11893",
							"publishMessage(uint32,bytes,uint8)": "b19a437e",
							"quorum(uint256)": "f8ce560a",
							"submitContractUpgrade(bytes)": "5cb8cae2",
							"submitNewGuardianSet(bytes)": "6606b4e0",
							"submitRecoverChainId(bytes)": "178149e7",
							"submitSetMessageFee(bytes)": "f42bc641",
							"submitTransferFees(bytes)": "93df337e",
							"verifySignatures(bytes32,(bytes32,bytes32,uint8,uint8)[],(address[],uint32))": "a0cce1b3",
							"verifyVM((uint8,uint32,uint32,uint16,bytes32,uint64,uint8,bytes,uint32,(bytes32,bytes32,uint8,uint8)[],bytes32))": "875be02a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"GuardianSetAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"LogMessagePublished\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"evmChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentGuardianSetIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"getGuardianSet\",\"outputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"keys\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"expirationTime\",\"type\":\"uint32\"}],\"internalType\":\"struct IWormhole.GuardianSet\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGuardianSetExpiry\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"governanceActionIsConsumed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFork\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"nextSequence\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"parseAndVerifyVM\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"emitterChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"guardianSetIndex\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"guardianIndex\",\"type\":\"uint8\"}],\"internalType\":\"struct IWormhole.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IWormhole.VM\",\"name\":\"vm\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedUpgrade\",\"type\":\"bytes\"}],\"name\":\"parseContractUpgrade\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"internalType\":\"struct IWormhole.ContractUpgrade\",\"name\":\"cu\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedUpgrade\",\"type\":\"bytes\"}],\"name\":\"parseGuardianSetUpgrade\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chain\",\"type\":\"uint16\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"keys\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"expirationTime\",\"type\":\"uint32\"}],\"internalType\":\"struct IWormhole.GuardianSet\",\"name\":\"newGuardianSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"newGuardianSetIndex\",\"type\":\"uint32\"}],\"internalType\":\"struct IWormhole.GuardianSetUpgrade\",\"name\":\"gsu\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedRecoverChainId\",\"type\":\"bytes\"}],\"name\":\"parseRecoverChainId\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"evmChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"newChainId\",\"type\":\"uint16\"}],\"internalType\":\"struct IWormhole.RecoverChainId\",\"name\":\"rci\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedSetMessageFee\",\"type\":\"bytes\"}],\"name\":\"parseSetMessageFee\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"messageFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IWormhole.SetMessageFee\",\"name\":\"smf\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedTransferFees\",\"type\":\"bytes\"}],\"name\":\"parseTransferFees\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"}],\"internalType\":\"struct IWormhole.TransferFees\",\"name\":\"tf\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"parseVM\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"emitterChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"guardianSetIndex\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"guardianIndex\",\"type\":\"uint8\"}],\"internalType\":\"struct IWormhole.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IWormhole.VM\",\"name\":\"vm\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"publishMessage\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numGuardians\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"numSignaturesRequiredForQuorum\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vm\",\"type\":\"bytes\"}],\"name\":\"submitContractUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vm\",\"type\":\"bytes\"}],\"name\":\"submitNewGuardianSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vm\",\"type\":\"bytes\"}],\"name\":\"submitRecoverChainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vm\",\"type\":\"bytes\"}],\"name\":\"submitSetMessageFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vm\",\"type\":\"bytes\"}],\"name\":\"submitTransferFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"guardianIndex\",\"type\":\"uint8\"}],\"internalType\":\"struct IWormhole.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"keys\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"expirationTime\",\"type\":\"uint32\"}],\"internalType\":\"struct IWormhole.GuardianSet\",\"name\":\"guardianSet\",\"type\":\"tuple\"}],\"name\":\"verifySignatures\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"emitterChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"guardianSetIndex\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"guardianIndex\",\"type\":\"uint8\"}],\"internalType\":\"struct IWormhole.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IWormhole.VM\",\"name\":\"vm\",\"type\":\"tuple\"}],\"name\":\"verifyVM\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol\":\"IWormhole\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol": {
				"IWormholeReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "bytes[]",
									"name": "additionalMessages",
									"type": "bytes[]"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								},
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "receiveWormholeMessages",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": {
								"params": {
									"additionalMessages": "- Additional messages which were requested to be included in this delivery.      Note: There are no contract-level guarantees that the messages in this array are what was requested      so **you should verify any sensitive information given here!**      For example, if a 'VaaKey' was specified on the source chain, then MAKE SURE the corresponding message here      has valid signatures (by calling `parseAndVerifyVM(message)` on the Wormhole core contract)      This field can be used to perform and relay TokenBridge or CCTP transfers, and there are example      usages of this at         https://github.com/wormhole-foundation/hello-token         https://github.com/wormhole-foundation/hello-cctp",
									"deliveryHash": "- the VAA hash of the deliveryVAA.",
									"payload": "- an arbitrary message which was included in the delivery by the     requester. This message's signature will already have been verified (as long as msg.sender is the Wormhole Relayer contract)",
									"sourceAddress": "- the (wormhole format) address on the sending chain which requested     this delivery.",
									"sourceChain": "- the wormhole chain ID where this delivery was requested."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": "529dca32"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"additionalMessages\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"receiveWormholeMessages\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)\":{\"params\":{\"additionalMessages\":\"- Additional messages which were requested to be included in this delivery.      Note: There are no contract-level guarantees that the messages in this array are what was requested      so **you should verify any sensitive information given here!**      For example, if a 'VaaKey' was specified on the source chain, then MAKE SURE the corresponding message here      has valid signatures (by calling `parseAndVerifyVM(message)` on the Wormhole core contract)      This field can be used to perform and relay TokenBridge or CCTP transfers, and there are example      usages of this at         https://github.com/wormhole-foundation/hello-token         https://github.com/wormhole-foundation/hello-cctp\",\"deliveryHash\":\"- the VAA hash of the deliveryVAA.\",\"payload\":\"- an arbitrary message which was included in the delivery by the     requester. This message's signature will already have been verified (as long as msg.sender is the Wormhole Relayer contract)\",\"sourceAddress\":\"- the (wormhole format) address on the sending chain which requested     this delivery.\",\"sourceChain\":\"- the wormhole chain ID where this delivery was requested.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)\":{\"notice\":\"When a `send` is performed with this contract as the target, this function will be     invoked by the WormholeRelayer contract NOTE: This function should be restricted such that only the Wormhole Relayer contract can call it. We also recommend that this function checks that `sourceChain` and `sourceAddress` are indeed who       you expect to have requested the calling of `send` on the source chain The invocation of this function corresponding to the `send` request will have msg.value equal   to the receiverValue specified in the send request. If the invocation of this function reverts or exceeds the gas limit   specified by the send requester, this delivery will result in a `ReceiverFailure`.\"}},\"notice\":\"Interface for a contract which can receive Wormhole messages.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol\":\"IWormholeReceiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": {
								"notice": "When a `send` is performed with this contract as the target, this function will be     invoked by the WormholeRelayer contract NOTE: This function should be restricted such that only the Wormhole Relayer contract can call it. We also recommend that this function checks that `sourceChain` and `sourceAddress` are indeed who       you expect to have requested the calling of `send` on the source chain The invocation of this function corresponding to the `send` request will have msg.value equal   to the receiverValue specified in the send request. If the invocation of this function reverts or exceeds the gas limit   specified by the send requester, this delivery will result in a `ReceiverFailure`."
							}
						},
						"notice": "Interface for a contract which can receive Wormhole messages.",
						"version": 1
					}
				}
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol": {
				"IWormholeRelayer": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "deliveryVaaHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "enum IWormholeRelayerDelivery.DeliveryStatus",
									"name": "status",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "gasUsed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum IWormholeRelayerDelivery.RefundStatus",
									"name": "refundStatus",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "additionalStatusInfo",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "overridesInfo",
									"type": "bytes"
								}
							],
							"name": "Delivery",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "deliveryQuote",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								}
							],
							"name": "SendEvent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "encodedVMs",
									"type": "bytes[]"
								},
								{
									"internalType": "bytes",
									"name": "encodedDeliveryVAA",
									"type": "bytes"
								},
								{
									"internalType": "address payable",
									"name": "relayerRefundAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "deliveryOverrides",
									"type": "bytes"
								}
							],
							"name": "deliver",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryAttempted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "attempted",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryFailureBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliverySuccessBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDefaultDeliveryProvider",
							"outputs": [
								{
									"internalType": "address",
									"name": "deliveryProvider",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "chainId",
									"type": "uint16"
								}
							],
							"name": "getRegisteredWormholeRelayerContract",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "quoteDeliveryPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativePriceQuote",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionInfo",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "quoteEVMDeliveryPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativePriceQuote",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "targetChainRefundPerGasUnused",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								}
							],
							"name": "quoteEVMDeliveryPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativePriceQuote",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "targetChainRefundPerGasUnused",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "currentChainAmount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "quoteNativeForChain",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "targetChainAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey",
									"name": "deliveryVaaKey",
									"type": "tuple"
								},
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "newReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "newEncodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "newDeliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "resend",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey",
									"name": "deliveryVaaKey",
									"type": "tuple"
								},
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "newReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newGasLimit",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "newDeliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "resendToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "targetAddress",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "refundAddress",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "send",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "targetAddress",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "refundAddress",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "keyType",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "encodedKey",
											"type": "bytes"
										}
									],
									"internalType": "struct MessageKey[]",
									"name": "messageKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "send",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								}
							],
							"name": "sendPayloadToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								}
							],
							"name": "sendPayloadToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "sendToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "keyType",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "encodedKey",
											"type": "bytes"
										}
									],
									"internalType": "struct MessageKey[]",
									"name": "messageKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "sendToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								}
							],
							"name": "sendVaasToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								}
							],
							"name": "sendVaasToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Delivery(address,uint16,uint64,bytes32,uint8,uint256,uint8,bytes,bytes)": {
								"custom:member": "recipientContract - The target contract addresssourceChain - The chain which this delivery was requested from (in wormhole     ChainID format)sequence - The wormhole sequence number of the delivery VAA on the source chain     corresponding to this delivery requestdeliveryVaaHash - The hash of the delivery VAA corresponding to this delivery     requestgasUsed - The amount of gas that was used to call your target contractstatus:   - RECEIVER_FAILURE, if the target contract reverts   - SUCCESS, if the target contract doesn't revertadditionalStatusInfo:   - If status is SUCCESS, then this is empty.   - If status is RECEIVER_FAILURE, this is `RETURNDATA_TRUNCATION_THRESHOLD` bytes of the       return data (i.e. potentially truncated revert reason information).refundStatus - Result of the refund. REFUND_SUCCESS or REFUND_FAIL are for     refunds where targetChain=refundChain; the others are for targetChain!=refundChain,     where a cross chain refund is necessary, or if the default code path is used where no refund is requested (NO_REFUND_REQUESTED)overridesInfo:   - If not an override: empty bytes array   - Otherwise: An encoded `DeliveryOverride`"
							}
						},
						"kind": "dev",
						"methods": {
							"deliver(bytes[],bytes,address,bytes)": {
								"params": {
									"deliveryOverrides": "- Optional overrides field which must be either an empty bytes array or     an encoded DeliveryOverride struct",
									"encodedDeliveryVAA": "- Signed wormhole message from the source chain's WormholeRelayer     contract with payload being the encoded delivery instruction container",
									"encodedVMs": "- An array of signed wormhole messages (all from the same source chain     transaction)",
									"relayerRefundAddress": "- The address to which any refunds to the delivery provider     should be sent"
								}
							},
							"getDefaultDeliveryProvider()": {
								"returns": {
									"deliveryProvider": "The address of (the default delivery provider)'s contract on this source   chain. This must be a contract that implements IDeliveryProvider."
								}
							},
							"quoteDeliveryPrice(uint16,uint256,bytes,address)": {
								"params": {
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"encodedExecutionParameters": "encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"encodedExecutionInfo": "encoded information on how the delivery will be executed        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` and `targetChainRefundPerGasUnused`             (which is the amount of target chain currency that will be refunded per unit of gas unused,              if a refundAddress is specified)",
									"nativePriceQuote": "Price, in units of current chain currency, that the delivery provider charges to perform the relay"
								}
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"nativePriceQuote": "Price, in units of current chain currency, that the delivery provider charges to perform the relay",
									"targetChainRefundPerGasUnused": "amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified.         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain."
								}
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)": {
								"params": {
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"nativePriceQuote": "Price, in units of current chain currency, that the delivery provider charges to perform the relay",
									"targetChainRefundPerGasUnused": "amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain."
								}
							},
							"quoteNativeForChain(uint16,uint256,address)": {
								"params": {
									"currentChainAmount": "The value that `paymentForExtraReceiverValue` will be set to",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"targetChainAmount": "The amount such that if `targetAddress` will be called with `msg.value` equal to         receiverValue + targetChainAmount"
								}
							},
							"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)": {
								"params": {
									"deliveryVaaKey": "VaaKey identifying the wormhole message containing the        previously published delivery instructions",
									"newDeliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"newEncodedExecutionParameters": "new encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"newReceiverValue": "new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "The target chain that the original delivery targeted. Must match targetChain from original delivery instructions"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing redelivery instructions"
								}
							},
							"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)": {
								"params": {
									"deliveryVaaKey": "VaaKey identifying the wormhole message containing the        previously published delivery instructions",
									"newDeliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"newGasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider, to the refund chain and address specified in the original request",
									"newReceiverValue": "new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "The target chain that the original delivery targeted. Must match targetChain from original delivery instructions"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing redelivery instructions"
								}
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"encodedExecutionParameters": "encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"encodedExecutionParameters": "encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"messageKeys": "Additional messagess to pass in as parameter in call to `targetAddress`",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"messageKeys": "Additional messagess to pass in as parameter in call to `targetAddress`",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deliver(bytes[],bytes,address,bytes)": "a60eb4c8",
							"deliveryAttempted(bytes32)": "d0625a19",
							"deliveryFailureBlock(bytes32)": "5a3b92e8",
							"deliverySuccessBlock(bytes32)": "40984f08",
							"getDefaultDeliveryProvider()": "24320c9f",
							"getRegisteredWormholeRelayerContract(uint16)": "3e8267e7",
							"quoteDeliveryPrice(uint16,uint256,bytes,address)": "a79629d8",
							"quoteEVMDeliveryPrice(uint16,uint256,uint256)": "c23ee3c3",
							"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)": "80ebabd0",
							"quoteNativeForChain(uint16,uint256,address)": "2385904a",
							"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)": "b686d089",
							"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)": "8b0301b1",
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)": "c81fb7fe",
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)": "cee4bda0",
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)": "8fecdd02",
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)": "4b5ca6f4",
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)": "3a2c767d",
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)": "c055120e",
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])": "329a2be7",
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)": "32b2fc0e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"deliveryVaaHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"enum IWormholeRelayerDelivery.DeliveryStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum IWormholeRelayerDelivery.RefundStatus\",\"name\":\"refundStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"additionalStatusInfo\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"overridesInfo\",\"type\":\"bytes\"}],\"name\":\"Delivery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deliveryQuote\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"}],\"name\":\"SendEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"encodedVMs\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"encodedDeliveryVAA\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"relayerRefundAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"deliveryOverrides\",\"type\":\"bytes\"}],\"name\":\"deliver\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryAttempted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"attempted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryFailureBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliverySuccessBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultDeliveryProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deliveryProvider\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"getRegisteredWormholeRelayerContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"quoteDeliveryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativePriceQuote\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionInfo\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"quoteEVMDeliveryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativePriceQuote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetChainRefundPerGasUnused\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"quoteEVMDeliveryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativePriceQuote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetChainRefundPerGasUnused\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"currentChainAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"quoteNativeForChain\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"targetChainAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey\",\"name\":\"deliveryVaaKey\",\"type\":\"tuple\"},{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"newReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"newEncodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"newDeliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"resend\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey\",\"name\":\"deliveryVaaKey\",\"type\":\"tuple\"},{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"newReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newDeliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"resendToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"targetAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"refundAddress\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"send\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"targetAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"refundAddress\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"keyType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"encodedKey\",\"type\":\"bytes\"}],\"internalType\":\"struct MessageKey[]\",\"name\":\"messageKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"send\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"}],\"name\":\"sendPayloadToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"sendPayloadToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"sendToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"keyType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"encodedKey\",\"type\":\"bytes\"}],\"internalType\":\"struct MessageKey[]\",\"name\":\"messageKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"sendToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"}],\"name\":\"sendVaasToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"}],\"name\":\"sendVaasToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Delivery(address,uint16,uint64,bytes32,uint8,uint256,uint8,bytes,bytes)\":{\"custom:member\":\"recipientContract - The target contract addresssourceChain - The chain which this delivery was requested from (in wormhole     ChainID format)sequence - The wormhole sequence number of the delivery VAA on the source chain     corresponding to this delivery requestdeliveryVaaHash - The hash of the delivery VAA corresponding to this delivery     requestgasUsed - The amount of gas that was used to call your target contractstatus:   - RECEIVER_FAILURE, if the target contract reverts   - SUCCESS, if the target contract doesn't revertadditionalStatusInfo:   - If status is SUCCESS, then this is empty.   - If status is RECEIVER_FAILURE, this is `RETURNDATA_TRUNCATION_THRESHOLD` bytes of the       return data (i.e. potentially truncated revert reason information).refundStatus - Result of the refund. REFUND_SUCCESS or REFUND_FAIL are for     refunds where targetChain=refundChain; the others are for targetChain!=refundChain,     where a cross chain refund is necessary, or if the default code path is used where no refund is requested (NO_REFUND_REQUESTED)overridesInfo:   - If not an override: empty bytes array   - Otherwise: An encoded `DeliveryOverride`\"}},\"kind\":\"dev\",\"methods\":{\"deliver(bytes[],bytes,address,bytes)\":{\"params\":{\"deliveryOverrides\":\"- Optional overrides field which must be either an empty bytes array or     an encoded DeliveryOverride struct\",\"encodedDeliveryVAA\":\"- Signed wormhole message from the source chain's WormholeRelayer     contract with payload being the encoded delivery instruction container\",\"encodedVMs\":\"- An array of signed wormhole messages (all from the same source chain     transaction)\",\"relayerRefundAddress\":\"- The address to which any refunds to the delivery provider     should be sent\"}},\"getDefaultDeliveryProvider()\":{\"returns\":{\"deliveryProvider\":\"The address of (the default delivery provider)'s contract on this source   chain. This must be a contract that implements IDeliveryProvider.\"}},\"quoteDeliveryPrice(uint16,uint256,bytes,address)\":{\"params\":{\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"encodedExecutionParameters\":\"encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"encodedExecutionInfo\":\"encoded information on how the delivery will be executed        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` and `targetChainRefundPerGasUnused`             (which is the amount of target chain currency that will be refunded per unit of gas unused,              if a refundAddress is specified)\",\"nativePriceQuote\":\"Price, in units of current chain currency, that the delivery provider charges to perform the relay\"}},\"quoteEVMDeliveryPrice(uint16,uint256,uint256)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"nativePriceQuote\":\"Price, in units of current chain currency, that the delivery provider charges to perform the relay\",\"targetChainRefundPerGasUnused\":\"amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified.         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain.\"}},\"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)\":{\"params\":{\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"nativePriceQuote\":\"Price, in units of current chain currency, that the delivery provider charges to perform the relay\",\"targetChainRefundPerGasUnused\":\"amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain.\"}},\"quoteNativeForChain(uint16,uint256,address)\":{\"params\":{\"currentChainAmount\":\"The value that `paymentForExtraReceiverValue` will be set to\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"targetChainAmount\":\"The amount such that if `targetAddress` will be called with `msg.value` equal to         receiverValue + targetChainAmount\"}},\"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)\":{\"params\":{\"deliveryVaaKey\":\"VaaKey identifying the wormhole message containing the        previously published delivery instructions\",\"newDeliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"newEncodedExecutionParameters\":\"new encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"newReceiverValue\":\"new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing redelivery instructions\"}},\"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)\":{\"params\":{\"deliveryVaaKey\":\"VaaKey identifying the wormhole message containing the        previously published delivery instructions\",\"newDeliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"newGasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider, to the refund chain and address specified in the original request\",\"newReceiverValue\":\"new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing redelivery instructions\"}},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"encodedExecutionParameters\":\"encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"encodedExecutionParameters\":\"encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"messageKeys\":\"Additional messagess to pass in as parameter in call to `targetAddress`\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"messageKeys\":\"Additional messagess to pass in as parameter in call to `targetAddress`\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deliver(bytes[],bytes,address,bytes)\":{\"notice\":\"The delivery provider calls `deliver` to relay messages as described by one delivery instruction The delivery provider must pass in the specified (by VaaKeys[]) signed wormhole messages (VAAs) from the source chain as well as the signed wormhole message with the delivery instructions (the delivery VAA) The messages will be relayed to the target address (with the specified gas limit and receiver value) iff the following checks are met: - the delivery VAA has a valid signature - the delivery VAA's emitter is one of these WormholeRelayer contracts - the delivery provider passed in at least enough of this chain's currency as msg.value (enough meaning the maximum possible refund) - the instruction's target chain is this chain - the relayed signed VAAs match the descriptions in container.messages (the VAA hashes match, or the emitter address, sequence number pair matches, depending on the description given)\"},\"deliveryAttempted(bytes32)\":{\"notice\":\"Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted\"},\"deliveryFailureBlock(bytes32)\":{\"notice\":\"block number of the latest attempt to execute a delivery that failed\"},\"deliverySuccessBlock(bytes32)\":{\"notice\":\"block number at which a delivery was successfully executed\"},\"getDefaultDeliveryProvider()\":{\"notice\":\"Returns the address of the current default delivery provider\"},\"quoteDeliveryPrice(uint16,uint256,bytes,address)\":{\"notice\":\"Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\"},\"quoteEVMDeliveryPrice(uint16,uint256,uint256)\":{\"notice\":\"Returns the price to request a relay to chain `targetChain`, using the default delivery provider\"},\"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)\":{\"notice\":\"Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\"},\"quoteNativeForChain(uint16,uint256,address)\":{\"notice\":\"Returns the (extra) amount of target chain currency that `targetAddress` will be called with, if the `paymentForExtraReceiverValue` field is set to `currentChainAmount`\"},\"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)\":{\"notice\":\"Requests a previously published delivery instruction to be redelivered This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, newReceiverValue, newEncodedExecutionParameters, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - (For EVM_V1) newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - (For EVM_V1) newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`\"},\"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)\":{\"notice\":\"Requests a previously published delivery instruction to be redelivered (e.g. with a different delivery provider) This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, newReceiverValue, newGasLimit, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction\"},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue\"},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\"},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendPayloadToEvm` function with `refundChain` and `refundAddress` as parameters\"},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\"},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue\"},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and external messages specified by `messageKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\"},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendVaasToEvm` function with `refundChain` and `refundAddress` as parameters\"},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol\":\"IWormholeRelayer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deliver(bytes[],bytes,address,bytes)": {
								"notice": "The delivery provider calls `deliver` to relay messages as described by one delivery instruction The delivery provider must pass in the specified (by VaaKeys[]) signed wormhole messages (VAAs) from the source chain as well as the signed wormhole message with the delivery instructions (the delivery VAA) The messages will be relayed to the target address (with the specified gas limit and receiver value) iff the following checks are met: - the delivery VAA has a valid signature - the delivery VAA's emitter is one of these WormholeRelayer contracts - the delivery provider passed in at least enough of this chain's currency as msg.value (enough meaning the maximum possible refund) - the instruction's target chain is this chain - the relayed signed VAAs match the descriptions in container.messages (the VAA hashes match, or the emitter address, sequence number pair matches, depending on the description given)"
							},
							"deliveryAttempted(bytes32)": {
								"notice": "Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted"
							},
							"deliveryFailureBlock(bytes32)": {
								"notice": "block number of the latest attempt to execute a delivery that failed"
							},
							"deliverySuccessBlock(bytes32)": {
								"notice": "block number at which a delivery was successfully executed"
							},
							"getDefaultDeliveryProvider()": {
								"notice": "Returns the address of the current default delivery provider"
							},
							"quoteDeliveryPrice(uint16,uint256,bytes,address)": {
								"notice": "Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`"
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256)": {
								"notice": "Returns the price to request a relay to chain `targetChain`, using the default delivery provider"
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)": {
								"notice": "Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`"
							},
							"quoteNativeForChain(uint16,uint256,address)": {
								"notice": "Returns the (extra) amount of target chain currency that `targetAddress` will be called with, if the `paymentForExtraReceiverValue` field is set to `currentChainAmount`"
							},
							"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)": {
								"notice": "Requests a previously published delivery instruction to be redelivered This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, newReceiverValue, newEncodedExecutionParameters, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - (For EVM_V1) newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - (For EVM_V1) newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`"
							},
							"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)": {
								"notice": "Requests a previously published delivery instruction to be redelivered (e.g. with a different delivery provider) This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, newReceiverValue, newGasLimit, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction"
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue"
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!"
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendPayloadToEvm` function with `refundChain` and `refundAddress` as parameters"
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`"
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue"
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and external messages specified by `messageKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!"
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendVaasToEvm` function with `refundChain` and `refundAddress` as parameters"
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`"
							}
						},
						"version": 1
					}
				},
				"IWormholeRelayerBase": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "deliveryQuote",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								}
							],
							"name": "SendEvent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryAttempted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "attempted",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryFailureBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliverySuccessBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "chainId",
									"type": "uint16"
								}
							],
							"name": "getRegisteredWormholeRelayerContract",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deliveryAttempted(bytes32)": "d0625a19",
							"deliveryFailureBlock(bytes32)": "5a3b92e8",
							"deliverySuccessBlock(bytes32)": "40984f08",
							"getRegisteredWormholeRelayerContract(uint16)": "3e8267e7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deliveryQuote\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"}],\"name\":\"SendEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryAttempted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"attempted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryFailureBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliverySuccessBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"getRegisteredWormholeRelayerContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deliveryAttempted(bytes32)\":{\"notice\":\"Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted\"},\"deliveryFailureBlock(bytes32)\":{\"notice\":\"block number of the latest attempt to execute a delivery that failed\"},\"deliverySuccessBlock(bytes32)\":{\"notice\":\"block number at which a delivery was successfully executed\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol\":\"IWormholeRelayerBase\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deliveryAttempted(bytes32)": {
								"notice": "Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted"
							},
							"deliveryFailureBlock(bytes32)": {
								"notice": "block number of the latest attempt to execute a delivery that failed"
							},
							"deliverySuccessBlock(bytes32)": {
								"notice": "block number at which a delivery was successfully executed"
							}
						},
						"version": 1
					}
				},
				"IWormholeRelayerDelivery": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "deliveryVaaHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "enum IWormholeRelayerDelivery.DeliveryStatus",
									"name": "status",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "gasUsed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum IWormholeRelayerDelivery.RefundStatus",
									"name": "refundStatus",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "additionalStatusInfo",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "overridesInfo",
									"type": "bytes"
								}
							],
							"name": "Delivery",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "deliveryQuote",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								}
							],
							"name": "SendEvent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "encodedVMs",
									"type": "bytes[]"
								},
								{
									"internalType": "bytes",
									"name": "encodedDeliveryVAA",
									"type": "bytes"
								},
								{
									"internalType": "address payable",
									"name": "relayerRefundAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "deliveryOverrides",
									"type": "bytes"
								}
							],
							"name": "deliver",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryAttempted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "attempted",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryFailureBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliverySuccessBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "chainId",
									"type": "uint16"
								}
							],
							"name": "getRegisteredWormholeRelayerContract",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Delivery(address,uint16,uint64,bytes32,uint8,uint256,uint8,bytes,bytes)": {
								"custom:member": "recipientContract - The target contract addresssourceChain - The chain which this delivery was requested from (in wormhole     ChainID format)sequence - The wormhole sequence number of the delivery VAA on the source chain     corresponding to this delivery requestdeliveryVaaHash - The hash of the delivery VAA corresponding to this delivery     requestgasUsed - The amount of gas that was used to call your target contractstatus:   - RECEIVER_FAILURE, if the target contract reverts   - SUCCESS, if the target contract doesn't revertadditionalStatusInfo:   - If status is SUCCESS, then this is empty.   - If status is RECEIVER_FAILURE, this is `RETURNDATA_TRUNCATION_THRESHOLD` bytes of the       return data (i.e. potentially truncated revert reason information).refundStatus - Result of the refund. REFUND_SUCCESS or REFUND_FAIL are for     refunds where targetChain=refundChain; the others are for targetChain!=refundChain,     where a cross chain refund is necessary, or if the default code path is used where no refund is requested (NO_REFUND_REQUESTED)overridesInfo:   - If not an override: empty bytes array   - Otherwise: An encoded `DeliveryOverride`"
							}
						},
						"kind": "dev",
						"methods": {
							"deliver(bytes[],bytes,address,bytes)": {
								"params": {
									"deliveryOverrides": "- Optional overrides field which must be either an empty bytes array or     an encoded DeliveryOverride struct",
									"encodedDeliveryVAA": "- Signed wormhole message from the source chain's WormholeRelayer     contract with payload being the encoded delivery instruction container",
									"encodedVMs": "- An array of signed wormhole messages (all from the same source chain     transaction)",
									"relayerRefundAddress": "- The address to which any refunds to the delivery provider     should be sent"
								}
							}
						},
						"title": "IWormholeRelayerDelivery",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deliver(bytes[],bytes,address,bytes)": "a60eb4c8",
							"deliveryAttempted(bytes32)": "d0625a19",
							"deliveryFailureBlock(bytes32)": "5a3b92e8",
							"deliverySuccessBlock(bytes32)": "40984f08",
							"getRegisteredWormholeRelayerContract(uint16)": "3e8267e7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"deliveryVaaHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"enum IWormholeRelayerDelivery.DeliveryStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum IWormholeRelayerDelivery.RefundStatus\",\"name\":\"refundStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"additionalStatusInfo\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"overridesInfo\",\"type\":\"bytes\"}],\"name\":\"Delivery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deliveryQuote\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"}],\"name\":\"SendEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"encodedVMs\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"encodedDeliveryVAA\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"relayerRefundAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"deliveryOverrides\",\"type\":\"bytes\"}],\"name\":\"deliver\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryAttempted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"attempted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryFailureBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliverySuccessBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"getRegisteredWormholeRelayerContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Delivery(address,uint16,uint64,bytes32,uint8,uint256,uint8,bytes,bytes)\":{\"custom:member\":\"recipientContract - The target contract addresssourceChain - The chain which this delivery was requested from (in wormhole     ChainID format)sequence - The wormhole sequence number of the delivery VAA on the source chain     corresponding to this delivery requestdeliveryVaaHash - The hash of the delivery VAA corresponding to this delivery     requestgasUsed - The amount of gas that was used to call your target contractstatus:   - RECEIVER_FAILURE, if the target contract reverts   - SUCCESS, if the target contract doesn't revertadditionalStatusInfo:   - If status is SUCCESS, then this is empty.   - If status is RECEIVER_FAILURE, this is `RETURNDATA_TRUNCATION_THRESHOLD` bytes of the       return data (i.e. potentially truncated revert reason information).refundStatus - Result of the refund. REFUND_SUCCESS or REFUND_FAIL are for     refunds where targetChain=refundChain; the others are for targetChain!=refundChain,     where a cross chain refund is necessary, or if the default code path is used where no refund is requested (NO_REFUND_REQUESTED)overridesInfo:   - If not an override: empty bytes array   - Otherwise: An encoded `DeliveryOverride`\"}},\"kind\":\"dev\",\"methods\":{\"deliver(bytes[],bytes,address,bytes)\":{\"params\":{\"deliveryOverrides\":\"- Optional overrides field which must be either an empty bytes array or     an encoded DeliveryOverride struct\",\"encodedDeliveryVAA\":\"- Signed wormhole message from the source chain's WormholeRelayer     contract with payload being the encoded delivery instruction container\",\"encodedVMs\":\"- An array of signed wormhole messages (all from the same source chain     transaction)\",\"relayerRefundAddress\":\"- The address to which any refunds to the delivery provider     should be sent\"}}},\"title\":\"IWormholeRelayerDelivery\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deliver(bytes[],bytes,address,bytes)\":{\"notice\":\"The delivery provider calls `deliver` to relay messages as described by one delivery instruction The delivery provider must pass in the specified (by VaaKeys[]) signed wormhole messages (VAAs) from the source chain as well as the signed wormhole message with the delivery instructions (the delivery VAA) The messages will be relayed to the target address (with the specified gas limit and receiver value) iff the following checks are met: - the delivery VAA has a valid signature - the delivery VAA's emitter is one of these WormholeRelayer contracts - the delivery provider passed in at least enough of this chain's currency as msg.value (enough meaning the maximum possible refund) - the instruction's target chain is this chain - the relayed signed VAAs match the descriptions in container.messages (the VAA hashes match, or the emitter address, sequence number pair matches, depending on the description given)\"},\"deliveryAttempted(bytes32)\":{\"notice\":\"Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted\"},\"deliveryFailureBlock(bytes32)\":{\"notice\":\"block number of the latest attempt to execute a delivery that failed\"},\"deliverySuccessBlock(bytes32)\":{\"notice\":\"block number at which a delivery was successfully executed\"}},\"notice\":\"The interface to execute deliveries. Only relevant for Delivery Providers\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol\":\"IWormholeRelayerDelivery\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deliver(bytes[],bytes,address,bytes)": {
								"notice": "The delivery provider calls `deliver` to relay messages as described by one delivery instruction The delivery provider must pass in the specified (by VaaKeys[]) signed wormhole messages (VAAs) from the source chain as well as the signed wormhole message with the delivery instructions (the delivery VAA) The messages will be relayed to the target address (with the specified gas limit and receiver value) iff the following checks are met: - the delivery VAA has a valid signature - the delivery VAA's emitter is one of these WormholeRelayer contracts - the delivery provider passed in at least enough of this chain's currency as msg.value (enough meaning the maximum possible refund) - the instruction's target chain is this chain - the relayed signed VAAs match the descriptions in container.messages (the VAA hashes match, or the emitter address, sequence number pair matches, depending on the description given)"
							},
							"deliveryAttempted(bytes32)": {
								"notice": "Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted"
							},
							"deliveryFailureBlock(bytes32)": {
								"notice": "block number of the latest attempt to execute a delivery that failed"
							},
							"deliverySuccessBlock(bytes32)": {
								"notice": "block number at which a delivery was successfully executed"
							}
						},
						"notice": "The interface to execute deliveries. Only relevant for Delivery Providers",
						"version": 1
					}
				},
				"IWormholeRelayerSend": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "deliveryQuote",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								}
							],
							"name": "SendEvent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryAttempted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "attempted",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryFailureBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliverySuccessBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDefaultDeliveryProvider",
							"outputs": [
								{
									"internalType": "address",
									"name": "deliveryProvider",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "chainId",
									"type": "uint16"
								}
							],
							"name": "getRegisteredWormholeRelayerContract",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "quoteDeliveryPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativePriceQuote",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionInfo",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "quoteEVMDeliveryPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativePriceQuote",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "targetChainRefundPerGasUnused",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								}
							],
							"name": "quoteEVMDeliveryPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativePriceQuote",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "targetChainRefundPerGasUnused",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "currentChainAmount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "quoteNativeForChain",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "targetChainAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey",
									"name": "deliveryVaaKey",
									"type": "tuple"
								},
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "newReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "newEncodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "newDeliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "resend",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey",
									"name": "deliveryVaaKey",
									"type": "tuple"
								},
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "newReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newGasLimit",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "newDeliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "resendToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "targetAddress",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "refundAddress",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "send",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "targetAddress",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "refundAddress",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "keyType",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "encodedKey",
											"type": "bytes"
										}
									],
									"internalType": "struct MessageKey[]",
									"name": "messageKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "send",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								}
							],
							"name": "sendPayloadToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								}
							],
							"name": "sendPayloadToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "sendToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "keyType",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "encodedKey",
											"type": "bytes"
										}
									],
									"internalType": "struct MessageKey[]",
									"name": "messageKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "sendToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								}
							],
							"name": "sendVaasToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								}
							],
							"name": "sendVaasToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getDefaultDeliveryProvider()": {
								"returns": {
									"deliveryProvider": "The address of (the default delivery provider)'s contract on this source   chain. This must be a contract that implements IDeliveryProvider."
								}
							},
							"quoteDeliveryPrice(uint16,uint256,bytes,address)": {
								"params": {
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"encodedExecutionParameters": "encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"encodedExecutionInfo": "encoded information on how the delivery will be executed        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` and `targetChainRefundPerGasUnused`             (which is the amount of target chain currency that will be refunded per unit of gas unused,              if a refundAddress is specified)",
									"nativePriceQuote": "Price, in units of current chain currency, that the delivery provider charges to perform the relay"
								}
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"nativePriceQuote": "Price, in units of current chain currency, that the delivery provider charges to perform the relay",
									"targetChainRefundPerGasUnused": "amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified.         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain."
								}
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)": {
								"params": {
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"nativePriceQuote": "Price, in units of current chain currency, that the delivery provider charges to perform the relay",
									"targetChainRefundPerGasUnused": "amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain."
								}
							},
							"quoteNativeForChain(uint16,uint256,address)": {
								"params": {
									"currentChainAmount": "The value that `paymentForExtraReceiverValue` will be set to",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"targetChainAmount": "The amount such that if `targetAddress` will be called with `msg.value` equal to         receiverValue + targetChainAmount"
								}
							},
							"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)": {
								"params": {
									"deliveryVaaKey": "VaaKey identifying the wormhole message containing the        previously published delivery instructions",
									"newDeliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"newEncodedExecutionParameters": "new encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"newReceiverValue": "new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "The target chain that the original delivery targeted. Must match targetChain from original delivery instructions"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing redelivery instructions"
								}
							},
							"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)": {
								"params": {
									"deliveryVaaKey": "VaaKey identifying the wormhole message containing the        previously published delivery instructions",
									"newDeliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"newGasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider, to the refund chain and address specified in the original request",
									"newReceiverValue": "new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "The target chain that the original delivery targeted. Must match targetChain from original delivery instructions"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing redelivery instructions"
								}
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"encodedExecutionParameters": "encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"encodedExecutionParameters": "encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"messageKeys": "Additional messagess to pass in as parameter in call to `targetAddress`",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"messageKeys": "Additional messagess to pass in as parameter in call to `targetAddress`",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							}
						},
						"title": "IWormholeRelayerSend",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deliveryAttempted(bytes32)": "d0625a19",
							"deliveryFailureBlock(bytes32)": "5a3b92e8",
							"deliverySuccessBlock(bytes32)": "40984f08",
							"getDefaultDeliveryProvider()": "24320c9f",
							"getRegisteredWormholeRelayerContract(uint16)": "3e8267e7",
							"quoteDeliveryPrice(uint16,uint256,bytes,address)": "a79629d8",
							"quoteEVMDeliveryPrice(uint16,uint256,uint256)": "c23ee3c3",
							"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)": "80ebabd0",
							"quoteNativeForChain(uint16,uint256,address)": "2385904a",
							"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)": "b686d089",
							"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)": "8b0301b1",
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)": "c81fb7fe",
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)": "cee4bda0",
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)": "8fecdd02",
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)": "4b5ca6f4",
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)": "3a2c767d",
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)": "c055120e",
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])": "329a2be7",
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)": "32b2fc0e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deliveryQuote\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"}],\"name\":\"SendEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryAttempted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"attempted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryFailureBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliverySuccessBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultDeliveryProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deliveryProvider\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"getRegisteredWormholeRelayerContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"quoteDeliveryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativePriceQuote\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionInfo\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"quoteEVMDeliveryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativePriceQuote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetChainRefundPerGasUnused\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"quoteEVMDeliveryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativePriceQuote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetChainRefundPerGasUnused\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"currentChainAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"quoteNativeForChain\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"targetChainAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey\",\"name\":\"deliveryVaaKey\",\"type\":\"tuple\"},{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"newReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"newEncodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"newDeliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"resend\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey\",\"name\":\"deliveryVaaKey\",\"type\":\"tuple\"},{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"newReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newDeliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"resendToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"targetAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"refundAddress\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"send\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"targetAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"refundAddress\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"keyType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"encodedKey\",\"type\":\"bytes\"}],\"internalType\":\"struct MessageKey[]\",\"name\":\"messageKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"send\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"}],\"name\":\"sendPayloadToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"sendPayloadToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"sendToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"keyType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"encodedKey\",\"type\":\"bytes\"}],\"internalType\":\"struct MessageKey[]\",\"name\":\"messageKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"sendToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"}],\"name\":\"sendVaasToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"}],\"name\":\"sendVaasToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getDefaultDeliveryProvider()\":{\"returns\":{\"deliveryProvider\":\"The address of (the default delivery provider)'s contract on this source   chain. This must be a contract that implements IDeliveryProvider.\"}},\"quoteDeliveryPrice(uint16,uint256,bytes,address)\":{\"params\":{\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"encodedExecutionParameters\":\"encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"encodedExecutionInfo\":\"encoded information on how the delivery will be executed        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` and `targetChainRefundPerGasUnused`             (which is the amount of target chain currency that will be refunded per unit of gas unused,              if a refundAddress is specified)\",\"nativePriceQuote\":\"Price, in units of current chain currency, that the delivery provider charges to perform the relay\"}},\"quoteEVMDeliveryPrice(uint16,uint256,uint256)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"nativePriceQuote\":\"Price, in units of current chain currency, that the delivery provider charges to perform the relay\",\"targetChainRefundPerGasUnused\":\"amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified.         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain.\"}},\"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)\":{\"params\":{\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"nativePriceQuote\":\"Price, in units of current chain currency, that the delivery provider charges to perform the relay\",\"targetChainRefundPerGasUnused\":\"amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain.\"}},\"quoteNativeForChain(uint16,uint256,address)\":{\"params\":{\"currentChainAmount\":\"The value that `paymentForExtraReceiverValue` will be set to\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"targetChainAmount\":\"The amount such that if `targetAddress` will be called with `msg.value` equal to         receiverValue + targetChainAmount\"}},\"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)\":{\"params\":{\"deliveryVaaKey\":\"VaaKey identifying the wormhole message containing the        previously published delivery instructions\",\"newDeliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"newEncodedExecutionParameters\":\"new encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"newReceiverValue\":\"new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing redelivery instructions\"}},\"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)\":{\"params\":{\"deliveryVaaKey\":\"VaaKey identifying the wormhole message containing the        previously published delivery instructions\",\"newDeliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"newGasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider, to the refund chain and address specified in the original request\",\"newReceiverValue\":\"new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing redelivery instructions\"}},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"encodedExecutionParameters\":\"encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"encodedExecutionParameters\":\"encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"messageKeys\":\"Additional messagess to pass in as parameter in call to `targetAddress`\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"messageKeys\":\"Additional messagess to pass in as parameter in call to `targetAddress`\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}}},\"title\":\"IWormholeRelayerSend\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deliveryAttempted(bytes32)\":{\"notice\":\"Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted\"},\"deliveryFailureBlock(bytes32)\":{\"notice\":\"block number of the latest attempt to execute a delivery that failed\"},\"deliverySuccessBlock(bytes32)\":{\"notice\":\"block number at which a delivery was successfully executed\"},\"getDefaultDeliveryProvider()\":{\"notice\":\"Returns the address of the current default delivery provider\"},\"quoteDeliveryPrice(uint16,uint256,bytes,address)\":{\"notice\":\"Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\"},\"quoteEVMDeliveryPrice(uint16,uint256,uint256)\":{\"notice\":\"Returns the price to request a relay to chain `targetChain`, using the default delivery provider\"},\"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)\":{\"notice\":\"Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\"},\"quoteNativeForChain(uint16,uint256,address)\":{\"notice\":\"Returns the (extra) amount of target chain currency that `targetAddress` will be called with, if the `paymentForExtraReceiverValue` field is set to `currentChainAmount`\"},\"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)\":{\"notice\":\"Requests a previously published delivery instruction to be redelivered This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, newReceiverValue, newEncodedExecutionParameters, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - (For EVM_V1) newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - (For EVM_V1) newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`\"},\"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)\":{\"notice\":\"Requests a previously published delivery instruction to be redelivered (e.g. with a different delivery provider) This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, newReceiverValue, newGasLimit, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction\"},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue\"},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\"},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendPayloadToEvm` function with `refundChain` and `refundAddress` as parameters\"},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\"},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue\"},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and external messages specified by `messageKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\"},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendVaasToEvm` function with `refundChain` and `refundAddress` as parameters\"},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\"}},\"notice\":\"The interface to request deliveries\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol\":\"IWormholeRelayerSend\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deliveryAttempted(bytes32)": {
								"notice": "Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted"
							},
							"deliveryFailureBlock(bytes32)": {
								"notice": "block number of the latest attempt to execute a delivery that failed"
							},
							"deliverySuccessBlock(bytes32)": {
								"notice": "block number at which a delivery was successfully executed"
							},
							"getDefaultDeliveryProvider()": {
								"notice": "Returns the address of the current default delivery provider"
							},
							"quoteDeliveryPrice(uint16,uint256,bytes,address)": {
								"notice": "Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`"
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256)": {
								"notice": "Returns the price to request a relay to chain `targetChain`, using the default delivery provider"
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)": {
								"notice": "Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`"
							},
							"quoteNativeForChain(uint16,uint256,address)": {
								"notice": "Returns the (extra) amount of target chain currency that `targetAddress` will be called with, if the `paymentForExtraReceiverValue` field is set to `currentChainAmount`"
							},
							"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)": {
								"notice": "Requests a previously published delivery instruction to be redelivered This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, newReceiverValue, newEncodedExecutionParameters, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - (For EVM_V1) newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - (For EVM_V1) newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`"
							},
							"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)": {
								"notice": "Requests a previously published delivery instruction to be redelivered (e.g. with a different delivery provider) This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, newReceiverValue, newGasLimit, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction"
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue"
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!"
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendPayloadToEvm` function with `refundChain` and `refundAddress` as parameters"
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`"
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue"
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and external messages specified by `messageKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!"
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendVaasToEvm` function with `refundChain` and `refundAddress` as parameters"
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`"
							}
						},
						"notice": "The interface to request deliveries",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> BRIDGE_PARTNERSHIP/src/Base.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "BRIDGE_PARTNERSHIP/src/Base.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> BRIDGE_PARTNERSHIP/src/CCTPBase.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> BRIDGE_PARTNERSHIP/src/TokenBase.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "BRIDGE_PARTNERSHIP/src/TokenBase.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> BRIDGE_PARTNERSHIP/src/Utils.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "BRIDGE_PARTNERSHIP/src/Utils.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> BRIDGE_PARTNERSHIP/src/WormholeRelayerSDK.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "BRIDGE_PARTNERSHIP/src/WormholeRelayerSDK.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 256,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 255,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								255
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 237,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 225,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 225,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 225,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 225,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 225,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 225,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 233,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 235,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 255,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 242,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 241,
												"id": 244,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 255,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 250,
												"id": 252,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 255,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"BRIDGE_PARTNERSHIP/erc20Bridge.sol": {
				"ast": {
					"absolutePath": "BRIDGE_PARTNERSHIP/erc20Bridge.sol",
					"exportedSymbols": {
						"Context": [
							255
						],
						"DeliveryProviderCannotReceivePayment": [
							3938
						],
						"DeliveryProviderDoesNotSupportMessageKeyType": [
							3942
						],
						"DeliveryProviderDoesNotSupportTargetChain": [
							3936
						],
						"ERC20Bridge": [
							536
						],
						"IERC20": [
							225
						],
						"IWETH": [
							3169
						],
						"IWormholeReceiver": [
							3504
						],
						"IWormholeRelayer": [
							3919
						],
						"IWormholeRelayerBase": [
							3562
						],
						"IWormholeRelayerDelivery": [
							3914
						],
						"IWormholeRelayerSend": [
							3864
						],
						"Inputs": [
							699
						],
						"InsufficientRelayerFunds": [
							4008
						],
						"InvalidDeliveryVaa": [
							3972
						],
						"InvalidEmitter": [
							3980
						],
						"InvalidMsgValue": [
							3928
						],
						"InvalidOverrideGasLimit": [
							3998
						],
						"InvalidOverrideReceiverValue": [
							4000
						],
						"InvalidOverrideRefundPerGasUnused": [
							4002
						],
						"InvalidPayloadId": [
							3954
						],
						"InvalidPayloadLength": [
							3960
						],
						"InvalidVaaKeyType": [
							3964
						],
						"MessageKey": [
							3522
						],
						"MessageKeysLengthDoesNotMatchMessagesLength": [
							3986
						],
						"NotAnEvmAddress": [
							4012
						],
						"Ownable": [
							147
						],
						"RETURNDATA_TRUNCATION_THRESHOLD": [
							3922
						],
						"ReentrantDelivery": [
							3948
						],
						"RequestedGasLimitTooLow": [
							3930
						],
						"RequesterNotWormholeRelayer": [
							3992
						],
						"Structs": [
							670
						],
						"TargetChainIsNotThisChain": [
							3996
						],
						"TokenBase": [
							2125
						],
						"TokenReceiver": [
							2506
						],
						"TokenSender": [
							2262
						],
						"TooManyMessageKeys": [
							3968
						],
						"VAA_KEY_TYPE": [
							3517
						],
						"VaaKey": [
							3514
						],
						"VaaKeysDoNotMatchVaas": [
							3990
						],
						"addressToBytes32CCTP": [
							2573
						],
						"fromWormholeFormat": [
							2561
						],
						"toWormholeFormat": [
							2528
						]
					},
					"id": 537,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:3"
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/Utils.sol",
							"file": "./src/Utils.sol",
							"id": 258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 537,
							"sourceUnit": 2574,
							"src": "63:25:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IWETH.sol",
							"file": "./src/interfaces/IWETH.sol",
							"id": 260,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 537,
							"sourceUnit": 3170,
							"src": "90:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 259,
										"name": "IWETH",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3169,
										"src": "98:5:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/TokenBase.sol",
							"file": "./src/TokenBase.sol",
							"id": 264,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 537,
							"sourceUnit": 2507,
							"src": "141:74:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 261,
										"name": "TokenBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2125,
										"src": "149:9:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 262,
										"name": "TokenReceiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2506,
										"src": "160:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 263,
										"name": "TokenSender",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2262,
										"src": "175:11:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol",
							"file": "./src/interfaces/IWormholeReceiver.sol",
							"id": 265,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 537,
							"sourceUnit": 3505,
							"src": "217:48:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol",
							"file": "./src/interfaces/IWormholeRelayer.sol",
							"id": 266,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 537,
							"sourceUnit": 4013,
							"src": "267:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 267,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 537,
							"sourceUnit": 148,
							"src": "316:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 268,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 537,
							"sourceUnit": 226,
							"src": "370:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/lib.d.sol",
							"file": "./lib.d.sol",
							"id": 269,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 537,
							"sourceUnit": 700,
							"src": "444:21:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 270,
										"name": "TokenSender",
										"nameLocations": [
											"504:11:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2262,
										"src": "504:11:3"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "504:11:3"
								},
								{
									"baseName": {
										"id": 272,
										"name": "TokenReceiver",
										"nameLocations": [
											"518:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2506,
										"src": "518:13:3"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "518:13:3"
								},
								{
									"baseName": {
										"id": 274,
										"name": "Ownable",
										"nameLocations": [
											"533:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "533:7:3"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "533:7:3"
								}
							],
							"canonicalName": "ERC20Bridge",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 536,
							"linearizedBaseContracts": [
								536,
								147,
								255,
								2506,
								2262,
								2125,
								798
							],
							"name": "ERC20Bridge",
							"nameLocation": "489:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 281,
									"mutability": "mutable",
									"name": "wormholeEndpoints",
									"nameLocation": "601:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 536,
									"src": "548:70:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint16_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(uint16 => mapping(address => bool))"
									},
									"typeName": {
										"id": 280,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 276,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "556:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"nodeType": "Mapping",
										"src": "548:43:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint16_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(uint16 => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 279,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 277,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "574:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "566:24:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 278,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "585:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "wormEndpoints",
									"nameLocation": "661:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 536,
									"src": "625:49:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint16_$_t_address_$",
										"typeString": "mapping(uint16 => address)"
									},
									"typeName": {
										"id": 284,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 282,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "633:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"nodeType": "Mapping",
										"src": "625:26:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint16_$_t_address_$",
											"typeString": "mapping(uint16 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "643:7:3",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_delivered",
									"nameLocation": "734:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 536,
									"src": "681:63:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint16_$_t_mapping$_t_bytes32_$_t_bool_$_$",
										"typeString": "mapping(uint16 => mapping(bytes32 => bool))"
									},
									"typeName": {
										"id": 290,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 286,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "689:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"nodeType": "Mapping",
										"src": "681:43:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint16_$_t_mapping$_t_bytes32_$_t_bool_$_$",
											"typeString": "mapping(uint16 => mapping(bytes32 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 289,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 287,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "707:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"nodeType": "Mapping",
											"src": "699:24:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
												"typeString": "mapping(bytes32 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 288,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "718:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "981:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 301,
															"name": "_wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "1007:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "_tokenBridge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "1025:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 303,
															"name": "_wormhole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 297,
															"src": "1039:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 300,
														"name": "_initTokenBase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2124,
														"src": "992:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "992:57:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "992:57:3"
											}
										]
									},
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initWorm",
									"nameLocation": "762:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "_wormholeRelayer",
												"nameLocation": "790:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "782:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "_tokenBridge",
												"nameLocation": "853:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "845:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "845:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "_wormhole",
												"nameLocation": "917:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "909:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "771:193:3"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "981:0:3"
									},
									"scope": 536,
									"src": "753:304:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "1173:126:3",
										"statements": [
											{
												"expression": {
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 316,
																"name": "wormholeEndpoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "1184:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint16_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint16 => mapping(address => bool))"
																}
															},
															"id": 319,
															"indexExpression": {
																"id": 317,
																"name": "wormholeId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "1202:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1184:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 320,
														"indexExpression": {
															"id": 318,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "1214:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1184:46:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1184:53:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "1184:53:3"
											},
											{
												"expression": {
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 324,
															"name": "wormEndpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "1248:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint16_$_t_address_$",
																"typeString": "mapping(uint16 => address)"
															}
														},
														"id": 326,
														"indexExpression": {
															"id": 325,
															"name": "wormholeId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "1262:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1248:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 327,
														"name": "contractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "1276:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1248:43:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "1248:43:3"
											}
										]
									},
									"functionSelector": "c8fbaf72",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 314,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 313,
												"name": "onlyOwner",
												"nameLocations": [
													"1164:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1164:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1164:9:3"
										}
									],
									"name": "_setWormholeEndpoint",
									"nameLocation": "1092:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "wormholeId",
												"nameLocation": "1120:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "1113:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 308,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1113:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "1140:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "1132:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1132:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1112:44:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1173:0:3"
									},
									"scope": 536,
									"src": "1083:216:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "1438:116:3",
										"statements": [
											{
												"expression": {
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 340,
																"name": "wormholeEndpoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "1449:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint16_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint16 => mapping(address => bool))"
																}
															},
															"id": 343,
															"indexExpression": {
																"id": 341,
																"name": "wormholeId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "1467:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1449:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 344,
														"indexExpression": {
															"id": 342,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "1479:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1449:46:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1498:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1449:54:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "1449:54:3"
											},
											{
												"expression": {
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1514:32:3",
													"subExpression": {
														"baseExpression": {
															"id": 348,
															"name": "wormEndpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "1521:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint16_$_t_address_$",
																"typeString": "mapping(uint16 => address)"
															}
														},
														"id": 350,
														"indexExpression": {
															"id": 349,
															"name": "wormholeId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "1535:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1521:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "1514:32:3"
											}
										]
									},
									"functionSelector": "7e63e29d",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 338,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 337,
												"name": "onlyOwner",
												"nameLocations": [
													"1429:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1429:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1429:9:3"
										}
									],
									"name": "_removeWormholeEndpoint",
									"nameLocation": "1354:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "wormholeId",
												"nameLocation": "1385:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1378:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 332,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1378:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "1405:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1397:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1397:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1377:44:3"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1438:0:3"
									},
									"scope": 536,
									"src": "1345:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "1691:290:3",
										"statements": [
											{
												"expression": {
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 363,
																"name": "cost",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "1703:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															null
														],
														"id": 364,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "1702:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$__$",
															"typeString": "tuple(uint256,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 367,
																"name": "wormholeTargetId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "1765:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"hexValue": "30",
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1796:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 369,
																"name": "gasUnits",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "1812:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 365,
																"name": "wormholeRelayer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 708,
																"src": "1713:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWormholeRelayer_$3919",
																	"typeString": "contract IWormholeRelayer"
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1729:21:3",
															"memberName": "quoteEVMDeliveryPrice",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3813,
															"src": "1713:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint16_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (uint16,uint256,uint256) view external returns (uint256,uint256)"
															}
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1713:118:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "1702:129:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "1702:129:3"
											},
											{
												"expression": {
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "cost",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "1938:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 374,
															"name": "cost",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "1945:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 375,
																	"name": "wormhole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "1952:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWormhole_$3485",
																		"typeString": "contract IWormhole"
																	}
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1961:10:3",
																"memberName": "messageFee",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3407,
																"src": "1952:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1952:21:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1945:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1938:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 380,
												"nodeType": "ExpressionStatement",
												"src": "1938:35:3"
											}
										]
									},
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_erc20FeeQuote",
									"nameLocation": "1571:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "wormholeTargetId",
												"nameLocation": "1603:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1596:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 355,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1596:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "gasUnits",
												"nameLocation": "1638:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1630:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1585:68:3"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "cost",
												"nameLocation": "1685:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1677:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1677:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1676:14:3"
									},
									"scope": 536,
									"src": "1562:419:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 440,
										"nodeType": "Block",
										"src": "2270:624:3",
										"statements": [
											{
												"assignments": [
													400
												],
												"declarations": [
													{
														"constant": false,
														"id": 400,
														"mutability": "mutable",
														"name": "cost",
														"nameLocation": "2290:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 440,
														"src": "2282:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 399,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2282:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 405,
												"initialValue": {
													"arguments": [
														{
															"id": 402,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "2313:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 403,
															"name": "dstGas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "2326:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 401,
														"name": "_erc20FeeQuote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "2298:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint16_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint16,uint256) view returns (uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2298:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2281:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 406,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2347:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2351:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2347:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 408,
														"name": "cost",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "2359:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2347:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 415,
												"nodeType": "IfStatement",
												"src": "2344:34:3",
												"trueBody": {
													"id": 414,
													"nodeType": "Block",
													"src": "2365:13:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2373:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"id": 410,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "2366:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2366:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 413,
															"nodeType": "ExpressionStatement",
															"src": "2366:10:3"
														}
													]
												}
											},
											{
												"assignments": [
													417
												],
												"declarations": [
													{
														"constant": false,
														"id": 417,
														"mutability": "mutable",
														"name": "payload",
														"nameLocation": "2411:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 440,
														"src": "2398:20:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 416,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2398:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 422,
												"initialValue": {
													"arguments": [
														{
															"id": 420,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "2432:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 418,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "2421:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2425:6:3",
														"memberName": "encode",
														"nodeType": "MemberAccess",
														"src": "2421:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2421:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2398:44:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 424,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "2493:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 425,
															"name": "targetBridge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "2519:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 426,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "2603:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2625:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 428,
															"name": "dstGas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "2641:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 429,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "2675:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 430,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "2731:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 431,
																	"name": "wormhole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "2762:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWormhole_$3485",
																		"typeString": "contract IWormhole"
																	}
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2771:7:3",
																"memberName": "chainId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3387,
																"src": "2762:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
																	"typeString": "function () view external returns (uint16)"
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2762:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"expression": {
																"id": 434,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2822:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2826:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2822:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 423,
														"name": "sendTokenWithPayloadToEvm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2261,
														"src": "2453:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$_t_uint16_$_t_address_$returns$_t_uint64_$",
															"typeString": "function (uint16,address,bytes memory,uint256,uint256,address,uint256,uint16,address) returns (uint64)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2453:411:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "2453:411:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2882:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 398,
												"id": 439,
												"nodeType": "Return",
												"src": "2875:11:3"
											}
										]
									},
									"id": 441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_bridgeErc20",
									"nameLocation": "2057:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "2087:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2080:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 383,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "targetBridge",
												"nameLocation": "2117:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2109:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2148:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2140:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2176:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2168:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2168:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2201:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2193:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2193:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "dstGas",
												"nameLocation": "2225:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2217:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2069:169:3"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "2264:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 396,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2264:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2263:6:3"
									},
									"scope": 536,
									"src": "2048:846:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2505
									],
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "3185:493:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 461,
																	"name": "receivedTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "3204:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_TokenReceived_$669_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct Structs.TokenReceived memory[] memory"
																	}
																},
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3219:6:3",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3204:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "31",
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3229:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3204:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 460,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3196:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3196:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "3196:35:3"
											},
											{
												"assignments": [
													468
												],
												"declarations": [
													{
														"constant": false,
														"id": 468,
														"mutability": "mutable",
														"name": "bridge",
														"nameLocation": "3250:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 534,
														"src": "3242:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 467,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 472,
												"initialValue": {
													"arguments": [
														{
															"id": 470,
															"name": "srcA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "3278:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 469,
														"name": "fromWormholeFormat",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2561,
														"src": "3259:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32) pure returns (address)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3259:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:41:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 474,
																		"name": "wormholeEndpoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "3302:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint16_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(uint16 => mapping(address => bool))"
																		}
																	},
																	"id": 476,
																	"indexExpression": {
																		"id": 475,
																		"name": "ch",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 451,
																		"src": "3320:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3302:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 478,
																"indexExpression": {
																	"id": 477,
																	"name": "bridge",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "3324:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3302:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3334:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "3302:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3294:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3294:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "3294:45:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 484,
																		"name": "_delivered",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "3358:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint16_$_t_mapping$_t_bytes32_$_t_bool_$_$",
																			"typeString": "mapping(uint16 => mapping(bytes32 => bool))"
																		}
																	},
																	"id": 486,
																	"indexExpression": {
																		"id": 485,
																		"name": "ch",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 451,
																		"src": "3369:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3358:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																		"typeString": "mapping(bytes32 => bool)"
																	}
																},
																"id": 488,
																"indexExpression": {
																	"id": 487,
																	"name": "dh",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "3373:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3358:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3379:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "3358:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3350:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3350:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "3350:35:3"
											},
											{
												"assignments": [
													494
												],
												"declarations": [
													{
														"constant": false,
														"id": 494,
														"mutability": "mutable",
														"name": "recipient",
														"nameLocation": "3419:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 534,
														"src": "3411:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 493,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3411:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 502,
												"initialValue": {
													"arguments": [
														{
															"id": 497,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "3453:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3463:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 498,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3463:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 500,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3462:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															}
														],
														"expression": {
															"id": 495,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3442:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3446:6:3",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "3442:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3442:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3396:76:3"
											},
											{
												"assignments": [
													504
												],
												"declarations": [
													{
														"constant": false,
														"id": 504,
														"mutability": "mutable",
														"name": "tokenAmt",
														"nameLocation": "3501:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 534,
														"src": "3493:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 503,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3493:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 509,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 505,
															"name": "receivedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "3512:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenReceived_$669_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct Structs.TokenReceived memory[] memory"
															}
														},
														"id": 507,
														"indexExpression": {
															"hexValue": "30",
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3527:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3512:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenReceived_$669_memory_ptr",
															"typeString": "struct Structs.TokenReceived memory"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3530:6:3",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 666,
													"src": "3512:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3493:43:3"
											},
											{
												"assignments": [
													511
												],
												"declarations": [
													{
														"constant": false,
														"id": 511,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "3552:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 534,
														"src": "3547:6:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 510,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3547:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 522,
												"initialValue": {
													"arguments": [
														{
															"id": 519,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "3604:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "tokenAmt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "3614:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"baseExpression": {
																			"id": 513,
																			"name": "receivedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 447,
																			"src": "3563:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_TokenReceived_$669_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct Structs.TokenReceived memory[] memory"
																			}
																		},
																		"id": 515,
																		"indexExpression": {
																			"hexValue": "30",
																			"id": 514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3578:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3563:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenReceived_$669_memory_ptr",
																			"typeString": "struct Structs.TokenReceived memory"
																		}
																	},
																	"id": 516,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3581:12:3",
																	"memberName": "tokenAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 664,
																	"src": "3563:30:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 512,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "3556:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3556:38:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3595:8:3",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "3556:47:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3556:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3547:76:3"
											},
											{
												"expression": {
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 523,
																"name": "_delivered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 291,
																"src": "3634:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint16_$_t_mapping$_t_bytes32_$_t_bool_$_$",
																	"typeString": "mapping(uint16 => mapping(bytes32 => bool))"
																}
															},
															"id": 526,
															"indexExpression": {
																"id": 524,
																"name": "ch",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 451,
																"src": "3645:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3634:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 527,
														"indexExpression": {
															"id": 525,
															"name": "dh",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "3649:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3634:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 528,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3654:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "66616c7365",
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3665:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "3654:16:3",
														"trueExpression": {
															"hexValue": "74727565",
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3658:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3634:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "3634:36:3"
											}
										]
									},
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receivePayloadAndTokens",
									"nameLocation": "2911:23:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 458,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3169:8:3"
									},
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "2958:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "2945:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 442,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2945:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "receivedTokens",
												"nameLocation": "3007:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "2976:45:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenReceived_$669_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Structs.TokenReceived[]"
												},
												"typeName": {
													"baseType": {
														"id": 445,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 444,
															"name": "Structs.TokenReceived",
															"nameLocations": [
																"2976:7:3",
																"2984:13:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 669,
															"src": "2976:21:3"
														},
														"referencedDeclaration": 669,
														"src": "2976:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenReceived_$669_storage_ptr",
															"typeString": "struct Structs.TokenReceived"
														}
													},
													"id": 446,
													"nodeType": "ArrayTypeName",
													"src": "2976:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenReceived_$669_storage_$dyn_storage_ptr",
														"typeString": "struct Structs.TokenReceived[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "srcA",
												"nameLocation": "3040:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3032:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 448,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "ch",
												"nameLocation": "3079:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3072:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 450,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3072:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "dh",
												"nameLocation": "3100:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3092:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 452,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3092:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3129:14:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 454,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "3129:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 455,
													"nodeType": "ArrayTypeName",
													"src": "3129:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2934:217:3"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3185:0:3"
									},
									"scope": 536,
									"src": "2902:776:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 537,
							"src": "471:3216:3",
							"usedErrors": [
								13,
								18,
								4012
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "35:3652:3"
				},
				"id": 3
			},
			"BRIDGE_PARTNERSHIP/lib.d.sol": {
				"ast": {
					"absolutePath": "BRIDGE_PARTNERSHIP/lib.d.sol",
					"exportedSymbols": {
						"Inputs": [
							699
						],
						"Structs": [
							670
						]
					},
					"id": 700,
					"license": "Unlicensed",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 538,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Structs",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 670,
							"linearizedBaseContracts": [
								670
							],
							"name": "Structs",
							"nameLocation": "77:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "7e43b997",
									"id": 540,
									"name": "WrongFeeOrParams",
									"nameLocation": "100:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "116:2:4"
									},
									"src": "94:25:4"
								},
								{
									"canonicalName": "Structs.EthBridge",
									"id": 553,
									"members": [
										{
											"constant": false,
											"id": 542,
											"mutability": "mutable",
											"name": "_lzSrcCh",
											"nameLocation": "161:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 553,
											"src": "154:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 541,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "154:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 544,
											"mutability": "mutable",
											"name": "_lzDstChId",
											"nameLocation": "193:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 553,
											"src": "186:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 543,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "186:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 546,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "230:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 553,
											"src": "222:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 545,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "222:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 548,
											"mutability": "mutable",
											"name": "dstReciver",
											"nameLocation": "255:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 553,
											"src": "247:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 547,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "247:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 550,
											"mutability": "mutable",
											"name": "timeStamp",
											"nameLocation": "284:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 553,
											"src": "276:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 549,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "276:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 552,
											"mutability": "mutable",
											"name": "delivered",
											"nameLocation": "309:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 553,
											"src": "304:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 551,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "304:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "EthBridge",
									"nameLocation": "134:9:4",
									"nodeType": "StructDefinition",
									"scope": 670,
									"src": "127:199:4",
									"visibility": "public"
								},
								{
									"canonicalName": "Structs.TokenBridge",
									"id": 568,
									"members": [
										{
											"constant": false,
											"id": 555,
											"mutability": "mutable",
											"name": "_wormSrcCh",
											"nameLocation": "370:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 568,
											"src": "363:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 554,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "363:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 557,
											"mutability": "mutable",
											"name": "_wormDstChId",
											"nameLocation": "411:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 568,
											"src": "404:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 556,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "404:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 559,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "457:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 568,
											"src": "449:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 558,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "449:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 561,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "481:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 568,
											"src": "473:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 560,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "473:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 563,
											"mutability": "mutable",
											"name": "dstReciver",
											"nameLocation": "506:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 568,
											"src": "498:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 562,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 565,
											"mutability": "mutable",
											"name": "timeStamp",
											"nameLocation": "535:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 568,
											"src": "527:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 564,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "527:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 567,
											"mutability": "mutable",
											"name": "delivered",
											"nameLocation": "560:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 568,
											"src": "555:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 566,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "555:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenBridge",
									"nameLocation": "341:11:4",
									"nodeType": "StructDefinition",
									"scope": 670,
									"src": "334:243:4",
									"visibility": "public"
								},
								{
									"canonicalName": "Structs.LatestBridge",
									"id": 580,
									"members": [
										{
											"constant": false,
											"id": 570,
											"mutability": "mutable",
											"name": "isEth",
											"nameLocation": "620:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 580,
											"src": "615:10:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 569,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "615:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 573,
											"mutability": "mutable",
											"name": "ethbridge",
											"nameLocation": "745:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 580,
											"src": "735:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_EthBridge_$553_storage_ptr",
												"typeString": "struct Structs.EthBridge"
											},
											"typeName": {
												"id": 572,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 571,
													"name": "EthBridge",
													"nameLocations": [
														"735:9:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 553,
													"src": "735:9:4"
												},
												"referencedDeclaration": 553,
												"src": "735:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_EthBridge_$553_storage_ptr",
													"typeString": "struct Structs.EthBridge"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 576,
											"mutability": "mutable",
											"name": "tokenbridge",
											"nameLocation": "867:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 580,
											"src": "855:23:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenBridge_$568_storage_ptr",
												"typeString": "struct Structs.TokenBridge"
											},
											"typeName": {
												"id": 575,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 574,
													"name": "TokenBridge",
													"nameLocations": [
														"855:11:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 568,
													"src": "855:11:4"
												},
												"referencedDeclaration": 568,
												"src": "855:11:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenBridge_$568_storage_ptr",
													"typeString": "struct Structs.TokenBridge"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 579,
											"mutability": "mutable",
											"name": "additionalVaas",
											"nameLocation": "897:14:4",
											"nodeType": "VariableDeclaration",
											"scope": 580,
											"src": "889:22:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
												"typeString": "bytes[]"
											},
											"typeName": {
												"baseType": {
													"id": 577,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "889:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"id": 578,
												"nodeType": "ArrayTypeName",
												"src": "889:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
													"typeString": "bytes[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "LatestBridge",
									"nameLocation": "592:12:4",
									"nodeType": "StructDefinition",
									"scope": 670,
									"src": "585:383:4",
									"visibility": "public"
								},
								{
									"canonicalName": "Structs.UserData",
									"id": 589,
									"members": [
										{
											"constant": false,
											"id": 582,
											"mutability": "mutable",
											"name": "bridgeOut",
											"nameLocation": "1011:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 589,
											"src": "1003:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 581,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1003:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 584,
											"mutability": "mutable",
											"name": "bridgeIn",
											"nameLocation": "1039:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 589,
											"src": "1031:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 583,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1031:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 586,
											"mutability": "mutable",
											"name": "totalRef",
											"nameLocation": "1066:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 589,
											"src": "1058:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 585,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1058:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 588,
											"mutability": "mutable",
											"name": "points",
											"nameLocation": "1093:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 589,
											"src": "1085:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 587,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1085:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserData",
									"nameLocation": "984:8:4",
									"nodeType": "StructDefinition",
									"scope": 670,
									"src": "977:130:4",
									"visibility": "public"
								},
								{
									"canonicalName": "Structs.Referals",
									"id": 594,
									"members": [
										{
											"constant": false,
											"id": 591,
											"mutability": "mutable",
											"name": "refered",
											"nameLocation": "1146:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 594,
											"src": "1141:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 590,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1141:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 593,
											"mutability": "mutable",
											"name": "referer",
											"nameLocation": "1172:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 594,
											"src": "1164:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 592,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1164:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Referals",
									"nameLocation": "1122:8:4",
									"nodeType": "StructDefinition",
									"scope": 670,
									"src": "1115:72:4",
									"visibility": "public"
								},
								{
									"canonicalName": "Structs.User",
									"id": 604,
									"members": [
										{
											"constant": false,
											"id": 597,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "1226:4:4",
											"nodeType": "VariableDeclaration",
											"scope": 604,
											"src": "1217:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserData_$589_storage_ptr",
												"typeString": "struct Structs.UserData"
											},
											"typeName": {
												"id": 596,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 595,
													"name": "UserData",
													"nameLocations": [
														"1217:8:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 589,
													"src": "1217:8:4"
												},
												"referencedDeclaration": 589,
												"src": "1217:8:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$589_storage_ptr",
													"typeString": "struct Structs.UserData"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 600,
											"mutability": "mutable",
											"name": "maps",
											"nameLocation": "1250:4:4",
											"nodeType": "VariableDeclaration",
											"scope": 604,
											"src": "1241:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserMaps_$647_storage_ptr",
												"typeString": "struct Structs.UserMaps"
											},
											"typeName": {
												"id": 599,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 598,
													"name": "UserMaps",
													"nameLocations": [
														"1241:8:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 647,
													"src": "1241:8:4"
												},
												"referencedDeclaration": 647,
												"src": "1241:8:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserMaps_$647_storage_ptr",
													"typeString": "struct Structs.UserMaps"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 603,
											"mutability": "mutable",
											"name": "referalData",
											"nameLocation": "1274:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 604,
											"src": "1265:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Referals_$594_storage_ptr",
												"typeString": "struct Structs.Referals"
											},
											"typeName": {
												"id": 602,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 601,
													"name": "Referals",
													"nameLocations": [
														"1265:8:4"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 594,
													"src": "1265:8:4"
												},
												"referencedDeclaration": 594,
												"src": "1265:8:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Referals_$594_storage_ptr",
													"typeString": "struct Structs.Referals"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "1202:4:4",
									"nodeType": "StructDefinition",
									"scope": 670,
									"src": "1195:98:4",
									"visibility": "public"
								},
								{
									"canonicalName": "Structs.UserMaps",
									"id": 647,
									"members": [
										{
											"constant": false,
											"id": 608,
											"mutability": "mutable",
											"name": "outVolEth",
											"nameLocation": "1353:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 647,
											"src": "1327:35:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint16_$_t_uint256_$",
												"typeString": "mapping(uint16 => uint256)"
											},
											"typeName": {
												"id": 607,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 605,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1335:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "Mapping",
												"src": "1327:25:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint16_$_t_uint256_$",
													"typeString": "mapping(uint16 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1344:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 614,
											"mutability": "mutable",
											"name": "outVolToken",
											"nameLocation": "1418:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 647,
											"src": "1373:56:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint16_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(uint16 => uint256))"
											},
											"typeName": {
												"id": 613,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1381:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1373:44:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint16_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(uint16 => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 612,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 610,
														"name": "uint16",
														"nodeType": "ElementaryTypeName",
														"src": "1399:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Mapping",
													"src": "1391:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint16_$_t_uint256_$",
														"typeString": "mapping(uint16 => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 611,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1408:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 619,
											"mutability": "mutable",
											"name": "tokenBridgeIns",
											"nameLocation": "1495:14:4",
											"nodeType": "VariableDeclaration",
											"scope": 647,
											"src": "1465:44:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenBridge_$568_storage_$",
												"typeString": "mapping(bytes32 => struct Structs.TokenBridge)"
											},
											"typeName": {
												"id": 618,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 615,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1473:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1465:29:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenBridge_$568_storage_$",
													"typeString": "mapping(bytes32 => struct Structs.TokenBridge)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 617,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 616,
														"name": "TokenBridge",
														"nameLocations": [
															"1482:11:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 568,
														"src": "1482:11:4"
													},
													"referencedDeclaration": 568,
													"src": "1482:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenBridge_$568_storage_ptr",
														"typeString": "struct Structs.TokenBridge"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 626,
											"mutability": "mutable",
											"name": "tokenBridgeOuts",
											"nameLocation": "1570:15:4",
											"nodeType": "VariableDeclaration",
											"scope": 647,
											"src": "1520:65:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint16_$_t_struct$_TokenBridge_$568_storage_$_$",
												"typeString": "mapping(uint256 => mapping(uint16 => struct Structs.TokenBridge))"
											},
											"typeName": {
												"id": 625,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1520:49:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint16_$_t_struct$_TokenBridge_$568_storage_$_$",
													"typeString": "mapping(uint256 => mapping(uint16 => struct Structs.TokenBridge))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 624,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 621,
														"name": "uint16",
														"nodeType": "ElementaryTypeName",
														"src": "1547:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Mapping",
													"src": "1539:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint16_$_t_struct$_TokenBridge_$568_storage_$",
														"typeString": "mapping(uint16 => struct Structs.TokenBridge)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 623,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 622,
															"name": "TokenBridge",
															"nameLocations": [
																"1556:11:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 568,
															"src": "1556:11:4"
														},
														"referencedDeclaration": 568,
														"src": "1556:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenBridge_$568_storage_ptr",
															"typeString": "struct Structs.TokenBridge"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 632,
											"mutability": "mutable",
											"name": "hashes",
											"nameLocation": "1640:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 647,
											"src": "1596:50:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint16_$_t_bytes32_$_$",
												"typeString": "mapping(uint256 => mapping(uint16 => bytes32))"
											},
											"typeName": {
												"id": 631,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1596:43:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint16_$_t_bytes32_$_$",
													"typeString": "mapping(uint256 => mapping(uint16 => bytes32))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 630,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 628,
														"name": "uint16",
														"nodeType": "ElementaryTypeName",
														"src": "1621:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Mapping",
													"src": "1613:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint16_$_t_bytes32_$",
														"typeString": "mapping(uint16 => bytes32)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 629,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1630:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 639,
											"mutability": "mutable",
											"name": "ethBridgesOut",
											"nameLocation": "1721:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 647,
											"src": "1675:59:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint16_$_t_struct$_EthBridge_$553_storage_$_$",
												"typeString": "mapping(uint256 => mapping(uint16 => struct Structs.EthBridge))"
											},
											"typeName": {
												"id": 638,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1675:45:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint16_$_t_struct$_EthBridge_$553_storage_$_$",
													"typeString": "mapping(uint256 => mapping(uint16 => struct Structs.EthBridge))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 637,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 634,
														"name": "uint16",
														"nodeType": "ElementaryTypeName",
														"src": "1700:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Mapping",
													"src": "1692:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint16_$_t_struct$_EthBridge_$553_storage_$",
														"typeString": "mapping(uint16 => struct Structs.EthBridge)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 636,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 635,
															"name": "EthBridge",
															"nameLocations": [
																"1709:9:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 553,
															"src": "1709:9:4"
														},
														"referencedDeclaration": 553,
														"src": "1709:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_EthBridge_$553_storage_ptr",
															"typeString": "struct Structs.EthBridge"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 646,
											"mutability": "mutable",
											"name": "ethBridgesIn",
											"nameLocation": "1791:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 647,
											"src": "1745:58:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint16_$_t_struct$_EthBridge_$553_storage_$_$",
												"typeString": "mapping(uint256 => mapping(uint16 => struct Structs.EthBridge))"
											},
											"typeName": {
												"id": 645,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1753:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1745:45:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint16_$_t_struct$_EthBridge_$553_storage_$_$",
													"typeString": "mapping(uint256 => mapping(uint16 => struct Structs.EthBridge))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 644,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 641,
														"name": "uint16",
														"nodeType": "ElementaryTypeName",
														"src": "1770:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Mapping",
													"src": "1762:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint16_$_t_struct$_EthBridge_$553_storage_$",
														"typeString": "mapping(uint16 => struct Structs.EthBridge)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 643,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 642,
															"name": "EthBridge",
															"nameLocations": [
																"1779:9:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 553,
															"src": "1779:9:4"
														},
														"referencedDeclaration": 553,
														"src": "1779:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_EthBridge_$553_storage_ptr",
															"typeString": "struct Structs.EthBridge"
														}
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserMaps",
									"nameLocation": "1308:8:4",
									"nodeType": "StructDefinition",
									"scope": 670,
									"src": "1301:510:4",
									"visibility": "public"
								},
								{
									"canonicalName": "Structs.BridgeData",
									"id": 658,
									"members": [
										{
											"constant": false,
											"id": 649,
											"mutability": "mutable",
											"name": "pointPerTx",
											"nameLocation": "1855:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 658,
											"src": "1847:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 648,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1847:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 651,
											"mutability": "mutable",
											"name": "totalPoints",
											"nameLocation": "1884:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 658,
											"src": "1876:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 650,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1876:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 653,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "1911:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 658,
											"src": "1906:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 652,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1906:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 655,
											"mutability": "mutable",
											"name": "bridgeFeeEther",
											"nameLocation": "1938:14:4",
											"nodeType": "VariableDeclaration",
											"scope": 658,
											"src": "1930:22:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 654,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1930:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 657,
											"mutability": "mutable",
											"name": "percentFee",
											"nameLocation": "1971:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 658,
											"src": "1963:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 656,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1963:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BridgeData",
									"nameLocation": "1826:10:4",
									"nodeType": "StructDefinition",
									"scope": 670,
									"src": "1819:170:4",
									"visibility": "public"
								},
								{
									"canonicalName": "Structs.TokenReceived",
									"id": 669,
									"members": [
										{
											"constant": false,
											"id": 660,
											"mutability": "mutable",
											"name": "tokenHomeAddress",
											"nameLocation": "2048:16:4",
											"nodeType": "VariableDeclaration",
											"scope": 669,
											"src": "2040:24:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 659,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2040:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 662,
											"mutability": "mutable",
											"name": "tokenHomeChain",
											"nameLocation": "2082:14:4",
											"nodeType": "VariableDeclaration",
											"scope": 669,
											"src": "2075:21:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 661,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2075:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 664,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "2115:12:4",
											"nodeType": "VariableDeclaration",
											"scope": 669,
											"src": "2107:20:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 663,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2107:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 666,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "2245:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 669,
											"src": "2237:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 665,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2237:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 668,
											"mutability": "mutable",
											"name": "amountNormalized",
											"nameLocation": "2270:16:4",
											"nodeType": "VariableDeclaration",
											"scope": 669,
											"src": "2262:24:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 667,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2262:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenReceived",
									"nameLocation": "2015:13:4",
									"nodeType": "StructDefinition",
									"scope": 670,
									"src": "2008:337:4",
									"visibility": "public"
								}
							],
							"scope": 700,
							"src": "69:2279:4",
							"usedErrors": [
								540
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Inputs",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 699,
							"linearizedBaseContracts": [
								699
							],
							"name": "Inputs",
							"nameLocation": "2360:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Inputs.ERC20INPUT",
									"id": 683,
									"members": [
										{
											"constant": false,
											"id": 672,
											"mutability": "mutable",
											"name": "targetChain",
											"nameLocation": "2483:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 683,
											"src": "2476:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 671,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2476:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 674,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2513:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 683,
											"src": "2505:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 673,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2505:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 676,
											"mutability": "mutable",
											"name": "amt",
											"nameLocation": "2541:3:4",
											"nodeType": "VariableDeclaration",
											"scope": 683,
											"src": "2533:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 675,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2533:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 678,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "2563:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 683,
											"src": "2555:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 677,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2555:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 680,
											"mutability": "mutable",
											"name": "dstGas",
											"nameLocation": "2587:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 683,
											"src": "2579:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 679,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2579:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 682,
											"mutability": "mutable",
											"name": "referal",
											"nameLocation": "2612:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 683,
											"src": "2604:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 681,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2604:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20INPUT",
									"nameLocation": "2454:10:4",
									"nodeType": "StructDefinition",
									"scope": 699,
									"src": "2447:180:4",
									"visibility": "public"
								},
								{
									"canonicalName": "Inputs.ETHINPUT",
									"id": 698,
									"members": [
										{
											"constant": false,
											"id": 685,
											"mutability": "mutable",
											"name": "toChainId",
											"nameLocation": "2724:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 698,
											"src": "2717:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 684,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2717:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 687,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "2753:2:4",
											"nodeType": "VariableDeclaration",
											"scope": 698,
											"src": "2745:10:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 686,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2745:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 689,
											"mutability": "mutable",
											"name": "amt",
											"nameLocation": "2775:3:4",
											"nodeType": "VariableDeclaration",
											"scope": 698,
											"src": "2767:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 688,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2767:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 691,
											"mutability": "mutable",
											"name": "dstGas",
											"nameLocation": "2797:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 698,
											"src": "2789:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 690,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2789:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 693,
											"mutability": "mutable",
											"name": "useZro",
											"nameLocation": "2819:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 698,
											"src": "2814:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 692,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2814:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 695,
											"mutability": "mutable",
											"name": "zroPAddr",
											"nameLocation": "2844:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 698,
											"src": "2836:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 694,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2836:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 697,
											"mutability": "mutable",
											"name": "referal",
											"nameLocation": "2871:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 698,
											"src": "2863:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 696,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2863:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ETHINPUT",
									"nameLocation": "2698:8:4",
									"nodeType": "StructDefinition",
									"scope": 699,
									"src": "2691:195:4",
									"visibility": "public"
								}
							],
							"scope": 700,
							"src": "2352:537:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "41:2848:4"
				},
				"id": 4
			},
			"BRIDGE_PARTNERSHIP/src/Base.sol": {
				"ast": {
					"absolutePath": "BRIDGE_PARTNERSHIP/src/Base.sol",
					"exportedSymbols": {
						"Base": [
							798
						],
						"DeliveryProviderCannotReceivePayment": [
							3938
						],
						"DeliveryProviderDoesNotSupportMessageKeyType": [
							3942
						],
						"DeliveryProviderDoesNotSupportTargetChain": [
							3936
						],
						"IWormhole": [
							3485
						],
						"IWormholeReceiver": [
							3504
						],
						"IWormholeRelayer": [
							3919
						],
						"IWormholeRelayerBase": [
							3562
						],
						"IWormholeRelayerDelivery": [
							3914
						],
						"IWormholeRelayerSend": [
							3864
						],
						"InsufficientRelayerFunds": [
							4008
						],
						"InvalidDeliveryVaa": [
							3972
						],
						"InvalidEmitter": [
							3980
						],
						"InvalidMsgValue": [
							3928
						],
						"InvalidOverrideGasLimit": [
							3998
						],
						"InvalidOverrideReceiverValue": [
							4000
						],
						"InvalidOverrideRefundPerGasUnused": [
							4002
						],
						"InvalidPayloadId": [
							3954
						],
						"InvalidPayloadLength": [
							3960
						],
						"InvalidVaaKeyType": [
							3964
						],
						"MessageKey": [
							3522
						],
						"MessageKeysLengthDoesNotMatchMessagesLength": [
							3986
						],
						"NotAnEvmAddress": [
							4012
						],
						"RETURNDATA_TRUNCATION_THRESHOLD": [
							3922
						],
						"ReentrantDelivery": [
							3948
						],
						"RequestedGasLimitTooLow": [
							3930
						],
						"RequesterNotWormholeRelayer": [
							3992
						],
						"TargetChainIsNotThisChain": [
							3996
						],
						"TooManyMessageKeys": [
							3968
						],
						"VAA_KEY_TYPE": [
							3517
						],
						"VaaKey": [
							3514
						],
						"VaaKeysDoNotMatchVaas": [
							3990
						],
						"addressToBytes32CCTP": [
							2573
						],
						"fromWormholeFormat": [
							2561
						],
						"toWormholeFormat": [
							2528
						]
					},
					"id": 799,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 701,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:5"
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol",
							"file": "./interfaces/IWormholeReceiver.sol",
							"id": 702,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 3505,
							"src": "28:44:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol",
							"file": "./interfaces/IWormholeRelayer.sol",
							"id": 703,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 4013,
							"src": "74:43:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol",
							"file": "./interfaces/IWormhole.sol",
							"id": 704,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 3486,
							"src": "119:36:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/Utils.sol",
							"file": "./Utils.sol",
							"id": 705,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 2574,
							"src": "157:21:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Base",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 798,
							"linearizedBaseContracts": [
								798
							],
							"name": "Base",
							"nameLocation": "200:4:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "da25b725",
									"id": 708,
									"mutability": "mutable",
									"name": "wormholeRelayer",
									"nameLocation": "236:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "212:39:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWormholeRelayer_$3919",
										"typeString": "contract IWormholeRelayer"
									},
									"typeName": {
										"id": 707,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 706,
											"name": "IWormholeRelayer",
											"nameLocations": [
												"212:16:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3919,
											"src": "212:16:5"
										},
										"referencedDeclaration": 3919,
										"src": "212:16:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWormholeRelayer_$3919",
											"typeString": "contract IWormholeRelayer"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "84acd1bb",
									"id": 711,
									"mutability": "mutable",
									"name": "wormhole",
									"nameLocation": "275:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "258:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWormhole_$3485",
										"typeString": "contract IWormhole"
									},
									"typeName": {
										"id": 710,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 709,
											"name": "IWormhole",
											"nameLocations": [
												"258:9:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3485,
											"src": "258:9:5"
										},
										"referencedDeclaration": 3485,
										"src": "258:9:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWormhole_$3485",
											"typeString": "contract IWormhole"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 713,
									"mutability": "mutable",
									"name": "registrationOwner",
									"nameLocation": "300:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "292:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 712,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "292:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 717,
									"mutability": "mutable",
									"name": "registeredSenders",
									"nameLocation": "351:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "324:44:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint16_$_t_bytes32_$",
										"typeString": "mapping(uint16 => bytes32)"
									},
									"typeName": {
										"id": 716,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 714,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "332:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"nodeType": "Mapping",
										"src": "324:26:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint16_$_t_bytes32_$",
											"typeString": "mapping(uint16 => bytes32)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 715,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "342:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "448:154:5",
										"statements": [
											{
												"expression": {
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 724,
														"name": "wormholeRelayer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "459:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWormholeRelayer_$3919",
															"typeString": "contract IWormholeRelayer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 726,
																"name": "_wormholeRelayer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 719,
																"src": "494:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 725,
															"name": "IWormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3919,
															"src": "477:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IWormholeRelayer_$3919_$",
																"typeString": "type(contract IWormholeRelayer)"
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "477:34:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWormholeRelayer_$3919",
															"typeString": "contract IWormholeRelayer"
														}
													},
													"src": "459:52:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWormholeRelayer_$3919",
														"typeString": "contract IWormholeRelayer"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "459:52:5"
											},
											{
												"expression": {
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 730,
														"name": "wormhole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "522:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWormhole_$3485",
															"typeString": "contract IWormhole"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 732,
																"name": "_wormhole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "543:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 731,
															"name": "IWormhole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3485,
															"src": "533:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IWormhole_$3485_$",
																"typeString": "type(contract IWormhole)"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "533:20:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWormhole_$3485",
															"typeString": "contract IWormhole"
														}
													},
													"src": "522:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWormhole_$3485",
														"typeString": "contract IWormhole"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "522:31:5"
											},
											{
												"expression": {
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 736,
														"name": "registrationOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "564:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 737,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "584:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "588:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "584:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "564:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "564:30:5"
											}
										]
									},
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initBase",
									"nameLocation": "386:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "_wormholeRelayer",
												"nameLocation": "404:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "396:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "_wormhole",
												"nameLocation": "429:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "421:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:44:5"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "448:0:5"
									},
									"scope": 798,
									"src": "377:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "641:153:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 745,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "674:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "678:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "674:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 749,
																		"name": "wormholeRelayer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 708,
																		"src": "696:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWormholeRelayer_$3919",
																			"typeString": "contract IWormholeRelayer"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IWormholeRelayer_$3919",
																			"typeString": "contract IWormholeRelayer"
																		}
																	],
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "688:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 747,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "688:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "688:24:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "674:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d73672e73656e646572206973206e6f7420576f726d686f6c652052656c61796572",
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "727:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a784df99b54c4e5b96bc28db86cb1d2df9d65bd64e07dfeb9d77bc81539828a1",
																"typeString": "literal_string \"Msg.sender is not Wormhole Relayer\""
															},
															"value": "Msg.sender is not Wormhole Relayer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a784df99b54c4e5b96bc28db86cb1d2df9d65bd64e07dfeb9d77bc81539828a1",
																"typeString": "literal_string \"Msg.sender is not Wormhole Relayer\""
															}
														],
														"id": 744,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "652:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "652:122:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "652:122:5"
											},
											{
												"id": 755,
												"nodeType": "PlaceholderStatement",
												"src": "785:1:5"
											}
										]
									},
									"id": 757,
									"name": "onlyWormholeRelayer",
									"nameLocation": "619:19:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "638:2:5"
									},
									"src": "610:184:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "873:149:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 764,
																	"name": "registeredSenders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 717,
																	"src": "906:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint16_$_t_bytes32_$",
																		"typeString": "mapping(uint16 => bytes32)"
																	}
																},
																"id": 766,
																"indexExpression": {
																	"id": 765,
																	"name": "sourceChain",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "924:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "906:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 767,
																"name": "sourceAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 761,
																"src": "940:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "906:47:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420726567697374657265642073656e646572",
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "968:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45c7780caa14c78da314fdccf7a10285ededa4af94cdba7fd53928c53e2adf7b",
																"typeString": "literal_string \"Not registered sender\""
															},
															"value": "Not registered sender"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45c7780caa14c78da314fdccf7a10285ededa4af94cdba7fd53928c53e2adf7b",
																"typeString": "literal_string \"Not registered sender\""
															}
														],
														"id": 763,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "884:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "884:118:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 771,
												"nodeType": "ExpressionStatement",
												"src": "884:118:5"
											},
											{
												"id": 772,
												"nodeType": "PlaceholderStatement",
												"src": "1013:1:5"
											}
										]
									},
									"id": 774,
									"name": "isRegisteredSender",
									"nameLocation": "811:18:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "837:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "830:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 758,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "830:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "858:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "850:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 760,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "829:43:5"
									},
									"src": "802:220:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "1477:193:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 783,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1510:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1514:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1510:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 785,
																"name": "registrationOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "1524:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1510:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616c6c6f77656420746f2073657420726567697374657265642073656e646572",
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1556:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af64e1436a7704ba26fb37b7d363f0e4cd33d85e327e95510c2c8ad50943871e",
																"typeString": "literal_string \"Not allowed to set registered sender\""
															},
															"value": "Not allowed to set registered sender"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af64e1436a7704ba26fb37b7d363f0e4cd33d85e327e95510c2c8ad50943871e",
																"typeString": "literal_string \"Not allowed to set registered sender\""
															}
														],
														"id": 782,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1488:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1488:117:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "1488:117:5"
											},
											{
												"expression": {
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 790,
															"name": "registeredSenders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "1616:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint16_$_t_bytes32_$",
																"typeString": "mapping(uint16 => bytes32)"
															}
														},
														"id": 792,
														"indexExpression": {
															"id": 791,
															"name": "sourceChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "1634:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1616:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 793,
														"name": "sourceAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "1649:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1616:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "1616:46:5"
											}
										]
									},
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "1030:337:5",
										"text": " Sets the registered address for 'sourceChain' to 'sourceAddress'\n So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid\n Assumes only one sender per chain is valid\n Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
									},
									"functionSelector": "dd12d68b",
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setRegisteredSender",
									"nameLocation": "1382:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "1419:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1412:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 776,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1412:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "1449:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1441:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 778,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1441:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1401:68:5"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1477:0:5"
									},
									"scope": 798,
									"src": "1373:297:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 799,
							"src": "182:1491:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:1675:5"
				},
				"id": 5
			},
			"BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol": {
				"ast": {
					"absolutePath": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol",
					"exportedSymbols": {
						"Base": [
							798
						],
						"CCTPAndTokenBase": [
							849
						],
						"CCTPAndTokenReceiver": [
							1681
						],
						"CCTPAndTokenSender": [
							1272
						],
						"CCTPBase": [
							1758
						],
						"CCTPMessageLib": [
							1705
						],
						"CCTPReceiver": [
							2087
						],
						"CCTPSender": [
							1948
						],
						"DeliveryProviderCannotReceivePayment": [
							3938
						],
						"DeliveryProviderDoesNotSupportMessageKeyType": [
							3942
						],
						"DeliveryProviderDoesNotSupportTargetChain": [
							3936
						],
						"IERC20": [
							2755
						],
						"IMessageTransmitter": [
							2602
						],
						"IReceiver": [
							2616
						],
						"IRelayer": [
							2658
						],
						"ITokenBridge": [
							3155
						],
						"ITokenMessenger": [
							2677
						],
						"IWETH": [
							3169
						],
						"IWormhole": [
							3485
						],
						"IWormholeReceiver": [
							3504
						],
						"IWormholeRelayer": [
							3919
						],
						"IWormholeRelayerBase": [
							3562
						],
						"IWormholeRelayerDelivery": [
							3914
						],
						"IWormholeRelayerSend": [
							3864
						],
						"InsufficientRelayerFunds": [
							4008
						],
						"InvalidDeliveryVaa": [
							3972
						],
						"InvalidEmitter": [
							3980
						],
						"InvalidMsgValue": [
							3928
						],
						"InvalidOverrideGasLimit": [
							3998
						],
						"InvalidOverrideReceiverValue": [
							4000
						],
						"InvalidOverrideRefundPerGasUnused": [
							4002
						],
						"InvalidPayloadId": [
							3954
						],
						"InvalidPayloadLength": [
							3960
						],
						"InvalidVaaKeyType": [
							3964
						],
						"MessageKey": [
							3522
						],
						"MessageKeysLengthDoesNotMatchMessagesLength": [
							3986
						],
						"NotAnEvmAddress": [
							4012
						],
						"RETURNDATA_TRUNCATION_THRESHOLD": [
							3922
						],
						"ReentrantDelivery": [
							3948
						],
						"RequestedGasLimitTooLow": [
							3930
						],
						"RequesterNotWormholeRelayer": [
							3992
						],
						"TargetChainIsNotThisChain": [
							3996
						],
						"TokenBase": [
							2125
						],
						"TokenReceiver": [
							2506
						],
						"TokenSender": [
							2262
						],
						"TooManyMessageKeys": [
							3968
						],
						"VAA_KEY_TYPE": [
							3517
						],
						"VaaKey": [
							3514
						],
						"VaaKeysDoNotMatchVaas": [
							3990
						],
						"addressToBytes32CCTP": [
							2573
						],
						"fromWormholeFormat": [
							2561
						],
						"toWormholeFormat": [
							2528
						]
					},
					"id": 1682,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 800,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:6"
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol",
							"file": "./interfaces/IWormholeReceiver.sol",
							"id": 801,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1682,
							"sourceUnit": 3505,
							"src": "28:44:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol",
							"file": "./interfaces/IWormholeRelayer.sol",
							"id": 802,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1682,
							"sourceUnit": 4013,
							"src": "74:43:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/ITokenBridge.sol",
							"file": "./interfaces/ITokenBridge.sol",
							"id": 803,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1682,
							"sourceUnit": 3156,
							"src": "119:39:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 805,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1682,
							"sourceUnit": 2756,
							"src": "160:47:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 804,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2755,
										"src": "168:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol",
							"file": "./interfaces/CCTPInterfaces/ITokenMessenger.sol",
							"id": 806,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1682,
							"sourceUnit": 2678,
							"src": "209:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol",
							"file": "./interfaces/CCTPInterfaces/IMessageTransmitter.sol",
							"id": 807,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1682,
							"sourceUnit": 2603,
							"src": "268:61:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/Utils.sol",
							"file": "./Utils.sol",
							"id": 808,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1682,
							"sourceUnit": 2574,
							"src": "333:21:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/TokenBase.sol",
							"file": "./TokenBase.sol",
							"id": 809,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1682,
							"sourceUnit": 2507,
							"src": "356:25:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol",
							"file": "./CCTPBase.sol",
							"id": 810,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1682,
							"sourceUnit": 2088,
							"src": "383:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 811,
										"name": "CCTPBase",
										"nameLocations": [
											"449:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1758,
										"src": "449:8:6"
									},
									"id": 812,
									"nodeType": "InheritanceSpecifier",
									"src": "449:8:6"
								}
							],
							"canonicalName": "CCTPAndTokenBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 849,
							"linearizedBaseContracts": [
								849,
								1758,
								798
							],
							"name": "CCTPAndTokenBase",
							"nameLocation": "429:16:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c6328a46",
									"id": 815,
									"mutability": "mutable",
									"name": "tokenBridge",
									"nameLocation": "485:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 849,
									"src": "465:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ITokenBridge_$3155",
										"typeString": "contract ITokenBridge"
									},
									"typeName": {
										"id": 814,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 813,
											"name": "ITokenBridge",
											"nameLocations": [
												"465:12:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3155,
											"src": "465:12:6"
										},
										"referencedDeclaration": 3155,
										"src": "465:12:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ITokenBridge_$3155",
											"typeString": "contract ITokenBridge"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "CCTPAndTokenBase.Transfer",
									"id": 818,
									"members": [
										{
											"id": 816,
											"name": "TOKEN_BRIDGE",
											"nameLocation": "530:12:6",
											"nodeType": "EnumValue",
											"src": "530:12:6"
										},
										{
											"id": 817,
											"name": "CCTP",
											"nameLocation": "553:4:6",
											"nodeType": "EnumValue",
											"src": "553:4:6"
										}
									],
									"name": "Transfer",
									"nameLocation": "510:8:6",
									"nodeType": "EnumDefinition",
									"src": "505:59:6"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "819:245:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 834,
															"name": "_wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "858:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 835,
															"name": "_wormhole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "889:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 836,
															"name": "_circleMessageTransmitter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "913:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 837,
															"name": "_circleTokenMessenger",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "953:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 838,
															"name": "_USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "989:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 833,
														"name": "_initCCTPBase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1757,
														"src": "830:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address,address,address)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "830:175:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "830:175:6"
											},
											{
												"expression": {
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 841,
														"name": "tokenBridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "1016:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokenBridge_$3155",
															"typeString": "contract ITokenBridge"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 843,
																"name": "_tokenBridge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "1043:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 842,
															"name": "ITokenBridge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3155,
															"src": "1030:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ITokenBridge_$3155_$",
																"typeString": "type(contract ITokenBridge)"
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1030:26:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokenBridge_$3155",
															"typeString": "contract ITokenBridge"
														}
													},
													"src": "1016:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITokenBridge_$3155",
														"typeString": "contract ITokenBridge"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "1016:40:6"
											}
										]
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initCCTP",
									"nameLocation": "581:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "_wormholeRelayer",
												"nameLocation": "609:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "601:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "_tokenBridge",
												"nameLocation": "644:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "636:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "_wormhole",
												"nameLocation": "675:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "667:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "_circleMessageTransmitter",
												"nameLocation": "703:25:6",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "695:33:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "_circleTokenMessenger",
												"nameLocation": "747:21:6",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "739:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "739:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "_USDC",
												"nameLocation": "787:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "779:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "590:209:6"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "819:0:6"
									},
									"scope": 849,
									"src": "572:492:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1682,
							"src": "411:656:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 850,
										"name": "CCTPAndTokenBase",
										"nameLocations": [
											"1111:16:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 849,
										"src": "1111:16:6"
									},
									"id": 851,
									"nodeType": "InheritanceSpecifier",
									"src": "1111:16:6"
								}
							],
							"canonicalName": "CCTPAndTokenSender",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1272,
							"linearizedBaseContracts": [
								1272,
								849,
								1758,
								798
							],
							"name": "CCTPAndTokenSender",
							"nameLocation": "1089:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 854,
									"mutability": "constant",
									"name": "CONSISTENCY_LEVEL_FINALIZED",
									"nameLocation": "1220:27:6",
									"nodeType": "VariableDeclaration",
									"scope": 1272,
									"src": "1196:56:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 852,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1196:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 853,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1250:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "internal"
								},
								{
									"global": false,
									"id": 856,
									"libraryName": {
										"id": 855,
										"name": "CCTPMessageLib",
										"nameLocations": [
											"1267:14:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1705,
										"src": "1267:14:6"
									},
									"nodeType": "UsingForDirective",
									"src": "1261:27:6"
								},
								{
									"constant": false,
									"functionSelector": "3a57cd63",
									"id": 860,
									"mutability": "mutable",
									"name": "chainIdToCCTPDomain",
									"nameLocation": "1329:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 1272,
									"src": "1296:52:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint16_$_t_uint32_$",
										"typeString": "mapping(uint16 => uint32)"
									},
									"typeName": {
										"id": 859,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 857,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "1304:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"nodeType": "Mapping",
										"src": "1296:25:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint16_$_t_uint32_$",
											"typeString": "mapping(uint16 => uint32)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 858,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "1314:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "2213:185:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 869,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2246:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2250:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2246:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 871,
																"name": "cctpConfigurationOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "2260:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2246:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616c6c6f77656420746f20736574204343545020446f6d61696e",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2297:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d1631ba72e816445bf0fa4abac33b00c0668922896e9b84defb141e7fcc6b48f",
																"typeString": "literal_string \"Not allowed to set CCTP Domain\""
															},
															"value": "Not allowed to set CCTP Domain"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d1631ba72e816445bf0fa4abac33b00c0668922896e9b84defb141e7fcc6b48f",
																"typeString": "literal_string \"Not allowed to set CCTP Domain\""
															}
														],
														"id": 868,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2224:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2224:116:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "2224:116:6"
											},
											{
												"expression": {
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 876,
															"name": "chainIdToCCTPDomain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "2351:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint16_$_t_uint32_$",
																"typeString": "mapping(uint16 => uint32)"
															}
														},
														"id": 878,
														"indexExpression": {
															"id": 877,
															"name": "chain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "2371:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2351:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 879,
														"name": "cctpDomain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "2380:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2351:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "2351:39:6"
											}
										]
									},
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "1357:787:6",
										"text": " Sets the CCTP Domain corresponding to chain 'chain' to be 'cctpDomain'\n So that transfers of USDC to chain 'chain' use the target CCTP domain 'cctpDomain'\n This action can only be performed by 'cctpConfigurationOwner', who is set to be the deployer\n Currently, cctp domains are:\n Ethereum: Wormhole chain id 2, cctp domain 0\n Avalanche: Wormhole chain id 6, cctp domain 1\n Optimism: Wormhole chain id 24, cctp domain 2\n Arbitrum: Wormhole chain id 23, cctp domain 3\n Base: Wormhole chain id 30, cctp domain 6\n These can be set via:\n setCCTPDomain(2, 0);\n setCCTPDomain(6, 1);\n setCCTPDomain(24, 2);\n setCCTPDomain(23, 3);\n setCCTPDomain(30, 6);"
									},
									"functionSelector": "c6a4fd1c",
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setCCTPDomain",
									"nameLocation": "2159:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "chain",
												"nameLocation": "2180:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2173:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 862,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2173:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "cctpDomain",
												"nameLocation": "2194:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2187:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 864,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2187:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2172:33:6"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2213:0:6"
									},
									"scope": 1272,
									"src": "2150:248:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "2474:52:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 890,
														"name": "chainIdToCCTPDomain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "2492:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint16_$_t_uint32_$",
															"typeString": "mapping(uint16 => uint32)"
														}
													},
													"id": 892,
													"indexExpression": {
														"id": 891,
														"name": "chain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "2512:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2492:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 889,
												"id": 893,
												"nodeType": "Return",
												"src": "2485:33:6"
											}
										]
									},
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCCTPDomain",
									"nameLocation": "2415:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "chain",
												"nameLocation": "2436:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "2429:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 884,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2429:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:14:6"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "2466:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 887,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2466:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2465:8:6"
									},
									"scope": 1272,
									"src": "2406:120:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "3118:568:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 914,
																	"name": "circleTokenMessenger",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1710,
																	"src": "3158:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ITokenMessenger_$2677",
																		"typeString": "contract ITokenMessenger"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ITokenMessenger_$2677",
																		"typeString": "contract ITokenMessenger"
																	}
																],
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3150:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 912,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3150:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3150:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "3181:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 909,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "3136:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 908,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2755,
																"src": "3129:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$2755_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3129:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2755",
																"typeString": "contract IERC20"
															}
														},
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3142:7:6",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2742,
														"src": "3129:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3129:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "3129:59:6"
											},
											{
												"assignments": [
													920
												],
												"declarations": [
													{
														"constant": false,
														"id": 920,
														"mutability": "mutable",
														"name": "targetAddressBytes32",
														"nameLocation": "3207:20:6",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "3199:28:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 919,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3199:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 924,
												"initialValue": {
													"arguments": [
														{
															"id": 922,
															"name": "targetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "3251:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 921,
														"name": "addressToBytes32CCTP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2573,
														"src": "3230:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address) pure returns (bytes32)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3230:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3199:66:6"
											},
											{
												"assignments": [
													926
												],
												"declarations": [
													{
														"constant": false,
														"id": 926,
														"mutability": "mutable",
														"name": "nonce",
														"nameLocation": "3283:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "3276:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 925,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "3276:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 937,
												"initialValue": {
													"arguments": [
														{
															"id": 929,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "3351:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 931,
																	"name": "targetChain",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "3386:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"id": 930,
																"name": "getCCTPDomain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "3372:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint16_$returns$_t_uint32_$",
																	"typeString": "function (uint16) view returns (uint32)"
																}
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3372:26:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 933,
															"name": "targetAddressBytes32",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "3413:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 934,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "3448:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "targetAddressBytes32",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "3467:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 927,
															"name": "circleTokenMessenger",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "3291:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ITokenMessenger_$2677",
																"typeString": "contract ITokenMessenger"
															}
														},
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3312:24:6",
														"memberName": "depositForBurnWithCaller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2676,
														"src": "3291:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint32_$_t_bytes32_$_t_address_$_t_bytes32_$returns$_t_uint64_$",
															"typeString": "function (uint256,uint32,bytes32,address,bytes32) external returns (uint64)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3291:207:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3276:222:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 939,
																"name": "CCTPMessageLib",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "3558:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_CCTPMessageLib_$1705_$",
																	"typeString": "type(library CCTPMessageLib)"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3573:13:6",
															"memberName": "CCTP_KEY_TYPE",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1694,
															"src": "3558:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 944,
																					"name": "wormhole",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 711,
																					"src": "3636:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IWormhole_$3485",
																						"typeString": "contract IWormhole"
																					}
																				},
																				"id": 945,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3645:7:6",
																				"memberName": "chainId",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3387,
																				"src": "3636:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
																					"typeString": "function () view external returns (uint16)"
																				}
																			},
																			"id": 946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3636:18:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		],
																		"id": 943,
																		"name": "getCCTPDomain",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 895,
																		"src": "3622:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint16_$returns$_t_uint32_$",
																			"typeString": "function (uint16) view returns (uint32)"
																		}
																	},
																	"id": 947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3622:33:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																{
																	"id": 948,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "3657:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	{
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																],
																"expression": {
																	"id": 941,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3605:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3609:12:6",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "3605:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3605:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 938,
														"name": "MessageKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3522,
														"src": "3529:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_MessageKey_$3522_storage_ptr_$",
															"typeString": "type(struct MessageKey storage pointer)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3529:149:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MessageKey_$3522_memory_ptr",
														"typeString": "struct MessageKey memory"
													}
												},
												"functionReturnParameters": 907,
												"id": 951,
												"nodeType": "Return",
												"src": "3509:169:6"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "2534:424:6",
										"text": " transferUSDC wraps common boilerplate for sending tokens to another chain using IWormholeRelayer\n - approves the Circle TokenMessenger contract to spend 'amount' of USDC\n - calls Circle's 'depositForBurnWithCaller'\n - returns key for inclusion in WormholeRelayer `additionalVaas` argument\n Note: this requires that only the targetAddress can redeem transfers."
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferUSDC",
									"nameLocation": "2975:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3006:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "2998:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "3030:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "3023:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 899,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3023:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "3060:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "3052:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2987:93:6"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "3099:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MessageKey_$3522_memory_ptr",
													"typeString": "struct MessageKey"
												},
												"typeName": {
													"id": 905,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 904,
														"name": "MessageKey",
														"nameLocations": [
															"3099:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3522,
														"src": "3099:10:6"
													},
													"referencedDeclaration": 3522,
													"src": "3099:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MessageKey_$3522_storage_ptr",
														"typeString": "struct MessageKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3098:19:6"
									},
									"scope": 1272,
									"src": "2966:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "4527:869:6",
										"statements": [
											{
												"assignments": [
													974
												],
												"declarations": [
													{
														"constant": false,
														"id": 974,
														"mutability": "mutable",
														"name": "messageKeys",
														"nameLocation": "4558:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1039,
														"src": "4538:31:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_MessageKey_$3522_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct MessageKey[]"
														},
														"typeName": {
															"baseType": {
																"id": 972,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 971,
																	"name": "MessageKey",
																	"nameLocations": [
																		"4538:10:6"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3522,
																	"src": "4538:10:6"
																},
																"referencedDeclaration": 3522,
																"src": "4538:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MessageKey_$3522_storage_ptr",
																	"typeString": "struct MessageKey"
																}
															},
															"id": 973,
															"nodeType": "ArrayTypeName",
															"src": "4538:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MessageKey_$3522_storage_$dyn_storage_ptr",
																"typeString": "struct MessageKey[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 981,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4589:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4572:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_MessageKey_$3522_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct MessageKey memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 976,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 975,
																	"name": "MessageKey",
																	"nameLocations": [
																		"4576:10:6"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3522,
																	"src": "4576:10:6"
																},
																"referencedDeclaration": 3522,
																"src": "4576:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MessageKey_$3522_storage_ptr",
																	"typeString": "struct MessageKey"
																}
															},
															"id": 977,
															"nodeType": "ArrayTypeName",
															"src": "4576:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MessageKey_$3522_storage_$dyn_storage_ptr",
																"typeString": "struct MessageKey[]"
															}
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4572:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MessageKey_$3522_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct MessageKey memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:53:6"
											},
											{
												"expression": {
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 982,
															"name": "messageKeys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 974,
															"src": "4602:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MessageKey_$3522_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct MessageKey memory[] memory"
															}
														},
														"id": 984,
														"indexExpression": {
															"hexValue": "30",
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4614:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4602:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MessageKey_$3522_memory_ptr",
															"typeString": "struct MessageKey memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 986,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "4632:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 987,
																"name": "targetChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "4640:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 988,
																"name": "targetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "4653:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 985,
															"name": "transferUSDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "4619:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint16_$_t_address_$returns$_t_struct$_MessageKey_$3522_memory_ptr_$",
																"typeString": "function (uint256,uint16,address) returns (struct MessageKey memory)"
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4619:48:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MessageKey_$3522_memory_ptr",
															"typeString": "struct MessageKey memory"
														}
													},
													"src": "4602:65:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MessageKey_$3522_memory_ptr",
														"typeString": "struct MessageKey memory"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "4602:65:6"
											},
											{
												"assignments": [
													993
												],
												"declarations": [
													{
														"constant": false,
														"id": 993,
														"mutability": "mutable",
														"name": "userPayload",
														"nameLocation": "4693:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1039,
														"src": "4680:24:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 992,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4680:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1001,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 996,
																"name": "Transfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "4718:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Transfer_$818_$",
																	"typeString": "type(enum CCTPAndTokenBase.Transfer)"
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4727:4:6",
															"memberName": "CCTP",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 817,
															"src": "4718:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Transfer_$818",
																"typeString": "enum CCTPAndTokenBase.Transfer"
															}
														},
														{
															"id": 998,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "4733:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 999,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "4741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_Transfer_$818",
																"typeString": "enum CCTPAndTokenBase.Transfer"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 994,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4707:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 995,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4711:6:6",
														"memberName": "encode",
														"nodeType": "MemberAccess",
														"src": "4707:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4707:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4680:69:6"
											},
											{
												"assignments": [
													1003
												],
												"declarations": [
													{
														"constant": false,
														"id": 1003,
														"mutability": "mutable",
														"name": "defaultDeliveryProvider",
														"nameLocation": "4768:23:6",
														"nodeType": "VariableDeclaration",
														"scope": 1039,
														"src": "4760:31:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1002,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4760:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1007,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1004,
															"name": "wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "4794:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWormholeRelayer_$3919",
																"typeString": "contract IWormholeRelayer"
															}
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4824:26:6",
														"memberName": "getDefaultDeliveryProvider",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3863,
														"src": "4794:56:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4794:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4760:92:6"
											},
											{
												"assignments": [
													1009,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1009,
														"mutability": "mutable",
														"name": "cost",
														"nameLocation": "4874:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1039,
														"src": "4866:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1008,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4866:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1016,
												"initialValue": {
													"arguments": [
														{
															"id": 1012,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "4936:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 1013,
															"name": "receiverValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "4962:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1014,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "4990:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1010,
															"name": "wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "4884:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWormholeRelayer_$3919",
																"typeString": "contract IWormholeRelayer"
															}
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:21:6",
														"memberName": "quoteEVMDeliveryPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3813,
														"src": "4884:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint16_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint16,uint256,uint256) view external returns (uint256,uint256)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4884:125:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4865:144:6"
											},
											{
												"expression": {
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1017,
														"name": "sequence",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 968,
														"src": "5022:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1022,
																"name": "targetChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "5086:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 1023,
																"name": "targetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "5112:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1024,
																"name": "userPayload",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "5140:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 1025,
																"name": "receiverValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "5166:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5194:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 1027,
																"name": "gasLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "5210:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1028,
																"name": "targetChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "5233:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5267:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5259:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1029,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5259:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5259:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1033,
																"name": "defaultDeliveryProvider",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1003,
																"src": "5286:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1034,
																"name": "messageKeys",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "5324:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_MessageKey_$3522_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct MessageKey memory[] memory"
																}
															},
															{
																"id": 1035,
																"name": "CONSISTENCY_LEVEL_FINALIZED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "5350:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_array$_t_struct$_MessageKey_$3522_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct MessageKey memory[] memory"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_array$_t_struct$_MessageKey_$3522_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct MessageKey memory[] memory"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"expression": {
																	"id": 1018,
																	"name": "wormholeRelayer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 708,
																	"src": "5033:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWormholeRelayer_$3919",
																		"typeString": "contract IWormholeRelayer"
																	}
																},
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5049:9:6",
																"memberName": "sendToEvm",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3705,
																"src": "5033:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint16_$_t_address_$_t_address_$_t_array$_t_struct$_MessageKey_$3522_memory_ptr_$dyn_memory_ptr_$_t_uint8_$returns$_t_uint64_$",
																	"typeString": "function (uint16,address,bytes memory,uint256,uint256,uint256,uint16,address,address,struct MessageKey memory[] memory,uint8) payable external returns (uint64)"
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"id": 1020,
																	"name": "cost",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1009,
																	"src": "5066:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "5033:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint16_$_t_address_$_t_address_$_t_array$_t_struct$_MessageKey_$3522_memory_ptr_$dyn_memory_ptr_$_t_uint8_$returns$_t_uint64_$value",
																"typeString": "function (uint16,address,bytes memory,uint256,uint256,uint256,uint16,address,address,struct MessageKey memory[] memory,uint8) payable external returns (uint64)"
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5033:355:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "5022:366:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "5022:366:6"
											}
										]
									},
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendUSDCWithPayloadToEvm",
									"nameLocation": "4284:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "4326:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "4319:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 954,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4319:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "4356:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "4348:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4348:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "4393:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "4380:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 958,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4380:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "4419:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "4411:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4411:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "4451:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "4443:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4478:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "4470:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4470:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4308:183:6"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "4517:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "4510:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 967,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4510:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4509:17:6"
									},
									"scope": 1272,
									"src": "4275:1121:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "6349:207:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1056,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "6413:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1057,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "6437:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1058,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "6462:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 1059,
															"name": "targetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "6492:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "",
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6530:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	},
																	"value": ""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6524:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1060,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "6524:5:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6524:9:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1055,
														"name": "transferTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1067,
															1127
														],
														"referencedDeclaration": 1127,
														"src": "6380:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$returns$_t_struct$_VaaKey_$3514_memory_ptr_$",
															"typeString": "function (address,uint256,uint16,address,bytes memory) returns (struct VaaKey memory)"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6380:168:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$3514_memory_ptr",
														"typeString": "struct VaaKey memory"
													}
												},
												"functionReturnParameters": 1054,
												"id": 1065,
												"nodeType": "Return",
												"src": "6360:188:6"
											}
										]
									},
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "5473:696:6",
										"text": " transferTokens wraps common boilerplate for sending tokens to another chain using IWormholeRelayer\n - approves tokenBridge to spend 'amount' of 'token'\n - emits token transfer VAA\n - returns VAA key for inclusion in WormholeRelayer `additionalVaas` argument\n Note: this function uses transferTokensWithPayload instead of transferTokens since the former requires that only the targetAddress\n       can redeem transfers. Otherwise it's possible for another address to redeem the transfer before the targetContract is invoked by\n       the offchain relayer and the target contract would have to be hardened against this."
									},
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "6184:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6217:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "6209:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6209:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6241:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "6233:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6233:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "6265:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "6258:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1046,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6258:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "6295:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "6287:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6287:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:117:6"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "6334:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VaaKey_$3514_memory_ptr",
													"typeString": "struct VaaKey"
												},
												"typeName": {
													"id": 1052,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1051,
														"name": "VaaKey",
														"nameLocations": [
															"6334:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3514,
														"src": "6334:6:6"
													},
													"referencedDeclaration": 3514,
													"src": "6334:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$3514_storage_ptr",
														"typeString": "struct VaaKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6333:15:6"
									},
									"scope": 1272,
									"src": "6175:381:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "7659:562:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1090,
																	"name": "tokenBridge",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 815,
																	"src": "7700:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ITokenBridge_$3155",
																		"typeString": "contract ITokenBridge"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ITokenBridge_$3155",
																		"typeString": "contract ITokenBridge"
																	}
																],
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7692:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1088,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7692:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7692:20:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1092,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "7714:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1085,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1070,
																	"src": "7677:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1084,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2755,
																"src": "7670:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$2755_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7670:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2755",
																"typeString": "contract IERC20"
															}
														},
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7684:7:6",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2742,
														"src": "7670:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7670:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "7670:51:6"
											},
											{
												"assignments": [
													1096
												],
												"declarations": [
													{
														"constant": false,
														"id": 1096,
														"mutability": "mutable",
														"name": "sequence",
														"nameLocation": "7739:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1126,
														"src": "7732:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 1095,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "7732:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1112,
												"initialValue": {
													"arguments": [
														{
															"id": 1103,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "7856:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "7876:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1105,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "7897:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"arguments": [
																{
																	"id": 1107,
																	"name": "targetAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1076,
																	"src": "7940:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1106,
																"name": "toWormholeFormat",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2528,
																"src": "7923:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
																	"typeString": "function (address) pure returns (bytes32)"
																}
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7923:31:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "30",
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7969:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1110,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "7985:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1097,
																"name": "tokenBridge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "7750:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ITokenBridge_$3155",
																	"typeString": "contract ITokenBridge"
																}
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7762:25:6",
															"memberName": "transferTokensWithPayload",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2916,
															"src": "7750:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint16_$_t_bytes32_$_t_uint32_$_t_bytes_memory_ptr_$returns$_t_uint64_$",
																"typeString": "function (address,uint256,uint16,bytes32,uint32,bytes memory) payable external returns (uint64)"
															}
														},
														"id": 1102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1099,
																		"name": "wormhole",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 711,
																		"src": "7809:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWormhole_$3485",
																			"typeString": "contract IWormhole"
																		}
																	},
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7818:10:6",
																	"memberName": "messageFee",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3407,
																	"src": "7809:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7809:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "7750:91:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint16_$_t_bytes32_$_t_uint32_$_t_bytes_memory_ptr_$returns$_t_uint64_$value",
															"typeString": "function (address,uint256,uint16,bytes32,uint32,bytes memory) payable external returns (uint64)"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7750:253:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7732:271:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1117,
																			"name": "tokenBridge",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 815,
																			"src": "8101:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ITokenBridge_$3155",
																				"typeString": "contract ITokenBridge"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ITokenBridge_$3155",
																				"typeString": "contract ITokenBridge"
																			}
																		],
																		"id": 1116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8093:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1115,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8093:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8093:20:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1114,
																"name": "toWormholeFormat",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2528,
																"src": "8076:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
																	"typeString": "function (address) pure returns (bytes32)"
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8076:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1120,
																	"name": "wormhole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "8142:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWormhole_$3485",
																		"typeString": "contract IWormhole"
																	}
																},
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8151:7:6",
																"memberName": "chainId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3387,
																"src": "8142:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
																	"typeString": "function () view external returns (uint16)"
																}
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8142:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 1123,
															"name": "sequence",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "8189:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1113,
														"name": "VaaKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3514,
														"src": "8034:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_VaaKey_$3514_storage_ptr_$",
															"typeString": "type(struct VaaKey storage pointer)"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"8060:14:6",
														"8133:7:6",
														"8179:8:6"
													],
													"names": [
														"emitterAddress",
														"chainId",
														"sequence"
													],
													"nodeType": "FunctionCall",
													"src": "8034:179:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$3514_memory_ptr",
														"typeString": "struct VaaKey memory"
													}
												},
												"functionReturnParameters": 1083,
												"id": 1125,
												"nodeType": "Return",
												"src": "8014:199:6"
											}
										]
									},
									"documentation": {
										"id": 1068,
										"nodeType": "StructuredDocumentation",
										"src": "6564:884:6",
										"text": " transferTokens wraps common boilerplate for sending tokens to another chain using IWormholeRelayer.\n A payload can be included in the transfer vaa. By including a payload here instead of the deliveryVaa,\n fewer trust assumptions are placed on the WormholeRelayer contract.\n - approves tokenBridge to spend 'amount' of 'token'\n - emits token transfer VAA\n - returns VAA key for inclusion in WormholeRelayer `additionalVaas` argument\n Note: this function uses transferTokensWithPayload instead of transferTokens since the former requires that only the targetAddress\n       can redeem transfers. Otherwise it's possible for another address to redeem the transfer before the targetContract is invoked by\n       the offchain relayer and the target contract would have to be hardened against this."
									},
									"id": 1127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "7463:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7496:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "7488:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7488:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7520:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "7512:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7512:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "7544:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "7537:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1073,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "7537:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "7574:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "7566:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7566:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "7611:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "7598:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1077,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7598:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7477:148:6"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "7644:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VaaKey_$3514_memory_ptr",
													"typeString": "struct VaaKey"
												},
												"typeName": {
													"id": 1081,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1080,
														"name": "VaaKey",
														"nameLocations": [
															"7644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3514,
														"src": "7644:6:6"
													},
													"referencedDeclaration": 3514,
													"src": "7644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$3514_storage_ptr",
														"typeString": "struct VaaKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7643:15:6"
									},
									"scope": 1272,
									"src": "7454:767:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "9039:594:6",
										"statements": [
											{
												"assignments": [
													1150
												],
												"declarations": [
													{
														"constant": false,
														"id": 1150,
														"mutability": "mutable",
														"name": "vaaKeys",
														"nameLocation": "9066:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1195,
														"src": "9050:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct VaaKey[]"
														},
														"typeName": {
															"baseType": {
																"id": 1148,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1147,
																	"name": "VaaKey",
																	"nameLocations": [
																		"9050:6:6"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3514,
																	"src": "9050:6:6"
																},
																"referencedDeclaration": 3514,
																"src": "9050:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaaKey_$3514_storage_ptr",
																	"typeString": "struct VaaKey"
																}
															},
															"id": 1149,
															"nodeType": "ArrayTypeName",
															"src": "9050:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_storage_$dyn_storage_ptr",
																"typeString": "struct VaaKey[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1157,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9089:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9076:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct VaaKey memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1152,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1151,
																	"name": "VaaKey",
																	"nameLocations": [
																		"9080:6:6"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3514,
																	"src": "9080:6:6"
																},
																"referencedDeclaration": 3514,
																"src": "9080:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaaKey_$3514_storage_ptr",
																	"typeString": "struct VaaKey"
																}
															},
															"id": 1153,
															"nodeType": "ArrayTypeName",
															"src": "9080:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_storage_$dyn_storage_ptr",
																"typeString": "struct VaaKey[]"
															}
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9076:15:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct VaaKey memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9050:41:6"
											},
											{
												"expression": {
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1158,
															"name": "vaaKeys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "9102:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct VaaKey memory[] memory"
															}
														},
														"id": 1160,
														"indexExpression": {
															"hexValue": "30",
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9110:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9102:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$3514_memory_ptr",
															"typeString": "struct VaaKey memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1162,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1139,
																"src": "9130:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1163,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1141,
																"src": "9137:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1164,
																"name": "targetChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1129,
																"src": "9145:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 1165,
																"name": "targetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "9158:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1161,
															"name": "transferTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																1067,
																1127
															],
															"referencedDeclaration": 1067,
															"src": "9115:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint16_$_t_address_$returns$_t_struct$_VaaKey_$3514_memory_ptr_$",
																"typeString": "function (address,uint256,uint16,address) returns (struct VaaKey memory)"
															}
														},
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9115:57:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$3514_memory_ptr",
															"typeString": "struct VaaKey memory"
														}
													},
													"src": "9102:70:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$3514_memory_ptr",
														"typeString": "struct VaaKey memory"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "9102:70:6"
											},
											{
												"assignments": [
													1170,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1170,
														"mutability": "mutable",
														"name": "cost",
														"nameLocation": "9194:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1195,
														"src": "9186:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1169,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9186:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1177,
												"initialValue": {
													"arguments": [
														{
															"id": 1173,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "9256:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 1174,
															"name": "receiverValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "9282:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1175,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "9310:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1171,
															"name": "wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "9204:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWormholeRelayer_$3919",
																"typeString": "contract IWormholeRelayer"
															}
														},
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9220:21:6",
														"memberName": "quoteEVMDeliveryPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3813,
														"src": "9204:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint16_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint16,uint256,uint256) view external returns (uint256,uint256)"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9204:125:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9185:144:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1182,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1129,
															"src": "9421:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 1183,
															"name": "targetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "9451:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1186,
																		"name": "Transfer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 818,
																		"src": "9494:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Transfer_$818_$",
																			"typeString": "type(enum CCTPAndTokenBase.Transfer)"
																		}
																	},
																	"id": 1187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "9503:12:6",
																	"memberName": "TOKEN_BRIDGE",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 816,
																	"src": "9494:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Transfer_$818",
																		"typeString": "enum CCTPAndTokenBase.Transfer"
																	}
																},
																{
																	"id": 1188,
																	"name": "payload",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "9517:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Transfer_$818",
																		"typeString": "enum CCTPAndTokenBase.Transfer"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1184,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9483:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9487:6:6",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "9483:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9483:42:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1190,
															"name": "receiverValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "9544:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1191,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "9576:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1192,
															"name": "vaaKeys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "9603:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct VaaKey memory[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct VaaKey memory[] memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct VaaKey memory[] memory"
																}
															],
															"expression": {
																"id": 1178,
																"name": "wormholeRelayer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 708,
																"src": "9360:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWormholeRelayer_$3919",
																	"typeString": "contract IWormholeRelayer"
																}
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9376:13:6",
															"memberName": "sendVaasToEvm",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3621,
															"src": "9360:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr_$returns$_t_uint64_$",
																"typeString": "function (uint16,address,bytes memory,uint256,uint256,struct VaaKey memory[] memory) payable external returns (uint64)"
															}
														},
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1180,
																"name": "cost",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "9397:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "9360:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr_$returns$_t_uint64_$value",
															"typeString": "function (uint16,address,bytes memory,uint256,uint256,struct VaaKey memory[] memory) payable external returns (uint64)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9360:265:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1145,
												"id": 1194,
												"nodeType": "Return",
												"src": "9340:285:6"
											}
										]
									},
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendTokenWithPayloadToEvm",
									"nameLocation": "8780:25:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "8823:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "8816:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1128,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8816:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "8853:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "8845:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8845:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "8890:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "8877:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1132,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8877:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "8916:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "8908:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8908:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "8948:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "8940:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8940:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "8967:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8967:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8999:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "8991:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8991:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8805:207:6"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "9031:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1143,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "9031:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9030:8:6"
									},
									"scope": 1272,
									"src": "8771:862:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "9970:656:6",
										"statements": [
											{
												"assignments": [
													1223
												],
												"declarations": [
													{
														"constant": false,
														"id": 1223,
														"mutability": "mutable",
														"name": "vaaKeys",
														"nameLocation": "9997:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1270,
														"src": "9981:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct VaaKey[]"
														},
														"typeName": {
															"baseType": {
																"id": 1221,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1220,
																	"name": "VaaKey",
																	"nameLocations": [
																		"9981:6:6"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3514,
																	"src": "9981:6:6"
																},
																"referencedDeclaration": 3514,
																"src": "9981:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaaKey_$3514_storage_ptr",
																	"typeString": "struct VaaKey"
																}
															},
															"id": 1222,
															"nodeType": "ArrayTypeName",
															"src": "9981:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_storage_$dyn_storage_ptr",
																"typeString": "struct VaaKey[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1230,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10020:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "10007:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct VaaKey memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1225,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1224,
																	"name": "VaaKey",
																	"nameLocations": [
																		"10011:6:6"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3514,
																	"src": "10011:6:6"
																},
																"referencedDeclaration": 3514,
																"src": "10011:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaaKey_$3514_storage_ptr",
																	"typeString": "struct VaaKey"
																}
															},
															"id": 1226,
															"nodeType": "ArrayTypeName",
															"src": "10011:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_storage_$dyn_storage_ptr",
																"typeString": "struct VaaKey[]"
															}
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10007:15:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct VaaKey memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9981:41:6"
											},
											{
												"expression": {
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1231,
															"name": "vaaKeys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "10033:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct VaaKey memory[] memory"
															}
														},
														"id": 1233,
														"indexExpression": {
															"hexValue": "30",
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10041:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10033:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$3514_memory_ptr",
															"typeString": "struct VaaKey memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1235,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "10061:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1236,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1210,
																"src": "10068:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1237,
																"name": "targetChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "10076:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 1238,
																"name": "targetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1200,
																"src": "10089:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1234,
															"name": "transferTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																1067,
																1127
															],
															"referencedDeclaration": 1067,
															"src": "10046:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint16_$_t_address_$returns$_t_struct$_VaaKey_$3514_memory_ptr_$",
																"typeString": "function (address,uint256,uint16,address) returns (struct VaaKey memory)"
															}
														},
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10046:57:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$3514_memory_ptr",
															"typeString": "struct VaaKey memory"
														}
													},
													"src": "10033:70:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$3514_memory_ptr",
														"typeString": "struct VaaKey memory"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "10033:70:6"
											},
											{
												"assignments": [
													1243,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1243,
														"mutability": "mutable",
														"name": "cost",
														"nameLocation": "10125:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1270,
														"src": "10117:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1242,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10117:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1250,
												"initialValue": {
													"arguments": [
														{
															"id": 1246,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "10187:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 1247,
															"name": "receiverValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "10213:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1248,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "10241:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1244,
															"name": "wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "10135:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWormholeRelayer_$3919",
																"typeString": "contract IWormholeRelayer"
															}
														},
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10151:21:6",
														"memberName": "quoteEVMDeliveryPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3813,
														"src": "10135:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint16_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint16,uint256,uint256) view external returns (uint256,uint256)"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10135:125:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10116:144:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1255,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "10352:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 1256,
															"name": "targetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "10382:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1259,
																		"name": "Transfer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 818,
																		"src": "10425:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Transfer_$818_$",
																			"typeString": "type(enum CCTPAndTokenBase.Transfer)"
																		}
																	},
																	"id": 1260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "10434:12:6",
																	"memberName": "TOKEN_BRIDGE",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 816,
																	"src": "10425:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Transfer_$818",
																		"typeString": "enum CCTPAndTokenBase.Transfer"
																	}
																},
																{
																	"id": 1261,
																	"name": "payload",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1202,
																	"src": "10448:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Transfer_$818",
																		"typeString": "enum CCTPAndTokenBase.Transfer"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1257,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "10414:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "10418:6:6",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "10414:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10414:42:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1263,
															"name": "receiverValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "10475:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1264,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "10507:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1265,
															"name": "vaaKeys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "10534:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct VaaKey memory[] memory"
															}
														},
														{
															"id": 1266,
															"name": "refundChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "10560:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 1267,
															"name": "refundAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "10590:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct VaaKey memory[] memory"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct VaaKey memory[] memory"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1251,
																"name": "wormholeRelayer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 708,
																"src": "10291:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWormholeRelayer_$3919",
																	"typeString": "contract IWormholeRelayer"
																}
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10307:13:6",
															"memberName": "sendVaasToEvm",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3645,
															"src": "10291:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr_$_t_uint16_$_t_address_$returns$_t_uint64_$",
																"typeString": "function (uint16,address,bytes memory,uint256,uint256,struct VaaKey memory[] memory,uint16,address) payable external returns (uint64)"
															}
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1253,
																"name": "cost",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "10328:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10291:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr_$_t_uint16_$_t_address_$returns$_t_uint64_$value",
															"typeString": "function (uint16,address,bytes memory,uint256,uint256,struct VaaKey memory[] memory,uint16,address) payable external returns (uint64)"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10291:327:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1218,
												"id": 1269,
												"nodeType": "Return",
												"src": "10271:347:6"
											}
										]
									},
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendTokenWithPayloadToEvm",
									"nameLocation": "9650:25:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "9693:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "9686:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1197,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9686:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "9723:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "9715:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "9760:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "9747:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1201,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9747:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "9786:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "9778:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9778:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "9818:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "9810:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9810:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9845:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "9837:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9837:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9869:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "9861:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9861:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "refundChain",
												"nameLocation": "9893:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "9886:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1211,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9886:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "refundAddress",
												"nameLocation": "9923:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "9915:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9915:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9675:268:6"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "9962:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "9962:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9961:8:6"
									},
									"scope": 1272,
									"src": "9641:985:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1682,
							"src": "1071:9558:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1273,
										"name": "CCTPAndTokenBase",
										"nameLocations": [
											"10675:16:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 849,
										"src": "10675:16:6"
									},
									"id": 1274,
									"nodeType": "InheritanceSpecifier",
									"src": "10675:16:6"
								}
							],
							"canonicalName": "CCTPAndTokenReceiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1681,
							"linearizedBaseContracts": [
								1681,
								849,
								1758,
								798
							],
							"name": "CCTPAndTokenReceiver",
							"nameLocation": "10651:20:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "10795:357:6",
										"statements": [
											{
												"assignments": [
													1282,
													1284
												],
												"declarations": [
													{
														"constant": false,
														"id": 1282,
														"mutability": "mutable",
														"name": "message",
														"nameLocation": "10820:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1326,
														"src": "10807:20:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1281,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10807:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1284,
														"mutability": "mutable",
														"name": "signature",
														"nameLocation": "10842:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1326,
														"src": "10829:22:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1283,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10829:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1294,
												"initialValue": {
													"arguments": [
														{
															"id": 1287,
															"name": "cctpMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1276,
															"src": "10880:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 1289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10907:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1288,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "10907:5:6",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 1291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10914:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1290,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "10914:5:6",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1292,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10906:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(bytes storage pointer),type(bytes storage pointer))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(bytes storage pointer),type(bytes storage pointer))"
															}
														],
														"expression": {
															"id": 1285,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "10855:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10859:6:6",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "10855:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10855:76:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bytes memory,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10806:125:6"
											},
											{
												"assignments": [
													1296
												],
												"declarations": [
													{
														"constant": false,
														"id": 1296,
														"mutability": "mutable",
														"name": "beforeBalance",
														"nameLocation": "10950:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1326,
														"src": "10942:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1295,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10942:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1306,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1303,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10997:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CCTPAndTokenReceiver_$1681",
																		"typeString": "contract CCTPAndTokenReceiver"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CCTPAndTokenReceiver_$1681",
																		"typeString": "contract CCTPAndTokenReceiver"
																	}
																],
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10989:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1301,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10989:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10989:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1298,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "10973:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1297,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2755,
																"src": "10966:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$2755_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10966:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2755",
																"typeString": "contract IERC20"
															}
														},
														"id": 1300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10979:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2712,
														"src": "10966:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10966:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10942:61:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1310,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "11054:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1311,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "11063:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1307,
															"name": "circleMessageTransmitter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1713,
															"src": "11014:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMessageTransmitter_$2602",
																"typeString": "contract IMessageTransmitter"
															}
														},
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11039:14:6",
														"memberName": "receiveMessage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2615,
														"src": "11014:39:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory,bytes memory) external returns (bool)"
														}
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11014:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1313,
												"nodeType": "ExpressionStatement",
												"src": "11014:59:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1320,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "11122:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CCTPAndTokenReceiver_$1681",
																			"typeString": "contract CCTPAndTokenReceiver"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CCTPAndTokenReceiver_$1681",
																			"typeString": "contract CCTPAndTokenReceiver"
																		}
																	],
																	"id": 1319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11114:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1318,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11114:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11114:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1315,
																		"name": "USDC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1715,
																		"src": "11098:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1314,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2755,
																	"src": "11091:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$2755_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11091:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$2755",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11104:9:6",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2712,
															"src": "11091:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11091:37:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1323,
														"name": "beforeBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "11131:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11091:53:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1280,
												"id": 1325,
												"nodeType": "Return",
												"src": "11084:60:6"
											}
										]
									},
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "redeemUSDC",
									"nameLocation": "10708:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "cctpMessage",
												"nameLocation": "10742:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "10729:24:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1275,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10729:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10718:42:6"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10787:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "10779:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10779:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10778:16:6"
									},
									"scope": 1681,
									"src": "10699:453:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "CCTPAndTokenReceiver.TokenReceived",
									"id": 1338,
									"members": [
										{
											"constant": false,
											"id": 1329,
											"mutability": "mutable",
											"name": "tokenHomeAddress",
											"nameLocation": "11200:16:6",
											"nodeType": "VariableDeclaration",
											"scope": 1338,
											"src": "11192:24:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1328,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "11192:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1331,
											"mutability": "mutable",
											"name": "tokenHomeChain",
											"nameLocation": "11234:14:6",
											"nodeType": "VariableDeclaration",
											"scope": 1338,
											"src": "11227:21:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1330,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "11227:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1333,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "11267:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 1338,
											"src": "11259:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1332,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11259:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1335,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "11397:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1338,
											"src": "11389:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1334,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11389:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1337,
											"mutability": "mutable",
											"name": "amountNormalized",
											"nameLocation": "11422:16:6",
											"nodeType": "VariableDeclaration",
											"scope": 1338,
											"src": "11414:24:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1336,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11414:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenReceived",
									"nameLocation": "11167:13:6",
									"nodeType": "StructDefinition",
									"scope": 1681,
									"src": "11160:337:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "11603:234:6",
										"statements": [
											{
												"assignments": [
													null,
													1346
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1346,
														"mutability": "mutable",
														"name": "queriedDecimals",
														"nameLocation": "11657:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 1368,
														"src": "11644:28:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1345,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "11644:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1357,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "646563696d616c732829",
																	"id": 1354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11747:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_313ce567add4d438edf58b94ff345d7d38c45b17dfc0f947988d7819dca364f9",
																		"typeString": "literal_string \"decimals()\""
																	},
																	"value": "decimals()"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_313ce567add4d438edf58b94ff345d7d38c45b17dfc0f947988d7819dca364f9",
																		"typeString": "literal_string \"decimals()\""
																	}
																],
																"expression": {
																	"id": 1352,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "11723:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "11727:19:6",
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "11723:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11723:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1349,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1340,
																	"src": "11684:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11676:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1347,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11676:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11676:21:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11698:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "11676:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11676:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11641:130:6"
											},
											{
												"expression": {
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1358,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1343,
														"src": "11782:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1361,
																"name": "queriedDecimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1346,
																"src": "11804:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"components": [
																	{
																		"id": 1363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11822:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 1362,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "11822:5:6",
																			"typeDescriptions": {}
																		}
																	}
																],
																"id": 1364,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11821:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																}
															],
															"expression": {
																"id": 1359,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "11793:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "11797:6:6",
															"memberName": "decode",
															"nodeType": "MemberAccess",
															"src": "11793:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11793:36:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "11782:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "11782:47:6"
											}
										]
									},
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDecimals",
									"nameLocation": "11514:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "11544:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "11536:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11536:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11525:38:6"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "11593:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "11587:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1342,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11587:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11586:16:6"
									},
									"scope": 1681,
									"src": "11505:332:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "12011:209:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1378,
															"name": "tokenHomeChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "12042:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1379,
																	"name": "wormhole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "12060:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWormhole_$3485",
																		"typeString": "contract IWormhole"
																	}
																},
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12069:7:6",
																"memberName": "chainId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3387,
																"src": "12060:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
																	"typeString": "function () view external returns (uint16)"
																}
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12060:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "12042:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 1388,
																"name": "tokenHomeChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "12179:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 1389,
																"name": "tokenHomeAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "12195:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1386,
																"name": "tokenBridge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "12154:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ITokenBridge_$3155",
																	"typeString": "contract ITokenBridge"
																}
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12166:12:6",
															"memberName": "wrappedAsset",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3070,
															"src": "12154:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint16_$_t_bytes32_$returns$_t_address_$",
																"typeString": "function (uint16,bytes32) view external returns (address)"
															}
														},
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12154:58:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "12042:170:6",
													"trueExpression": {
														"arguments": [
															{
																"id": 1384,
																"name": "tokenHomeAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "12117:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1383,
															"name": "fromWormholeFormat",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2561,
															"src": "12098:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_address_$",
																"typeString": "function (bytes32) pure returns (address)"
															}
														},
														"id": 1385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12098:36:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1377,
												"id": 1392,
												"nodeType": "Return",
												"src": "12022:190:6"
											}
										]
									},
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenAddressOnThisChain",
									"nameLocation": "11854:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "tokenHomeChain",
												"nameLocation": "11898:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "11891:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1370,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "11891:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "tokenHomeAddress",
												"nameLocation": "11931:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "11923:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11923:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11880:74:6"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "tokenAddressOnThisChain",
												"nameLocation": "11986:23:6",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "11978:31:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11978:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11977:33:6"
									},
									"scope": 1681,
									"src": "11845:375:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1649,
										"nodeType": "Block",
										"src": "12452:3819:6",
										"statements": [
											{
												"assignments": [
													1410
												],
												"declarations": [
													{
														"constant": false,
														"id": 1410,
														"mutability": "mutable",
														"name": "transferType",
														"nameLocation": "12472:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1649,
														"src": "12463:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Transfer_$818",
															"typeString": "enum CCTPAndTokenBase.Transfer"
														},
														"typeName": {
															"id": 1409,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1408,
																"name": "Transfer",
																"nameLocations": [
																	"12463:8:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 818,
																"src": "12463:8:6"
															},
															"referencedDeclaration": 818,
															"src": "12463:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Transfer_$818",
																"typeString": "enum CCTPAndTokenBase.Transfer"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1417,
												"initialValue": {
													"arguments": [
														{
															"id": 1413,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "12498:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 1414,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "12508:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Transfer_$818_$",
																		"typeString": "type(enum CCTPAndTokenBase.Transfer)"
																	}
																}
															],
															"id": 1415,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "12507:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Transfer_$818_$",
																"typeString": "type(enum CCTPAndTokenBase.Transfer)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_type$_t_enum$_Transfer_$818_$",
																"typeString": "type(enum CCTPAndTokenBase.Transfer)"
															}
														],
														"expression": {
															"id": 1411,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "12487:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12491:6:6",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "12487:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12487:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Transfer_$818",
														"typeString": "enum CCTPAndTokenBase.Transfer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12463:55:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Transfer_$818",
														"typeString": "enum CCTPAndTokenBase.Transfer"
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1418,
														"name": "transferType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1410,
														"src": "12533:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Transfer_$818",
															"typeString": "enum CCTPAndTokenBase.Transfer"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1419,
															"name": "Transfer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "12549:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Transfer_$818_$",
																"typeString": "type(enum CCTPAndTokenBase.Transfer)"
															}
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12558:12:6",
														"memberName": "TOKEN_BRIDGE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 816,
														"src": "12549:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Transfer_$818",
															"typeString": "enum CCTPAndTokenBase.Transfer"
														}
													},
													"src": "12533:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_Transfer_$818",
															"typeString": "enum CCTPAndTokenBase.Transfer"
														},
														"id": 1585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1582,
															"name": "transferType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "14797:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Transfer_$818",
																"typeString": "enum CCTPAndTokenBase.Transfer"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1583,
																"name": "Transfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 818,
																"src": "14813:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Transfer_$818_$",
																	"typeString": "type(enum CCTPAndTokenBase.Transfer)"
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "14822:4:6",
															"memberName": "CCTP",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 817,
															"src": "14813:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Transfer_$818",
																"typeString": "enum CCTPAndTokenBase.Transfer"
															}
														},
														"src": "14797:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1646,
														"nodeType": "Block",
														"src": "16206:58:6",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "496e76616c6964207472616e736665722074797065",
																			"id": 1643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16228:23:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_ebb9bf36d3adcafe771c5c8ee6431ea47a39833a16d4d42adfad87feb35493d2",
																				"typeString": "literal_string \"Invalid transfer type\""
																			},
																			"value": "Invalid transfer type"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_ebb9bf36d3adcafe771c5c8ee6431ea47a39833a16d4d42adfad87feb35493d2",
																				"typeString": "literal_string \"Invalid transfer type\""
																			}
																		],
																		"id": 1642,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "16221:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 1644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16221:31:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1645,
																"nodeType": "ExpressionStatement",
																"src": "16221:31:6"
															}
														]
													},
													"id": 1647,
													"nodeType": "IfStatement",
													"src": "14793:1471:6",
													"trueBody": {
														"id": 1641,
														"nodeType": "Block",
														"src": "14828:1372:6",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1587,
																					"name": "additionalMessages",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1399,
																					"src": "15231:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																						"typeString": "bytes memory[] memory"
																					}
																				},
																				"id": 1588,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "15250:6:6",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "15231:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15260:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "15231:30:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "434354503a204174206d6f7374206f6e65204d65737361676520697320737570706f72746564",
																			"id": 1591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15280:40:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_95c2a5457827ff1d830352d4d883397dc3debe8649a9022b6a18da70b36679cb",
																				"typeString": "literal_string \"CCTP: At most one Message is supported\""
																			},
																			"value": "CCTP: At most one Message is supported"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_95c2a5457827ff1d830352d4d883397dc3debe8649a9022b6a18da70b36679cb",
																				"typeString": "literal_string \"CCTP: At most one Message is supported\""
																			}
																		],
																		"id": 1586,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "15205:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15205:130:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1593,
																"nodeType": "ExpressionStatement",
																"src": "15205:130:6"
															},
															{
																"assignments": [
																	1595
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1595,
																		"mutability": "mutable",
																		"name": "amountUSDCReceived",
																		"nameLocation": "15360:18:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 1641,
																		"src": "15352:26:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1594,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "15352:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1596,
																"nodeType": "VariableDeclarationStatement",
																"src": "15352:26:6"
															},
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1597,
																			"name": "additionalMessages",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1399,
																			"src": "15397:18:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																				"typeString": "bytes memory[] memory"
																			}
																		},
																		"id": 1598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15416:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "15397:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15426:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "15397:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1610,
																"nodeType": "IfStatement",
																"src": "15393:125:6",
																"trueBody": {
																	"id": 1609,
																	"nodeType": "Block",
																	"src": "15429:89:6",
																	"statements": [
																		{
																			"expression": {
																				"id": 1607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1601,
																					"name": "amountUSDCReceived",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1595,
																					"src": "15448:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"baseExpression": {
																								"id": 1603,
																								"name": "additionalMessages",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1399,
																								"src": "15480:18:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																									"typeString": "bytes memory[] memory"
																								}
																							},
																							"id": 1605,
																							"indexExpression": {
																								"hexValue": "30",
																								"id": 1604,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "15499:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								},
																								"value": "0"
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "15480:21:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						],
																						"id": 1602,
																						"name": "redeemUSDC",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1327,
																						"src": "15469:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_uint256_$",
																							"typeString": "function (bytes memory) returns (uint256)"
																						}
																					},
																					"id": 1606,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15469:33:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15448:54:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1608,
																			"nodeType": "ExpressionStatement",
																			"src": "15448:54:6"
																		}
																	]
																}
															},
															{
																"assignments": [
																	null,
																	1612,
																	1614
																],
																"declarations": [
																	null,
																	{
																		"constant": false,
																		"id": 1612,
																		"mutability": "mutable",
																		"name": "amount",
																		"nameLocation": "15545:6:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 1641,
																		"src": "15537:14:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1611,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "15537:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	},
																	{
																		"constant": false,
																		"id": 1614,
																		"mutability": "mutable",
																		"name": "userPayload",
																		"nameLocation": "15566:11:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 1641,
																		"src": "15553:24:6",
																		"stateVariable": false,
																		"storageLocation": "memory",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes"
																		},
																		"typeName": {
																			"id": 1613,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "15553:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1625,
																"initialValue": {
																	"arguments": [
																		{
																			"id": 1617,
																			"name": "payload",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1396,
																			"src": "15610:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		{
																			"components": [
																				{
																					"id": 1618,
																					"name": "Transfer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 818,
																					"src": "15637:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_Transfer_$818_$",
																						"typeString": "type(enum CCTPAndTokenBase.Transfer)"
																					}
																				},
																				{
																					"id": 1620,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "15647:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1619,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "15647:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				{
																					"id": 1622,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "15656:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 1621,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "15656:5:6",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"id": 1623,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "15636:26:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_type$_t_enum$_Transfer_$818_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
																				"typeString": "tuple(type(enum CCTPAndTokenBase.Transfer),type(uint256),type(bytes storage pointer))"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			},
																			{
																				"typeIdentifier": "t_tuple$_t_type$_t_enum$_Transfer_$818_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
																				"typeString": "tuple(type(enum CCTPAndTokenBase.Transfer),type(uint256),type(bytes storage pointer))"
																			}
																		],
																		"expression": {
																			"id": 1615,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "15581:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "15585:6:6",
																		"memberName": "decode",
																		"nodeType": "MemberAccess",
																		"src": "15581:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15581:96:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_enum$_Transfer_$818_$_t_uint256_$_t_bytes_memory_ptr_$",
																		"typeString": "tuple(enum CCTPAndTokenBase.Transfer,uint256,bytes memory)"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "15534:143:6"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1627,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1612,
																				"src": "15921:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1628,
																				"name": "amountUSDCReceived",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1595,
																				"src": "15931:18:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15921:28:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "57726f6e6720616d6f756e74207265636569766564",
																			"id": 1630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15951:23:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_6781022867e86356be9e3ec78a96895f20619f3a7ac0506f4a950d1c3599a266",
																				"typeString": "literal_string \"Wrong amount received\""
																			},
																			"value": "Wrong amount received"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_6781022867e86356be9e3ec78a96895f20619f3a7ac0506f4a950d1c3599a266",
																				"typeString": "literal_string \"Wrong amount received\""
																			}
																		],
																		"id": 1626,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "15913:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15913:62:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1632,
																"nodeType": "ExpressionStatement",
																"src": "15913:62:6"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1634,
																			"name": "userPayload",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1614,
																			"src": "16032:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		{
																			"id": 1635,
																			"name": "amountUSDCReceived",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1595,
																			"src": "16062:18:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1636,
																			"name": "sourceAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1401,
																			"src": "16099:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 1637,
																			"name": "sourceChain",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1403,
																			"src": "16131:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		{
																			"id": 1638,
																			"name": "deliveryHash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1405,
																			"src": "16161:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1633,
																		"name": "receivePayloadAndUSDC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1664,
																		"src": "15992:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes32_$_t_uint16_$_t_bytes32_$returns$__$",
																			"typeString": "function (bytes memory,uint256,bytes32,uint16,bytes32)"
																		}
																	},
																	"id": 1639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15992:196:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1640,
																"nodeType": "ExpressionStatement",
																"src": "15992:196:6"
															}
														]
													}
												},
												"id": 1648,
												"nodeType": "IfStatement",
												"src": "12529:3735:6",
												"trueBody": {
													"id": 1581,
													"nodeType": "Block",
													"src": "12572:2215:6",
													"statements": [
														{
															"assignments": [
																1426
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1426,
																	"mutability": "mutable",
																	"name": "receivedTokens",
																	"nameLocation": "12610:14:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1581,
																	"src": "12587:37:6",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_TokenReceived_$1338_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct CCTPAndTokenReceiver.TokenReceived[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1424,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1423,
																				"name": "TokenReceived",
																				"nameLocations": [
																					"12587:13:6"
																				],
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 1338,
																				"src": "12587:13:6"
																			},
																			"referencedDeclaration": 1338,
																			"src": "12587:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenReceived_$1338_storage_ptr",
																				"typeString": "struct CCTPAndTokenReceiver.TokenReceived"
																			}
																		},
																		"id": 1425,
																		"nodeType": "ArrayTypeName",
																		"src": "12587:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_TokenReceived_$1338_storage_$dyn_storage_ptr",
																			"typeString": "struct CCTPAndTokenReceiver.TokenReceived[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1434,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1431,
																			"name": "additionalMessages",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1399,
																			"src": "12665:18:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																				"typeString": "bytes memory[] memory"
																			}
																		},
																		"id": 1432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12684:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "12665:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "12627:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TokenReceived_$1338_memory_ptr_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (struct CCTPAndTokenReceiver.TokenReceived memory[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1428,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1427,
																				"name": "TokenReceived",
																				"nameLocations": [
																					"12631:13:6"
																				],
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 1338,
																				"src": "12631:13:6"
																			},
																			"referencedDeclaration": 1338,
																			"src": "12631:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenReceived_$1338_storage_ptr",
																				"typeString": "struct CCTPAndTokenReceiver.TokenReceived"
																			}
																		},
																		"id": 1429,
																		"nodeType": "ArrayTypeName",
																		"src": "12631:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_TokenReceived_$1338_storage_$dyn_storage_ptr",
																			"typeString": "struct CCTPAndTokenReceiver.TokenReceived[]"
																		}
																	}
																},
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12627:78:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_TokenReceived_$1338_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct CCTPAndTokenReceiver.TokenReceived memory[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12587:118:6"
														},
														{
															"body": {
																"id": 1560,
																"nodeType": "Block",
																"src": "12778:1609:6",
																"statements": [
																	{
																		"assignments": [
																			1450
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1450,
																				"mutability": "mutable",
																				"name": "parsed",
																				"nameLocation": "12817:6:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1560,
																				"src": "12797:26:6",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_VM_$3211_memory_ptr",
																					"typeString": "struct IWormhole.VM"
																				},
																				"typeName": {
																					"id": 1449,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1448,
																						"name": "IWormhole.VM",
																						"nameLocations": [
																							"12797:9:6",
																							"12807:2:6"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 3211,
																						"src": "12797:12:6"
																					},
																					"referencedDeclaration": 3211,
																					"src": "12797:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_VM_$3211_storage_ptr",
																						"typeString": "struct IWormhole.VM"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1457,
																		"initialValue": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 1453,
																						"name": "additionalMessages",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1399,
																						"src": "12865:18:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																							"typeString": "bytes memory[] memory"
																						}
																					},
																					"id": 1455,
																					"indexExpression": {
																						"id": 1454,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1436,
																						"src": "12884:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "12865:21:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"expression": {
																					"id": 1451,
																					"name": "wormhole",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 711,
																					"src": "12826:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IWormhole_$3485",
																						"typeString": "contract IWormhole"
																					}
																				},
																				"id": 1452,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "12835:7:6",
																				"memberName": "parseVM",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3343,
																				"src": "12826:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_struct$_VM_$3211_memory_ptr_$",
																					"typeString": "function (bytes memory) pure external returns (struct IWormhole.VM memory)"
																				}
																			},
																			"id": 1456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12826:79:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_VM_$3211_memory_ptr",
																				"typeString": "struct IWormhole.VM memory"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12797:108:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					"id": 1466,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1459,
																							"name": "parsed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1450,
																							"src": "12954:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_VM_$3211_memory_ptr",
																								"typeString": "struct IWormhole.VM memory"
																							}
																						},
																						"id": 1460,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "12961:14:6",
																						"memberName": "emitterAddress",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3196,
																						"src": "12954:21:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 1463,
																									"name": "parsed",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1450,
																									"src": "13032:6:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_VM_$3211_memory_ptr",
																										"typeString": "struct IWormhole.VM memory"
																									}
																								},
																								"id": 1464,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "13039:14:6",
																								"memberName": "emitterChainId",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 3194,
																								"src": "13032:21:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint16",
																									"typeString": "uint16"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint16",
																									"typeString": "uint16"
																								}
																							],
																							"expression": {
																								"id": 1461,
																								"name": "tokenBridge",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 815,
																								"src": "13004:11:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_ITokenBridge_$3155",
																									"typeString": "contract ITokenBridge"
																								}
																							},
																							"id": 1462,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "13016:15:6",
																							"memberName": "bridgeContracts",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3077,
																							"src": "13004:27:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_view$_t_uint16_$returns$_t_bytes32_$",
																								"typeString": "function (uint16) view external returns (bytes32)"
																							}
																						},
																						"id": 1465,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "13004:50:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "12954:100:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "4e6f74206120546f6b656e2042726964676520564141",
																					"id": 1467,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13077:24:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_97f7701d47a07e774ac5a8a9759768a55db9a0927dcdf2b109ecb87275183f9e",
																						"typeString": "literal_string \"Not a Token Bridge VAA\""
																					},
																					"value": "Not a Token Bridge VAA"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_97f7701d47a07e774ac5a8a9759768a55db9a0927dcdf2b109ecb87275183f9e",
																						"typeString": "literal_string \"Not a Token Bridge VAA\""
																					}
																				],
																				"id": 1458,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "12924:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12924:196:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1469,
																		"nodeType": "ExpressionStatement",
																		"src": "12924:196:6"
																	},
																	{
																		"assignments": [
																			1474
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1474,
																				"mutability": "mutable",
																				"name": "transfer",
																				"nameLocation": "13179:8:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1560,
																				"src": "13139:48:6",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TransferWithPayload_$2791_memory_ptr",
																					"typeString": "struct ITokenBridge.TransferWithPayload"
																				},
																				"typeName": {
																					"id": 1473,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1472,
																						"name": "ITokenBridge.TransferWithPayload",
																						"nameLocations": [
																							"13139:12:6",
																							"13152:19:6"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 2791,
																						"src": "13139:32:6"
																					},
																					"referencedDeclaration": 2791,
																					"src": "13139:32:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TransferWithPayload_$2791_storage_ptr",
																						"typeString": "struct ITokenBridge.TransferWithPayload"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1480,
																		"initialValue": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1477,
																						"name": "parsed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1450,
																						"src": "13249:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_VM_$3211_memory_ptr",
																							"typeString": "struct IWormhole.VM memory"
																						}
																					},
																					"id": 1478,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "13256:7:6",
																					"memberName": "payload",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3202,
																					"src": "13249:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"expression": {
																					"id": 1475,
																					"name": "tokenBridge",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 815,
																					"src": "13190:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ITokenBridge_$3155",
																						"typeString": "contract ITokenBridge"
																					}
																				},
																				"id": 1476,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13224:24:6",
																				"memberName": "parseTransferWithPayload",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3009,
																				"src": "13190:58:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_struct$_TransferWithPayload_$2791_memory_ptr_$",
																					"typeString": "function (bytes memory) pure external returns (struct ITokenBridge.TransferWithPayload memory)"
																				}
																			},
																			"id": 1479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13190:74:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferWithPayload_$2791_memory_ptr",
																				"typeString": "struct ITokenBridge.TransferWithPayload memory"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13139:125:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 1497,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 1490,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1482,
																								"name": "transfer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1474,
																								"src": "13313:8:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TransferWithPayload_$2791_memory_ptr",
																									"typeString": "struct ITokenBridge.TransferWithPayload memory"
																								}
																							},
																							"id": 1483,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "13322:2:6",
																							"memberName": "to",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2784,
																							"src": "13313:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"id": 1487,
																											"name": "this",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967268,
																											"src": "13353:4:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_CCTPAndTokenReceiver_$1681",
																												"typeString": "contract CCTPAndTokenReceiver"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_contract$_CCTPAndTokenReceiver_$1681",
																												"typeString": "contract CCTPAndTokenReceiver"
																											}
																										],
																										"id": 1486,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "13345:7:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_address_$",
																											"typeString": "type(address)"
																										},
																										"typeName": {
																											"id": 1485,
																											"name": "address",
																											"nodeType": "ElementaryTypeName",
																											"src": "13345:7:6",
																											"typeDescriptions": {}
																										}
																									},
																									"id": 1488,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "13345:13:6",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 1484,
																								"name": "toWormholeFormat",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2528,
																								"src": "13328:16:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
																									"typeString": "function (address) pure returns (bytes32)"
																								}
																							},
																							"id": 1489,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "13328:31:6",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"src": "13313:46:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&&",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						},
																						"id": 1496,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1491,
																								"name": "transfer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1474,
																								"src": "13388:8:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TransferWithPayload_$2791_memory_ptr",
																									"typeString": "struct ITokenBridge.TransferWithPayload memory"
																								}
																							},
																							"id": 1492,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "13397:7:6",
																							"memberName": "toChain",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2786,
																							"src": "13388:16:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint16",
																								"typeString": "uint16"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"expression": {
																									"id": 1493,
																									"name": "wormhole",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 711,
																									"src": "13408:8:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_IWormhole_$3485",
																										"typeString": "contract IWormhole"
																									}
																								},
																								"id": 1494,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "13417:7:6",
																								"memberName": "chainId",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 3387,
																								"src": "13408:16:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
																									"typeString": "function () view external returns (uint16)"
																								}
																							},
																							"id": 1495,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "13408:18:6",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint16",
																								"typeString": "uint16"
																							}
																						},
																						"src": "13388:38:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "13313:113:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "546f6b656e20776173206e6f742073656e7420746f20746869732061646472657373",
																					"id": 1498,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13449:36:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_b88badcf55119d90f630b7846c67cf9afe587a0e49b80236232c807bbbb764b2",
																						"typeString": "literal_string \"Token was not sent to this address\""
																					},
																					"value": "Token was not sent to this address"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_b88badcf55119d90f630b7846c67cf9afe587a0e49b80236232c807bbbb764b2",
																						"typeString": "literal_string \"Token was not sent to this address\""
																					}
																				],
																				"id": 1481,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "13283:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13283:221:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1500,
																		"nodeType": "ExpressionStatement",
																		"src": "13283:221:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 1504,
																						"name": "additionalMessages",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1399,
																						"src": "13565:18:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																							"typeString": "bytes memory[] memory"
																						}
																					},
																					"id": 1506,
																					"indexExpression": {
																						"id": 1505,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1436,
																						"src": "13584:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "13565:21:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"expression": {
																					"id": 1501,
																					"name": "tokenBridge",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 815,
																					"src": "13525:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ITokenBridge_$3155",
																						"typeString": "contract ITokenBridge"
																					}
																				},
																				"id": 1503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13537:27:6",
																				"memberName": "completeTransferWithPayload",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2937,
																				"src": "13525:39:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function (bytes memory) external returns (bytes memory)"
																				}
																			},
																			"id": 1507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13525:62:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1508,
																		"nodeType": "ExpressionStatement",
																		"src": "13525:62:6"
																	},
																	{
																		"assignments": [
																			1510
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1510,
																				"mutability": "mutable",
																				"name": "thisChainTokenAddress",
																				"nameLocation": "13616:21:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1560,
																				"src": "13608:29:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"typeName": {
																					"id": 1509,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "13608:7:6",
																					"stateMutability": "nonpayable",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1517,
																		"initialValue": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1512,
																						"name": "transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1474,
																						"src": "13689:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TransferWithPayload_$2791_memory_ptr",
																							"typeString": "struct ITokenBridge.TransferWithPayload memory"
																						}
																					},
																					"id": 1513,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "13698:10:6",
																					"memberName": "tokenChain",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2782,
																					"src": "13689:19:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				},
																				{
																					"expression": {
																						"id": 1514,
																						"name": "transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1474,
																						"src": "13731:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TransferWithPayload_$2791_memory_ptr",
																							"typeString": "struct ITokenBridge.TransferWithPayload memory"
																						}
																					},
																					"id": 1515,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "13740:12:6",
																					"memberName": "tokenAddress",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2780,
																					"src": "13731:21:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1511,
																				"name": "getTokenAddressOnThisChain",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1394,
																				"src": "13640:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint16_$_t_bytes32_$returns$_t_address_$",
																					"typeString": "function (uint16,bytes32) view returns (address)"
																				}
																			},
																			"id": 1516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13640:131:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13608:163:6"
																	},
																	{
																		"assignments": [
																			1519
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1519,
																				"mutability": "mutable",
																				"name": "decimals",
																				"nameLocation": "13796:8:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1560,
																				"src": "13790:14:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"typeName": {
																					"id": 1518,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "13790:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1523,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1521,
																					"name": "thisChainTokenAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1510,
																					"src": "13819:21:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1520,
																				"name": "getDecimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1369,
																				"src": "13807:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint8_$",
																					"typeString": "function (address) view returns (uint8)"
																				}
																			},
																			"id": 1522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13807:34:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13790:51:6"
																	},
																	{
																		"assignments": [
																			1525
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1525,
																				"mutability": "mutable",
																				"name": "denormalizedAmount",
																				"nameLocation": "13868:18:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1560,
																				"src": "13860:26:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1524,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13860:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1528,
																		"initialValue": {
																			"expression": {
																				"id": 1526,
																				"name": "transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1474,
																				"src": "13889:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TransferWithPayload_$2791_memory_ptr",
																					"typeString": "struct ITokenBridge.TransferWithPayload memory"
																				}
																			},
																			"id": 1527,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "13898:6:6",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2778,
																			"src": "13889:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13860:44:6"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1529,
																				"name": "decimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1519,
																				"src": "13927:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1530,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13938:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "13927:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1544,
																		"nodeType": "IfStatement",
																		"src": "13923:90:6",
																		"trueBody": {
																			"expression": {
																				"id": 1542,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1532,
																					"name": "denormalizedAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1525,
																					"src": "13962:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "*=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1541,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"hexValue": "3130",
																								"id": 1535,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "13992:2:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								}
																							],
																							"id": 1534,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "13984:7:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 1533,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "13984:7:6",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1536,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "13984:11:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 1539,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1537,
																									"name": "decimals",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1519,
																									"src": "14000:8:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 1538,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14011:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "14000:12:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"id": 1540,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "13999:14:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "13984:29:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13962:51:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1543,
																			"nodeType": "ExpressionStatement",
																			"src": "13962:51:6"
																		}
																	},
																	{
																		"expression": {
																			"id": 1558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1545,
																					"name": "receivedTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1426,
																					"src": "14034:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_TokenReceived_$1338_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct CCTPAndTokenReceiver.TokenReceived memory[] memory"
																					}
																				},
																				"id": 1547,
																				"indexExpression": {
																					"id": 1546,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1436,
																					"src": "14049:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "14034:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenReceived_$1338_memory_ptr",
																					"typeString": "struct CCTPAndTokenReceiver.TokenReceived memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1549,
																							"name": "transfer",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1474,
																							"src": "14109:8:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TransferWithPayload_$2791_memory_ptr",
																								"typeString": "struct ITokenBridge.TransferWithPayload memory"
																							}
																						},
																						"id": 1550,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14118:12:6",
																						"memberName": "tokenAddress",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2780,
																						"src": "14109:21:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"expression": {
																							"id": 1551,
																							"name": "transfer",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1474,
																							"src": "14169:8:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TransferWithPayload_$2791_memory_ptr",
																								"typeString": "struct ITokenBridge.TransferWithPayload memory"
																							}
																						},
																						"id": 1552,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14178:10:6",
																						"memberName": "tokenChain",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2782,
																						"src": "14169:19:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					},
																					{
																						"id": 1553,
																						"name": "thisChainTokenAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1510,
																						"src": "14225:21:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 1554,
																						"name": "denormalizedAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1525,
																						"src": "14277:18:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 1555,
																							"name": "transfer",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1474,
																							"src": "14336:8:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TransferWithPayload_$2791_memory_ptr",
																								"typeString": "struct ITokenBridge.TransferWithPayload memory"
																							}
																						},
																						"id": 1556,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14345:6:6",
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2778,
																						"src": "14336:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						{
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1548,
																					"name": "TokenReceived",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1338,
																					"src": "14054:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_struct$_TokenReceived_$1338_storage_ptr_$",
																						"typeString": "type(struct CCTPAndTokenReceiver.TokenReceived storage pointer)"
																					}
																				},
																				"id": 1557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "structConstructorCall",
																				"lValueRequested": false,
																				"nameLocations": [
																					"14091:16:6",
																					"14153:14:6",
																					"14211:12:6",
																					"14269:6:6",
																					"14318:16:6"
																				],
																				"names": [
																					"tokenHomeAddress",
																					"tokenHomeChain",
																					"tokenAddress",
																					"amount",
																					"amountNormalized"
																				],
																				"nodeType": "FunctionCall",
																				"src": "14054:317:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenReceived_$1338_memory_ptr",
																					"typeString": "struct CCTPAndTokenReceiver.TokenReceived memory"
																				}
																			},
																			"src": "14034:337:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenReceived_$1338_memory_ptr",
																				"typeString": "struct CCTPAndTokenReceiver.TokenReceived memory"
																			}
																		},
																		"id": 1559,
																		"nodeType": "ExpressionStatement",
																		"src": "14034:337:6"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1439,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1436,
																	"src": "12742:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1440,
																		"name": "additionalMessages",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1399,
																		"src": "12746:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																			"typeString": "bytes memory[] memory"
																		}
																	},
																	"id": 1441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12765:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "12746:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12742:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1561,
															"initializationExpression": {
																"assignments": [
																	1436
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1436,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "12735:1:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 1561,
																		"src": "12727:9:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1435,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12727:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1438,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12739:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "12727:13:6"
															},
															"loopExpression": {
																"expression": {
																	"id": 1444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "12773:3:6",
																	"subExpression": {
																		"id": 1443,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1436,
																		"src": "12775:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1445,
																"nodeType": "ExpressionStatement",
																"src": "12773:3:6"
															},
															"nodeType": "ForStatement",
															"src": "12722:1665:6"
														},
														{
															"assignments": [
																null,
																1563
															],
															"declarations": [
																null,
																{
																	"constant": false,
																	"id": 1563,
																	"mutability": "mutable",
																	"name": "userPayload",
																	"nameLocation": "14419:11:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1581,
																	"src": "14406:24:6",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1562,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "14406:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1572,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1566,
																		"name": "payload",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1396,
																		"src": "14463:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 1567,
																				"name": "Transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "14490:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_Transfer_$818_$",
																					"typeString": "type(enum CCTPAndTokenBase.Transfer)"
																				}
																			},
																			{
																				"id": 1569,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14500:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 1568,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14500:5:6",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 1570,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "14489:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_type$_t_enum$_Transfer_$818_$_$_t_type$_t_bytes_storage_ptr_$_$",
																			"typeString": "tuple(type(enum CCTPAndTokenBase.Transfer),type(bytes storage pointer))"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_tuple$_t_type$_t_enum$_Transfer_$818_$_$_t_type$_t_bytes_storage_ptr_$_$",
																			"typeString": "tuple(type(enum CCTPAndTokenBase.Transfer),type(bytes storage pointer))"
																		}
																	],
																	"expression": {
																		"id": 1564,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "14434:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "14438:6:6",
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "14434:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14434:87:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_enum$_Transfer_$818_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(enum CCTPAndTokenBase.Transfer,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14403:118:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1574,
																		"name": "userPayload",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "14623:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1575,
																		"name": "receivedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1426,
																		"src": "14653:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_TokenReceived_$1338_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct CCTPAndTokenReceiver.TokenReceived memory[] memory"
																		}
																	},
																	{
																		"id": 1576,
																		"name": "sourceAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1401,
																		"src": "14686:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1577,
																		"name": "sourceChain",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "14718:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	{
																		"id": 1578,
																		"name": "deliveryHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1405,
																		"src": "14748:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_struct$_TokenReceived_$1338_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct CCTPAndTokenReceiver.TokenReceived memory[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1573,
																	"name": "receivePayloadAndTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1680,
																	"src": "14581:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_array$_t_struct$_TokenReceived_$1338_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$_t_uint16_$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes memory,struct CCTPAndTokenReceiver.TokenReceived memory[] memory,bytes32,uint16,bytes32)"
																	}
																},
																"id": 1579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14581:194:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1580,
															"nodeType": "ExpressionStatement",
															"src": "14581:194:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "529dca32",
									"id": 1650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receiveWormholeMessages",
									"nameLocation": "12237:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "12284:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "12271:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1395,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12271:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "additionalMessages",
												"nameLocation": "12317:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "12302:33:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 1397,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "12302:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 1398,
													"nodeType": "ArrayTypeName",
													"src": "12302:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "12354:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "12346:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1400,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12346:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "12385:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "12378:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1402,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "12378:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "12415:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "12407:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1404,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12407:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12260:174:6"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12452:0:6"
									},
									"scope": 1681,
									"src": "12228:4043:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1663,
										"nodeType": "Block",
										"src": "16585:2:6",
										"statements": []
									},
									"id": 1664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receivePayloadAndUSDC",
									"nameLocation": "16379:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "16424:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "16411:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1651,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16411:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "amountUSDCReceived",
												"nameLocation": "16450:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "16442:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16442:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "16487:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "16479:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1655,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16479:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "16518:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "16511:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1657,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16511:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "16548:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "16540:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1659,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16540:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16400:167:6"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16585:0:6"
									},
									"scope": 1681,
									"src": "16370:217:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "16921:2:6",
										"statements": []
									},
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receivePayloadAndTokens",
									"nameLocation": "16702:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "16749:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "16736:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1665,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16736:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "receivedTokens",
												"nameLocation": "16790:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "16767:37:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenReceived_$1338_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct CCTPAndTokenReceiver.TokenReceived[]"
												},
												"typeName": {
													"baseType": {
														"id": 1668,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1667,
															"name": "TokenReceived",
															"nameLocations": [
																"16767:13:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1338,
															"src": "16767:13:6"
														},
														"referencedDeclaration": 1338,
														"src": "16767:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenReceived_$1338_storage_ptr",
															"typeString": "struct CCTPAndTokenReceiver.TokenReceived"
														}
													},
													"id": 1669,
													"nodeType": "ArrayTypeName",
													"src": "16767:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenReceived_$1338_storage_$dyn_storage_ptr",
														"typeString": "struct CCTPAndTokenReceiver.TokenReceived[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "16823:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "16815:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1671,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16815:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "16854:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "16847:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1673,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16847:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "16884:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "16876:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1675,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16876:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16725:178:6"
									},
									"returnParameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16921:0:6"
									},
									"scope": 1681,
									"src": "16693:230:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1682,
							"src": "10633:6293:6",
							"usedErrors": [
								4012
							],
							"usedEvents": []
						}
					],
					"src": "0:16928:6"
				},
				"id": 6
			},
			"BRIDGE_PARTNERSHIP/src/CCTPBase.sol": {
				"ast": {
					"absolutePath": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol",
					"exportedSymbols": {
						"Base": [
							798
						],
						"CCTPBase": [
							1758
						],
						"CCTPMessageLib": [
							1705
						],
						"CCTPReceiver": [
							2087
						],
						"CCTPSender": [
							1948
						],
						"DeliveryProviderCannotReceivePayment": [
							3938
						],
						"DeliveryProviderDoesNotSupportMessageKeyType": [
							3942
						],
						"DeliveryProviderDoesNotSupportTargetChain": [
							3936
						],
						"IERC20": [
							2755
						],
						"IMessageTransmitter": [
							2602
						],
						"IReceiver": [
							2616
						],
						"IRelayer": [
							2658
						],
						"ITokenMessenger": [
							2677
						],
						"IWormhole": [
							3485
						],
						"IWormholeReceiver": [
							3504
						],
						"IWormholeRelayer": [
							3919
						],
						"IWormholeRelayerBase": [
							3562
						],
						"IWormholeRelayerDelivery": [
							3914
						],
						"IWormholeRelayerSend": [
							3864
						],
						"InsufficientRelayerFunds": [
							4008
						],
						"InvalidDeliveryVaa": [
							3972
						],
						"InvalidEmitter": [
							3980
						],
						"InvalidMsgValue": [
							3928
						],
						"InvalidOverrideGasLimit": [
							3998
						],
						"InvalidOverrideReceiverValue": [
							4000
						],
						"InvalidOverrideRefundPerGasUnused": [
							4002
						],
						"InvalidPayloadId": [
							3954
						],
						"InvalidPayloadLength": [
							3960
						],
						"InvalidVaaKeyType": [
							3964
						],
						"MessageKey": [
							3522
						],
						"MessageKeysLengthDoesNotMatchMessagesLength": [
							3986
						],
						"NotAnEvmAddress": [
							4012
						],
						"RETURNDATA_TRUNCATION_THRESHOLD": [
							3922
						],
						"ReentrantDelivery": [
							3948
						],
						"RequestedGasLimitTooLow": [
							3930
						],
						"RequesterNotWormholeRelayer": [
							3992
						],
						"TargetChainIsNotThisChain": [
							3996
						],
						"TooManyMessageKeys": [
							3968
						],
						"VAA_KEY_TYPE": [
							3517
						],
						"VaaKey": [
							3514
						],
						"VaaKeysDoNotMatchVaas": [
							3990
						],
						"addressToBytes32CCTP": [
							2573
						],
						"fromWormholeFormat": [
							2561
						],
						"toWormholeFormat": [
							2528
						]
					},
					"id": 2088,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1683,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:7"
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol",
							"file": "./interfaces/IWormholeReceiver.sol",
							"id": 1684,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2088,
							"sourceUnit": 3505,
							"src": "28:44:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol",
							"file": "./interfaces/IWormholeRelayer.sol",
							"id": 1685,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2088,
							"sourceUnit": 4013,
							"src": "74:43:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 1687,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2088,
							"sourceUnit": 2756,
							"src": "119:47:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1686,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2755,
										"src": "127:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol",
							"file": "./interfaces/CCTPInterfaces/ITokenMessenger.sol",
							"id": 1688,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2088,
							"sourceUnit": 2678,
							"src": "168:57:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol",
							"file": "./interfaces/CCTPInterfaces/IMessageTransmitter.sol",
							"id": 1689,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2088,
							"sourceUnit": 2603,
							"src": "227:61:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/Utils.sol",
							"file": "./Utils.sol",
							"id": 1690,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2088,
							"sourceUnit": 2574,
							"src": "292:21:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/Base.sol",
							"file": "./Base.sol",
							"id": 1691,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2088,
							"sourceUnit": 799,
							"src": "315:20:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CCTPMessageLib",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1705,
							"linearizedBaseContracts": [
								1705
							],
							"name": "CCTPMessageLib",
							"nameLocation": "347:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1694,
									"mutability": "constant",
									"name": "CCTP_KEY_TYPE",
									"nameLocation": "749:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1705,
									"src": "734:32:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1692,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "734:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1693,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "765:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "CCTPMessageLib.CCTPKey",
									"id": 1699,
									"members": [
										{
											"constant": false,
											"id": 1696,
											"mutability": "mutable",
											"name": "domain",
											"nameLocation": "862:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 1699,
											"src": "855:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1695,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "855:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1698,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "886:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 1699,
											"src": "879:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1697,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "879:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CCTPKey",
									"nameLocation": "836:7:7",
									"nodeType": "StructDefinition",
									"scope": 1705,
									"src": "829:70:7",
									"visibility": "public"
								},
								{
									"canonicalName": "CCTPMessageLib.CCTPMessage",
									"id": 1704,
									"members": [
										{
											"constant": false,
											"id": 1701,
											"mutability": "mutable",
											"name": "message",
											"nameLocation": "996:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 1704,
											"src": "990:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1700,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "990:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1703,
											"mutability": "mutable",
											"name": "signature",
											"nameLocation": "1020:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 1704,
											"src": "1014:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1702,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1014:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CCTPMessage",
									"nameLocation": "967:11:7",
									"nodeType": "StructDefinition",
									"scope": 1705,
									"src": "960:77:7",
									"visibility": "public"
								}
							],
							"scope": 2088,
							"src": "339:701:7",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1706,
										"name": "Base",
										"nameLocations": [
											"1074:4:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 798,
										"src": "1074:4:7"
									},
									"id": 1707,
									"nodeType": "InheritanceSpecifier",
									"src": "1074:4:7"
								}
							],
							"canonicalName": "CCTPBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1758,
							"linearizedBaseContracts": [
								1758,
								798
							],
							"name": "CCTPBase",
							"nameLocation": "1062:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1710,
									"mutability": "mutable",
									"name": "circleTokenMessenger",
									"nameLocation": "1102:20:7",
									"nodeType": "VariableDeclaration",
									"scope": 1758,
									"src": "1086:36:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ITokenMessenger_$2677",
										"typeString": "contract ITokenMessenger"
									},
									"typeName": {
										"id": 1709,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1708,
											"name": "ITokenMessenger",
											"nameLocations": [
												"1086:15:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2677,
											"src": "1086:15:7"
										},
										"referencedDeclaration": 2677,
										"src": "1086:15:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ITokenMessenger_$2677",
											"typeString": "contract ITokenMessenger"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1713,
									"mutability": "mutable",
									"name": "circleMessageTransmitter",
									"nameLocation": "1149:24:7",
									"nodeType": "VariableDeclaration",
									"scope": 1758,
									"src": "1129:44:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMessageTransmitter_$2602",
										"typeString": "contract IMessageTransmitter"
									},
									"typeName": {
										"id": 1712,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1711,
											"name": "IMessageTransmitter",
											"nameLocations": [
												"1129:19:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2602,
											"src": "1129:19:7"
										},
										"referencedDeclaration": 2602,
										"src": "1129:19:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMessageTransmitter_$2602",
											"typeString": "contract IMessageTransmitter"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1715,
									"mutability": "mutable",
									"name": "USDC",
									"nameLocation": "1188:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 1758,
									"src": "1180:12:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1714,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1180:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1717,
									"mutability": "mutable",
									"name": "cctpConfigurationOwner",
									"nameLocation": "1207:22:7",
									"nodeType": "VariableDeclaration",
									"scope": 1758,
									"src": "1199:30:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1716,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1199:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1756,
										"nodeType": "Block",
										"src": "1447:307:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1731,
															"name": "_wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "1468:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1732,
															"name": "_wormhole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "1487:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1730,
														"name": "_initBase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "1458:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1458:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1734,
												"nodeType": "ExpressionStatement",
												"src": "1458:39:7"
											},
											{
												"expression": {
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1735,
														"name": "circleTokenMessenger",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1710,
														"src": "1508:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokenMessenger_$2677",
															"typeString": "contract ITokenMessenger"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1737,
																"name": "_circleTokenMessenger",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1725,
																"src": "1547:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1736,
															"name": "ITokenMessenger",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2677,
															"src": "1531:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ITokenMessenger_$2677_$",
																"typeString": "type(contract ITokenMessenger)"
															}
														},
														"id": 1738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1531:38:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokenMessenger_$2677",
															"typeString": "contract ITokenMessenger"
														}
													},
													"src": "1508:61:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITokenMessenger_$2677",
														"typeString": "contract ITokenMessenger"
													}
												},
												"id": 1740,
												"nodeType": "ExpressionStatement",
												"src": "1508:61:7"
											},
											{
												"expression": {
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1741,
														"name": "circleMessageTransmitter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1713,
														"src": "1580:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMessageTransmitter_$2602",
															"typeString": "contract IMessageTransmitter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1743,
																"name": "_circleMessageTransmitter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1723,
																"src": "1641:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1742,
															"name": "IMessageTransmitter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2602,
															"src": "1607:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IMessageTransmitter_$2602_$",
																"typeString": "type(contract IMessageTransmitter)"
															}
														},
														"id": 1744,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1607:70:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMessageTransmitter_$2602",
															"typeString": "contract IMessageTransmitter"
														}
													},
													"src": "1580:97:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMessageTransmitter_$2602",
														"typeString": "contract IMessageTransmitter"
													}
												},
												"id": 1746,
												"nodeType": "ExpressionStatement",
												"src": "1580:97:7"
											},
											{
												"expression": {
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1747,
														"name": "USDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "1688:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1748,
														"name": "_USDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1727,
														"src": "1695:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1688:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1750,
												"nodeType": "ExpressionStatement",
												"src": "1688:12:7"
											},
											{
												"expression": {
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1751,
														"name": "cctpConfigurationOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "1711:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1752,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1736:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1740:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1736:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1711:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "1711:35:7"
											}
										]
									},
									"id": 1757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initCCTPBase",
									"nameLocation": "1247:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "_wormholeRelayer",
												"nameLocation": "1279:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "1271:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "_wormhole",
												"nameLocation": "1314:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "1306:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "_circleMessageTransmitter",
												"nameLocation": "1342:25:7",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "1334:33:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "_circleTokenMessenger",
												"nameLocation": "1386:21:7",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "1378:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "_USDC",
												"nameLocation": "1426:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "1418:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:178:7"
									},
									"returnParameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1447:0:7"
									},
									"scope": 1758,
									"src": "1238:516:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2088,
							"src": "1044:713:7",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1759,
										"name": "CCTPBase",
										"nameLocations": [
											"1793:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1758,
										"src": "1793:8:7"
									},
									"id": 1760,
									"nodeType": "InheritanceSpecifier",
									"src": "1793:8:7"
								}
							],
							"canonicalName": "CCTPSender",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1948,
							"linearizedBaseContracts": [
								1948,
								1758,
								798
							],
							"name": "CCTPSender",
							"nameLocation": "1779:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1763,
									"mutability": "constant",
									"name": "CONSISTENCY_LEVEL_FINALIZED",
									"nameLocation": "1833:27:7",
									"nodeType": "VariableDeclaration",
									"scope": 1948,
									"src": "1809:56:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1761,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1809:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 1762,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1863:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "internal"
								},
								{
									"global": false,
									"id": 1765,
									"libraryName": {
										"id": 1764,
										"name": "CCTPMessageLib",
										"nameLocations": [
											"1880:14:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1705,
										"src": "1880:14:7"
									},
									"nodeType": "UsingForDirective",
									"src": "1874:27:7"
								},
								{
									"constant": false,
									"functionSelector": "3a57cd63",
									"id": 1769,
									"mutability": "mutable",
									"name": "chainIdToCCTPDomain",
									"nameLocation": "1942:19:7",
									"nodeType": "VariableDeclaration",
									"scope": 1948,
									"src": "1909:52:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint16_$_t_uint32_$",
										"typeString": "mapping(uint16 => uint32)"
									},
									"typeName": {
										"id": 1768,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1766,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "1917:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"nodeType": "Mapping",
										"src": "1909:25:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint16_$_t_uint32_$",
											"typeString": "mapping(uint16 => uint32)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1767,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "1927:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1791,
										"nodeType": "Block",
										"src": "2826:185:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1778,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2859:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2863:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2859:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1780,
																"name": "cctpConfigurationOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "2873:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2859:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616c6c6f77656420746f20736574204343545020446f6d61696e",
															"id": 1782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2910:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d1631ba72e816445bf0fa4abac33b00c0668922896e9b84defb141e7fcc6b48f",
																"typeString": "literal_string \"Not allowed to set CCTP Domain\""
															},
															"value": "Not allowed to set CCTP Domain"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d1631ba72e816445bf0fa4abac33b00c0668922896e9b84defb141e7fcc6b48f",
																"typeString": "literal_string \"Not allowed to set CCTP Domain\""
															}
														],
														"id": 1777,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2837:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2837:116:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1784,
												"nodeType": "ExpressionStatement",
												"src": "2837:116:7"
											},
											{
												"expression": {
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1785,
															"name": "chainIdToCCTPDomain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1769,
															"src": "2964:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint16_$_t_uint32_$",
																"typeString": "mapping(uint16 => uint32)"
															}
														},
														"id": 1787,
														"indexExpression": {
															"id": 1786,
															"name": "chain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "2984:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2964:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1788,
														"name": "cctpDomain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1774,
														"src": "2993:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2964:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1790,
												"nodeType": "ExpressionStatement",
												"src": "2964:39:7"
											}
										]
									},
									"documentation": {
										"id": 1770,
										"nodeType": "StructuredDocumentation",
										"src": "1970:787:7",
										"text": " Sets the CCTP Domain corresponding to chain 'chain' to be 'cctpDomain'\n So that transfers of USDC to chain 'chain' use the target CCTP domain 'cctpDomain'\n This action can only be performed by 'cctpConfigurationOwner', who is set to be the deployer\n Currently, cctp domains are:\n Ethereum: Wormhole chain id 2, cctp domain 0\n Avalanche: Wormhole chain id 6, cctp domain 1\n Optimism: Wormhole chain id 24, cctp domain 2\n Arbitrum: Wormhole chain id 23, cctp domain 3\n Base: Wormhole chain id 30, cctp domain 6\n These can be set via:\n setCCTPDomain(2, 0);\n setCCTPDomain(6, 1);\n setCCTPDomain(24, 2);\n setCCTPDomain(23, 3);\n setCCTPDomain(30, 6);"
									},
									"functionSelector": "c6a4fd1c",
									"id": 1792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setCCTPDomain",
									"nameLocation": "2772:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "chain",
												"nameLocation": "2793:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "2786:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1771,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2786:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "cctpDomain",
												"nameLocation": "2807:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "2800:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1773,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2800:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2785:33:7"
									},
									"returnParameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2826:0:7"
									},
									"scope": 1948,
									"src": "2763:248:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1803,
										"nodeType": "Block",
										"src": "3087:52:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1799,
														"name": "chainIdToCCTPDomain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "3105:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint16_$_t_uint32_$",
															"typeString": "mapping(uint16 => uint32)"
														}
													},
													"id": 1801,
													"indexExpression": {
														"id": 1800,
														"name": "chain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1794,
														"src": "3125:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3105:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1798,
												"id": 1802,
												"nodeType": "Return",
												"src": "3098:33:7"
											}
										]
									},
									"id": 1804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCCTPDomain",
									"nameLocation": "3028:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "chain",
												"nameLocation": "3049:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "3042:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1793,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3042:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3041:14:7"
									},
									"returnParameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "3079:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1796,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3079:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3078:8:7"
									},
									"scope": 1948,
									"src": "3019:120:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1861,
										"nodeType": "Block",
										"src": "3731:568:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1823,
																	"name": "circleTokenMessenger",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1710,
																	"src": "3771:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ITokenMessenger_$2677",
																		"typeString": "contract ITokenMessenger"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ITokenMessenger_$2677",
																		"typeString": "contract ITokenMessenger"
																	}
																],
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3763:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1821,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3763:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3763:29:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1825,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "3794:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1818,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "3749:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1817,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2755,
																"src": "3742:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$2755_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3742:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2755",
																"typeString": "contract IERC20"
															}
														},
														"id": 1820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3755:7:7",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2742,
														"src": "3742:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3742:59:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1827,
												"nodeType": "ExpressionStatement",
												"src": "3742:59:7"
											},
											{
												"assignments": [
													1829
												],
												"declarations": [
													{
														"constant": false,
														"id": 1829,
														"mutability": "mutable",
														"name": "targetAddressBytes32",
														"nameLocation": "3820:20:7",
														"nodeType": "VariableDeclaration",
														"scope": 1861,
														"src": "3812:28:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1828,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3812:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1833,
												"initialValue": {
													"arguments": [
														{
															"id": 1831,
															"name": "targetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1811,
															"src": "3864:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1830,
														"name": "addressToBytes32CCTP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2573,
														"src": "3843:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address) pure returns (bytes32)"
														}
													},
													"id": 1832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3843:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3812:66:7"
											},
											{
												"assignments": [
													1835
												],
												"declarations": [
													{
														"constant": false,
														"id": 1835,
														"mutability": "mutable",
														"name": "nonce",
														"nameLocation": "3896:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1861,
														"src": "3889:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 1834,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "3889:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1846,
												"initialValue": {
													"arguments": [
														{
															"id": 1838,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "3964:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1840,
																	"name": "targetChain",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1809,
																	"src": "3999:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"id": 1839,
																"name": "getCCTPDomain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1804,
																"src": "3985:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint16_$returns$_t_uint32_$",
																	"typeString": "function (uint16) view returns (uint32)"
																}
															},
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3985:26:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 1842,
															"name": "targetAddressBytes32",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1829,
															"src": "4026:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1843,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "4061:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1844,
															"name": "targetAddressBytes32",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1829,
															"src": "4080:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1836,
															"name": "circleTokenMessenger",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "3904:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ITokenMessenger_$2677",
																"typeString": "contract ITokenMessenger"
															}
														},
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3925:24:7",
														"memberName": "depositForBurnWithCaller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2676,
														"src": "3904:45:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint32_$_t_bytes32_$_t_address_$_t_bytes32_$returns$_t_uint64_$",
															"typeString": "function (uint256,uint32,bytes32,address,bytes32) external returns (uint64)"
														}
													},
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3904:207:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3889:222:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1848,
																"name": "CCTPMessageLib",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "4171:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_CCTPMessageLib_$1705_$",
																	"typeString": "type(library CCTPMessageLib)"
																}
															},
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4186:13:7",
															"memberName": "CCTP_KEY_TYPE",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1694,
															"src": "4171:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1853,
																					"name": "wormhole",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 711,
																					"src": "4249:8:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IWormhole_$3485",
																						"typeString": "contract IWormhole"
																					}
																				},
																				"id": 1854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4258:7:7",
																				"memberName": "chainId",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3387,
																				"src": "4249:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
																					"typeString": "function () view external returns (uint16)"
																				}
																			},
																			"id": 1855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4249:18:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		],
																		"id": 1852,
																		"name": "getCCTPDomain",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1804,
																		"src": "4235:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint16_$returns$_t_uint32_$",
																			"typeString": "function (uint16) view returns (uint32)"
																		}
																	},
																	"id": 1856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4235:33:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																{
																	"id": 1857,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1835,
																	"src": "4270:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	{
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																],
																"expression": {
																	"id": 1850,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4218:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4222:12:7",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "4218:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4218:58:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1847,
														"name": "MessageKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3522,
														"src": "4142:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_MessageKey_$3522_storage_ptr_$",
															"typeString": "type(struct MessageKey storage pointer)"
														}
													},
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4142:149:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MessageKey_$3522_memory_ptr",
														"typeString": "struct MessageKey memory"
													}
												},
												"functionReturnParameters": 1816,
												"id": 1860,
												"nodeType": "Return",
												"src": "4122:169:7"
											}
										]
									},
									"documentation": {
										"id": 1805,
										"nodeType": "StructuredDocumentation",
										"src": "3147:424:7",
										"text": " transferUSDC wraps common boilerplate for sending tokens to another chain using IWormholeRelayer\n - approves the Circle TokenMessenger contract to spend 'amount' of USDC\n - calls Circle's 'depositForBurnWithCaller'\n - returns key for inclusion in WormholeRelayer `additionalVaas` argument\n Note: this requires that only the targetAddress can redeem transfers."
									},
									"id": 1862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferUSDC",
									"nameLocation": "3588:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3619:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "3611:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3611:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "3643:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "3636:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1808,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3636:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "3673:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "3665:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3665:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3600:93:7"
									},
									"returnParameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "3712:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MessageKey_$3522_memory_ptr",
													"typeString": "struct MessageKey"
												},
												"typeName": {
													"id": 1814,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1813,
														"name": "MessageKey",
														"nameLocations": [
															"3712:10:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3522,
														"src": "3712:10:7"
													},
													"referencedDeclaration": 3522,
													"src": "3712:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MessageKey_$3522_storage_ptr",
														"typeString": "struct MessageKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3711:19:7"
									},
									"scope": 1948,
									"src": "3579:720:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1946,
										"nodeType": "Block",
										"src": "5041:854:7",
										"statements": [
											{
												"assignments": [
													1883
												],
												"declarations": [
													{
														"constant": false,
														"id": 1883,
														"mutability": "mutable",
														"name": "messageKeys",
														"nameLocation": "5072:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1946,
														"src": "5052:31:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_MessageKey_$3522_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct MessageKey[]"
														},
														"typeName": {
															"baseType": {
																"id": 1881,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1880,
																	"name": "MessageKey",
																	"nameLocations": [
																		"5052:10:7"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3522,
																	"src": "5052:10:7"
																},
																"referencedDeclaration": 3522,
																"src": "5052:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MessageKey_$3522_storage_ptr",
																	"typeString": "struct MessageKey"
																}
															},
															"id": 1882,
															"nodeType": "ArrayTypeName",
															"src": "5052:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MessageKey_$3522_storage_$dyn_storage_ptr",
																"typeString": "struct MessageKey[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1890,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5103:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1887,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "5086:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_MessageKey_$3522_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct MessageKey memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1885,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1884,
																	"name": "MessageKey",
																	"nameLocations": [
																		"5090:10:7"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3522,
																	"src": "5090:10:7"
																},
																"referencedDeclaration": 3522,
																"src": "5090:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MessageKey_$3522_storage_ptr",
																	"typeString": "struct MessageKey"
																}
															},
															"id": 1886,
															"nodeType": "ArrayTypeName",
															"src": "5090:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MessageKey_$3522_storage_$dyn_storage_ptr",
																"typeString": "struct MessageKey[]"
															}
														}
													},
													"id": 1889,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5086:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MessageKey_$3522_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct MessageKey memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5052:53:7"
											},
											{
												"expression": {
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1891,
															"name": "messageKeys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "5116:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MessageKey_$3522_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct MessageKey memory[] memory"
															}
														},
														"id": 1893,
														"indexExpression": {
															"hexValue": "30",
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5128:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5116:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MessageKey_$3522_memory_ptr",
															"typeString": "struct MessageKey memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1895,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1874,
																"src": "5146:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1896,
																"name": "targetChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1864,
																"src": "5154:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 1897,
																"name": "targetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1866,
																"src": "5167:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1894,
															"name": "transferUSDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "5133:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint16_$_t_address_$returns$_t_struct$_MessageKey_$3522_memory_ptr_$",
																"typeString": "function (uint256,uint16,address) returns (struct MessageKey memory)"
															}
														},
														"id": 1898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5133:48:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MessageKey_$3522_memory_ptr",
															"typeString": "struct MessageKey memory"
														}
													},
													"src": "5116:65:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MessageKey_$3522_memory_ptr",
														"typeString": "struct MessageKey memory"
													}
												},
												"id": 1900,
												"nodeType": "ExpressionStatement",
												"src": "5116:65:7"
											},
											{
												"assignments": [
													1902
												],
												"declarations": [
													{
														"constant": false,
														"id": 1902,
														"mutability": "mutable",
														"name": "userPayload",
														"nameLocation": "5207:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1946,
														"src": "5194:24:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1901,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5194:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1908,
												"initialValue": {
													"arguments": [
														{
															"id": 1905,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "5232:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1906,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "5240:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1903,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5221:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1904,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5225:6:7",
														"memberName": "encode",
														"nodeType": "MemberAccess",
														"src": "5221:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5221:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5194:54:7"
											},
											{
												"assignments": [
													1910
												],
												"declarations": [
													{
														"constant": false,
														"id": 1910,
														"mutability": "mutable",
														"name": "defaultDeliveryProvider",
														"nameLocation": "5267:23:7",
														"nodeType": "VariableDeclaration",
														"scope": 1946,
														"src": "5259:31:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1909,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5259:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1914,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1911,
															"name": "wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "5293:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWormholeRelayer_$3919",
																"typeString": "contract IWormholeRelayer"
															}
														},
														"id": 1912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5323:26:7",
														"memberName": "getDefaultDeliveryProvider",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3863,
														"src": "5293:56:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5293:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5259:92:7"
											},
											{
												"assignments": [
													1916,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1916,
														"mutability": "mutable",
														"name": "cost",
														"nameLocation": "5373:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1946,
														"src": "5365:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1915,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5365:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1923,
												"initialValue": {
													"arguments": [
														{
															"id": 1919,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "5435:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 1920,
															"name": "receiverValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "5461:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1921,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "5489:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1917,
															"name": "wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "5383:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWormholeRelayer_$3919",
																"typeString": "contract IWormholeRelayer"
															}
														},
														"id": 1918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5399:21:7",
														"memberName": "quoteEVMDeliveryPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3813,
														"src": "5383:37:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint16_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint16,uint256,uint256) view external returns (uint256,uint256)"
														}
													},
													"id": 1922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5383:125:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5364:144:7"
											},
											{
												"expression": {
													"id": 1944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1924,
														"name": "sequence",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1877,
														"src": "5521:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1929,
																"name": "targetChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1864,
																"src": "5585:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 1930,
																"name": "targetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1866,
																"src": "5611:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1931,
																"name": "userPayload",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1902,
																"src": "5639:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 1932,
																"name": "receiverValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "5665:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5693:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 1934,
																"name": "gasLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1872,
																"src": "5709:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1935,
																"name": "targetChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1864,
																"src": "5732:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 1938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5766:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5758:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1936,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5758:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5758:12:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1940,
																"name": "defaultDeliveryProvider",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1910,
																"src": "5785:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1941,
																"name": "messageKeys",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1883,
																"src": "5823:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_MessageKey_$3522_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct MessageKey memory[] memory"
																}
															},
															{
																"id": 1942,
																"name": "CONSISTENCY_LEVEL_FINALIZED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1763,
																"src": "5849:27:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_array$_t_struct$_MessageKey_$3522_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct MessageKey memory[] memory"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_array$_t_struct$_MessageKey_$3522_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct MessageKey memory[] memory"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"expression": {
																	"id": 1925,
																	"name": "wormholeRelayer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 708,
																	"src": "5532:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWormholeRelayer_$3919",
																		"typeString": "contract IWormholeRelayer"
																	}
																},
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5548:9:7",
																"memberName": "sendToEvm",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3705,
																"src": "5532:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint16_$_t_address_$_t_address_$_t_array$_t_struct$_MessageKey_$3522_memory_ptr_$dyn_memory_ptr_$_t_uint8_$returns$_t_uint64_$",
																	"typeString": "function (uint16,address,bytes memory,uint256,uint256,uint256,uint16,address,address,struct MessageKey memory[] memory,uint8) payable external returns (uint64)"
																}
															},
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"id": 1927,
																	"name": "cost",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1916,
																	"src": "5565:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "5532:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint16_$_t_address_$_t_address_$_t_array$_t_struct$_MessageKey_$3522_memory_ptr_$dyn_memory_ptr_$_t_uint8_$returns$_t_uint64_$value",
																"typeString": "function (uint16,address,bytes memory,uint256,uint256,uint256,uint16,address,address,struct MessageKey memory[] memory,uint8) payable external returns (uint64)"
															}
														},
														"id": 1943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5532:355:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "5521:366:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1945,
												"nodeType": "ExpressionStatement",
												"src": "5521:366:7"
											}
										]
									},
									"id": 1947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendUSDCWithPayloadToEvm",
									"nameLocation": "4798:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "4840:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "4833:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1863,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4833:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "4870:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "4862:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4862:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "4907:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "4894:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1867,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4894:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "4933:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "4925:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4925:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "4965:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "4957:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4957:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4992:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "4984:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4984:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4822:183:7"
									},
									"returnParameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "5031:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "5024:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1876,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5024:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5023:17:7"
									},
									"scope": 1948,
									"src": "4789:1106:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2088,
							"src": "1761:4137:7",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1949,
										"name": "CCTPBase",
										"nameLocations": [
											"5936:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1758,
										"src": "5936:8:7"
									},
									"id": 1950,
									"nodeType": "InheritanceSpecifier",
									"src": "5936:8:7"
								}
							],
							"canonicalName": "CCTPReceiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2087,
							"linearizedBaseContracts": [
								2087,
								1758,
								798
							],
							"name": "CCTPReceiver",
							"nameLocation": "5920:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2002,
										"nodeType": "Block",
										"src": "6048:357:7",
										"statements": [
											{
												"assignments": [
													1958,
													1960
												],
												"declarations": [
													{
														"constant": false,
														"id": 1958,
														"mutability": "mutable",
														"name": "message",
														"nameLocation": "6073:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 2002,
														"src": "6060:20:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1957,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6060:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1960,
														"mutability": "mutable",
														"name": "signature",
														"nameLocation": "6095:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 2002,
														"src": "6082:22:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1959,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6082:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1970,
												"initialValue": {
													"arguments": [
														{
															"id": 1963,
															"name": "cctpMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1952,
															"src": "6133:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 1965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6160:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1964,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "6160:5:7",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 1967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6167:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1966,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "6167:5:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1968,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6159:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(bytes storage pointer),type(bytes storage pointer))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(bytes storage pointer),type(bytes storage pointer))"
															}
														],
														"expression": {
															"id": 1961,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "6108:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1962,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6112:6:7",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "6108:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6108:76:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bytes memory,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6059:125:7"
											},
											{
												"assignments": [
													1972
												],
												"declarations": [
													{
														"constant": false,
														"id": 1972,
														"mutability": "mutable",
														"name": "beforeBalance",
														"nameLocation": "6203:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 2002,
														"src": "6195:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1971,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6195:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1982,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1979,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6250:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CCTPReceiver_$2087",
																		"typeString": "contract CCTPReceiver"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CCTPReceiver_$2087",
																		"typeString": "contract CCTPReceiver"
																	}
																],
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6242:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1977,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6242:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6242:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1974,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1715,
																	"src": "6226:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1973,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2755,
																"src": "6219:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$2755_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6219:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2755",
																"typeString": "contract IERC20"
															}
														},
														"id": 1976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6232:9:7",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2712,
														"src": "6219:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6219:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6195:61:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1986,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1958,
															"src": "6307:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1987,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1960,
															"src": "6316:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1983,
															"name": "circleMessageTransmitter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1713,
															"src": "6267:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMessageTransmitter_$2602",
																"typeString": "contract IMessageTransmitter"
															}
														},
														"id": 1985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6292:14:7",
														"memberName": "receiveMessage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2615,
														"src": "6267:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory,bytes memory) external returns (bool)"
														}
													},
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6267:59:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1989,
												"nodeType": "ExpressionStatement",
												"src": "6267:59:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1996,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6375:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CCTPReceiver_$2087",
																			"typeString": "contract CCTPReceiver"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CCTPReceiver_$2087",
																			"typeString": "contract CCTPReceiver"
																		}
																	],
																	"id": 1995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6367:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1994,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6367:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6367:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1991,
																		"name": "USDC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1715,
																		"src": "6351:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1990,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2755,
																	"src": "6344:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$2755_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6344:12:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$2755",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6357:9:7",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2712,
															"src": "6344:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6344:37:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1999,
														"name": "beforeBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1972,
														"src": "6384:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6344:53:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1956,
												"id": 2001,
												"nodeType": "Return",
												"src": "6337:60:7"
											}
										]
									},
									"id": 2003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "redeemUSDC",
									"nameLocation": "5961:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "cctpMessage",
												"nameLocation": "5995:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "5982:24:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1951,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5982:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5971:42:7"
									},
									"returnParameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6040:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "6032:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6031:16:7"
									},
									"scope": 2087,
									"src": "5952:453:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2071,
										"nodeType": "Block",
										"src": "6637:1248:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2018,
																	"name": "additionalMessages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2008,
																	"src": "7016:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																		"typeString": "bytes memory[] memory"
																	}
																},
																"id": 2019,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7035:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7016:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 2020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7045:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "7016:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "434354503a204174206d6f7374206f6e65204d65737361676520697320737570706f72746564",
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7061:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95c2a5457827ff1d830352d4d883397dc3debe8649a9022b6a18da70b36679cb",
																"typeString": "literal_string \"CCTP: At most one Message is supported\""
															},
															"value": "CCTP: At most one Message is supported"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_95c2a5457827ff1d830352d4d883397dc3debe8649a9022b6a18da70b36679cb",
																"typeString": "literal_string \"CCTP: At most one Message is supported\""
															}
														],
														"id": 2017,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6994:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6994:118:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2024,
												"nodeType": "ExpressionStatement",
												"src": "6994:118:7"
											},
											{
												"assignments": [
													2026
												],
												"declarations": [
													{
														"constant": false,
														"id": 2026,
														"mutability": "mutable",
														"name": "amountUSDCReceived",
														"nameLocation": "7133:18:7",
														"nodeType": "VariableDeclaration",
														"scope": 2071,
														"src": "7125:26:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2025,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7125:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2027,
												"nodeType": "VariableDeclarationStatement",
												"src": "7125:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2028,
															"name": "additionalMessages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "7166:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																"typeString": "bytes memory[] memory"
															}
														},
														"id": 2029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7185:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7166:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2030,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7195:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7166:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2041,
												"nodeType": "IfStatement",
												"src": "7162:117:7",
												"trueBody": {
													"id": 2040,
													"nodeType": "Block",
													"src": "7198:81:7",
													"statements": [
														{
															"expression": {
																"id": 2038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2032,
																	"name": "amountUSDCReceived",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2026,
																	"src": "7213:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 2034,
																				"name": "additionalMessages",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2008,
																				"src": "7245:18:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																					"typeString": "bytes memory[] memory"
																				}
																			},
																			"id": 2036,
																			"indexExpression": {
																				"hexValue": "30",
																				"id": 2035,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7264:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7245:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 2033,
																		"name": "redeemUSDC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2003,
																		"src": "7234:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_uint256_$",
																			"typeString": "function (bytes memory) returns (uint256)"
																		}
																	},
																	"id": 2037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7234:33:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7213:54:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2039,
															"nodeType": "ExpressionStatement",
															"src": "7213:54:7"
														}
													]
												}
											},
											{
												"assignments": [
													2043,
													2045
												],
												"declarations": [
													{
														"constant": false,
														"id": 2043,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "7300:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2071,
														"src": "7292:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2042,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7292:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2045,
														"mutability": "mutable",
														"name": "userPayload",
														"nameLocation": "7321:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 2071,
														"src": "7308:24:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2044,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7308:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2055,
												"initialValue": {
													"arguments": [
														{
															"id": 2048,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2005,
															"src": "7361:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 2050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7384:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2049,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7384:7:7",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 2052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7393:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2051,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "7393:5:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 2053,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7383:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(uint256),type(bytes storage pointer))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(uint256),type(bytes storage pointer))"
															}
														],
														"expression": {
															"id": 2046,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "7336:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 2047,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7340:6:7",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "7336:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 2054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7336:74:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(uint256,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7291:119:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2057,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2043,
																"src": "7638:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2058,
																"name": "amountUSDCReceived",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2026,
																"src": "7648:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7638:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57726f6e6720616d6f756e74207265636569766564",
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7668:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6781022867e86356be9e3ec78a96895f20619f3a7ac0506f4a950d1c3599a266",
																"typeString": "literal_string \"Wrong amount received\""
															},
															"value": "Wrong amount received"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6781022867e86356be9e3ec78a96895f20619f3a7ac0506f4a950d1c3599a266",
																"typeString": "literal_string \"Wrong amount received\""
															}
														],
														"id": 2056,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7630:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7630:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2062,
												"nodeType": "ExpressionStatement",
												"src": "7630:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2064,
															"name": "userPayload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2045,
															"src": "7741:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2065,
															"name": "amountUSDCReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2026,
															"src": "7767:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2066,
															"name": "sourceAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2010,
															"src": "7800:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2067,
															"name": "sourceChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2012,
															"src": "7828:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 2068,
															"name": "deliveryHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2014,
															"src": "7854:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2063,
														"name": "receivePayloadAndUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2086,
														"src": "7705:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes32_$_t_uint16_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes memory,uint256,bytes32,uint16,bytes32)"
														}
													},
													"id": 2069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7705:172:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2070,
												"nodeType": "ExpressionStatement",
												"src": "7705:172:7"
											}
										]
									},
									"functionSelector": "529dca32",
									"id": 2072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receiveWormholeMessages",
									"nameLocation": "6422:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "6469:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "6456:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2004,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6456:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "additionalMessages",
												"nameLocation": "6502:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "6487:33:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 2006,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "6487:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 2007,
													"nodeType": "ArrayTypeName",
													"src": "6487:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "6539:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "6531:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2009,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6531:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "6570:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "6563:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2011,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6563:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "6600:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2072,
												"src": "6592:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2013,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6592:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6445:174:7"
									},
									"returnParameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6637:0:7"
									},
									"scope": 2087,
									"src": "6413:1472:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2085,
										"nodeType": "Block",
										"src": "8199:2:7",
										"statements": []
									},
									"id": 2086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receivePayloadAndUSDC",
									"nameLocation": "7993:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "8038:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "8025:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2073,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8025:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "amountUSDCReceived",
												"nameLocation": "8064:18:7",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "8056:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8056:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "8101:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "8093:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2077,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8093:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "8132:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "8125:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2079,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8125:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "8162:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "8154:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2081,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8154:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8014:167:7"
									},
									"returnParameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8199:0:7"
									},
									"scope": 2087,
									"src": "7984:217:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2088,
							"src": "5902:2302:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:8206:7"
				},
				"id": 7
			},
			"BRIDGE_PARTNERSHIP/src/TokenBase.sol": {
				"ast": {
					"absolutePath": "BRIDGE_PARTNERSHIP/src/TokenBase.sol",
					"exportedSymbols": {
						"Base": [
							798
						],
						"DeliveryProviderCannotReceivePayment": [
							3938
						],
						"DeliveryProviderDoesNotSupportMessageKeyType": [
							3942
						],
						"DeliveryProviderDoesNotSupportTargetChain": [
							3936
						],
						"IERC20": [
							2755
						],
						"ITokenBridge": [
							3155
						],
						"IWETH": [
							3169
						],
						"IWormhole": [
							3485
						],
						"IWormholeReceiver": [
							3504
						],
						"IWormholeRelayer": [
							3919
						],
						"IWormholeRelayerBase": [
							3562
						],
						"IWormholeRelayerDelivery": [
							3914
						],
						"IWormholeRelayerSend": [
							3864
						],
						"Inputs": [
							699
						],
						"InsufficientRelayerFunds": [
							4008
						],
						"InvalidDeliveryVaa": [
							3972
						],
						"InvalidEmitter": [
							3980
						],
						"InvalidMsgValue": [
							3928
						],
						"InvalidOverrideGasLimit": [
							3998
						],
						"InvalidOverrideReceiverValue": [
							4000
						],
						"InvalidOverrideRefundPerGasUnused": [
							4002
						],
						"InvalidPayloadId": [
							3954
						],
						"InvalidPayloadLength": [
							3960
						],
						"InvalidVaaKeyType": [
							3964
						],
						"MessageKey": [
							3522
						],
						"MessageKeysLengthDoesNotMatchMessagesLength": [
							3986
						],
						"NotAnEvmAddress": [
							4012
						],
						"RETURNDATA_TRUNCATION_THRESHOLD": [
							3922
						],
						"ReentrantDelivery": [
							3948
						],
						"RequestedGasLimitTooLow": [
							3930
						],
						"RequesterNotWormholeRelayer": [
							3992
						],
						"Structs": [
							670
						],
						"TargetChainIsNotThisChain": [
							3996
						],
						"TokenBase": [
							2125
						],
						"TokenReceiver": [
							2506
						],
						"TokenSender": [
							2262
						],
						"TooManyMessageKeys": [
							3968
						],
						"VAA_KEY_TYPE": [
							3517
						],
						"VaaKey": [
							3514
						],
						"VaaKeysDoNotMatchVaas": [
							3990
						],
						"addressToBytes32CCTP": [
							2573
						],
						"fromWormholeFormat": [
							2561
						],
						"toWormholeFormat": [
							2528
						]
					},
					"id": 2507,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2089,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:8"
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol",
							"file": "./interfaces/IWormholeReceiver.sol",
							"id": 2090,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2507,
							"sourceUnit": 3505,
							"src": "28:44:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol",
							"file": "./interfaces/IWormholeRelayer.sol",
							"id": 2091,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2507,
							"sourceUnit": 4013,
							"src": "74:43:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/ITokenBridge.sol",
							"file": "./interfaces/ITokenBridge.sol",
							"id": 2092,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2507,
							"sourceUnit": 3156,
							"src": "119:39:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 2094,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2507,
							"sourceUnit": 2756,
							"src": "160:47:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2093,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2755,
										"src": "168:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/WormholeRelayerSDK.sol",
							"file": "./WormholeRelayerSDK.sol",
							"id": 2096,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2507,
							"sourceUnit": 2593,
							"src": "209:46:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2095,
										"name": "Base",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 798,
										"src": "217:4:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/lib.d.sol",
							"file": "../lib.d.sol",
							"id": 2097,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2507,
							"sourceUnit": 700,
							"src": "257:22:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/Utils.sol",
							"file": "./Utils.sol",
							"id": 2098,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2507,
							"sourceUnit": 2574,
							"src": "281:21:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2099,
										"name": "Base",
										"nameLocations": [
											"337:4:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 798,
										"src": "337:4:8"
									},
									"id": 2100,
									"nodeType": "InheritanceSpecifier",
									"src": "337:4:8"
								}
							],
							"canonicalName": "TokenBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2125,
							"linearizedBaseContracts": [
								2125,
								798
							],
							"name": "TokenBase",
							"nameLocation": "324:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c6328a46",
									"id": 2103,
									"mutability": "mutable",
									"name": "tokenBridge",
									"nameLocation": "369:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 2125,
									"src": "349:31:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ITokenBridge_$3155",
										"typeString": "contract ITokenBridge"
									},
									"typeName": {
										"id": 2102,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2101,
											"name": "ITokenBridge",
											"nameLocations": [
												"349:12:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3155,
											"src": "349:12:8"
										},
										"referencedDeclaration": 3155,
										"src": "349:12:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ITokenBridge_$3155",
											"typeString": "contract ITokenBridge"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2123,
										"nodeType": "Block",
										"src": "495:109:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2113,
															"name": "_wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2105,
															"src": "516:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2114,
															"name": "_wormhole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "535:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2112,
														"name": "_initBase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "506:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "506:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2116,
												"nodeType": "ExpressionStatement",
												"src": "506:39:8"
											},
											{
												"expression": {
													"id": 2121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2117,
														"name": "tokenBridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2103,
														"src": "556:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokenBridge_$3155",
															"typeString": "contract ITokenBridge"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2119,
																"name": "_tokenBridge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2107,
																"src": "583:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2118,
															"name": "ITokenBridge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3155,
															"src": "570:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ITokenBridge_$3155_$",
																"typeString": "type(contract ITokenBridge)"
															}
														},
														"id": 2120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "570:26:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokenBridge_$3155",
															"typeString": "contract ITokenBridge"
														}
													},
													"src": "556:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITokenBridge_$3155",
														"typeString": "contract ITokenBridge"
													}
												},
												"id": 2122,
												"nodeType": "ExpressionStatement",
												"src": "556:40:8"
											}
										]
									},
									"id": 2124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initTokenBase",
									"nameLocation": "399:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "_wormholeRelayer",
												"nameLocation": "422:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "414:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "_tokenBridge",
												"nameLocation": "447:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "439:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "_wormhole",
												"nameLocation": "468:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "460:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:65:8"
									},
									"returnParameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "495:0:8"
									},
									"scope": 2125,
									"src": "389:215:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2507,
							"src": "306:301:8",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2126,
										"name": "TokenBase",
										"nameLocations": [
											"644:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2125,
										"src": "644:9:8"
									},
									"id": 2127,
									"nodeType": "InheritanceSpecifier",
									"src": "644:9:8"
								}
							],
							"canonicalName": "TokenSender",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2262,
							"linearizedBaseContracts": [
								2262,
								2125,
								798
							],
							"name": "TokenSender",
							"nameLocation": "629:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2186,
										"nodeType": "Block",
										"src": "1758:562:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2150,
																	"name": "tokenBridge",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2103,
																	"src": "1799:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ITokenBridge_$3155",
																		"typeString": "contract ITokenBridge"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ITokenBridge_$3155",
																		"typeString": "contract ITokenBridge"
																	}
																],
																"id": 2149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1791:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2148,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1791:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1791:20:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2152,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2132,
															"src": "1813:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2145,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2130,
																	"src": "1776:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2144,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2755,
																"src": "1769:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$2755_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1769:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2755",
																"typeString": "contract IERC20"
															}
														},
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1783:7:8",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2742,
														"src": "1769:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1769:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2154,
												"nodeType": "ExpressionStatement",
												"src": "1769:51:8"
											},
											{
												"assignments": [
													2156
												],
												"declarations": [
													{
														"constant": false,
														"id": 2156,
														"mutability": "mutable",
														"name": "sequence",
														"nameLocation": "1838:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 2186,
														"src": "1831:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 2155,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "1831:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2172,
												"initialValue": {
													"arguments": [
														{
															"id": 2163,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2130,
															"src": "1955:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2164,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2132,
															"src": "1975:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2165,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2134,
															"src": "1996:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"arguments": [
																{
																	"id": 2167,
																	"name": "targetAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2136,
																	"src": "2039:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2166,
																"name": "toWormholeFormat",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2528,
																"src": "2022:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
																	"typeString": "function (address) pure returns (bytes32)"
																}
															},
															"id": 2168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2022:31:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "30",
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2068:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2170,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2138,
															"src": "2084:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2157,
																"name": "tokenBridge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2103,
																"src": "1849:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ITokenBridge_$3155",
																	"typeString": "contract ITokenBridge"
																}
															},
															"id": 2158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1861:25:8",
															"memberName": "transferTokensWithPayload",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2916,
															"src": "1849:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint16_$_t_bytes32_$_t_uint32_$_t_bytes_memory_ptr_$returns$_t_uint64_$",
																"typeString": "function (address,uint256,uint16,bytes32,uint32,bytes memory) payable external returns (uint64)"
															}
														},
														"id": 2162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2159,
																		"name": "wormhole",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 711,
																		"src": "1908:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWormhole_$3485",
																			"typeString": "contract IWormhole"
																		}
																	},
																	"id": 2160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1917:10:8",
																	"memberName": "messageFee",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3407,
																	"src": "1908:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 2161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1908:21:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1849:91:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint16_$_t_bytes32_$_t_uint32_$_t_bytes_memory_ptr_$returns$_t_uint64_$value",
															"typeString": "function (address,uint256,uint16,bytes32,uint32,bytes memory) payable external returns (uint64)"
														}
													},
													"id": 2171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1849:253:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1831:271:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2177,
																			"name": "tokenBridge",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2103,
																			"src": "2200:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ITokenBridge_$3155",
																				"typeString": "contract ITokenBridge"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ITokenBridge_$3155",
																				"typeString": "contract ITokenBridge"
																			}
																		],
																		"id": 2176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2192:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2175,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2192:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2192:20:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2174,
																"name": "toWormholeFormat",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2528,
																"src": "2175:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
																	"typeString": "function (address) pure returns (bytes32)"
																}
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2175:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 2180,
																	"name": "wormhole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "2241:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWormhole_$3485",
																		"typeString": "contract IWormhole"
																	}
																},
																"id": 2181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2250:7:8",
																"memberName": "chainId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3387,
																"src": "2241:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
																	"typeString": "function () view external returns (uint16)"
																}
															},
															"id": 2182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2241:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 2183,
															"name": "sequence",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2156,
															"src": "2288:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 2173,
														"name": "VaaKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3514,
														"src": "2133:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_VaaKey_$3514_storage_ptr_$",
															"typeString": "type(struct VaaKey storage pointer)"
														}
													},
													"id": 2184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"2159:14:8",
														"2232:7:8",
														"2278:8:8"
													],
													"names": [
														"emitterAddress",
														"chainId",
														"sequence"
													],
													"nodeType": "FunctionCall",
													"src": "2133:179:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$3514_memory_ptr",
														"typeString": "struct VaaKey memory"
													}
												},
												"functionReturnParameters": 2143,
												"id": 2185,
												"nodeType": "Return",
												"src": "2113:199:8"
											}
										]
									},
									"documentation": {
										"id": 2128,
										"nodeType": "StructuredDocumentation",
										"src": "663:884:8",
										"text": " transferTokens wraps common boilerplate for sending tokens to another chain using IWormholeRelayer.\n A payload can be included in the transfer vaa. By including a payload here instead of the deliveryVaa,\n fewer trust assumptions are placed on the WormholeRelayer contract.\n - approves tokenBridge to spend 'amount' of 'token'\n - emits token transfer VAA\n - returns VAA key for inclusion in WormholeRelayer `additionalVaas` argument\n Note: this function uses transferTokensWithPayload instead of transferTokens since the former requires that only the targetAddress\n       can redeem transfers. Otherwise it's possible for another address to redeem the transfer before the targetContract is invoked by\n       the offchain relayer and the target contract would have to be hardened against this."
									},
									"id": 2187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "1562:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1595:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "1587:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1587:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1619:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "1611:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1611:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "1643:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "1636:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2133,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "1673:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "1665:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1665:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "1710:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "1697:20:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2137,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1697:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1576:148:8"
									},
									"returnParameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2187,
												"src": "1743:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VaaKey_$3514_memory_ptr",
													"typeString": "struct VaaKey"
												},
												"typeName": {
													"id": 2141,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2140,
														"name": "VaaKey",
														"nameLocations": [
															"1743:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3514,
														"src": "1743:6:8"
													},
													"referencedDeclaration": 3514,
													"src": "1743:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$3514_storage_ptr",
														"typeString": "struct VaaKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1742:15:8"
									},
									"scope": 2262,
									"src": "1553:767:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2260,
										"nodeType": "Block",
										"src": "3091:631:8",
										"statements": [
											{
												"assignments": [
													2214
												],
												"declarations": [
													{
														"constant": false,
														"id": 2214,
														"mutability": "mutable",
														"name": "vaaKeys",
														"nameLocation": "3118:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2260,
														"src": "3102:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct VaaKey[]"
														},
														"typeName": {
															"baseType": {
																"id": 2212,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2211,
																	"name": "VaaKey",
																	"nameLocations": [
																		"3102:6:8"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3514,
																	"src": "3102:6:8"
																},
																"referencedDeclaration": 3514,
																"src": "3102:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaaKey_$3514_storage_ptr",
																	"typeString": "struct VaaKey"
																}
															},
															"id": 2213,
															"nodeType": "ArrayTypeName",
															"src": "3102:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_storage_$dyn_storage_ptr",
																"typeString": "struct VaaKey[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2221,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3141:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3128:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct VaaKey memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2216,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2215,
																	"name": "VaaKey",
																	"nameLocations": [
																		"3132:6:8"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3514,
																	"src": "3132:6:8"
																},
																"referencedDeclaration": 3514,
																"src": "3132:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaaKey_$3514_storage_ptr",
																	"typeString": "struct VaaKey"
																}
															},
															"id": 2217,
															"nodeType": "ArrayTypeName",
															"src": "3132:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_storage_$dyn_storage_ptr",
																"typeString": "struct VaaKey[]"
															}
														}
													},
													"id": 2220,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3128:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct VaaKey memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3102:41:8"
											},
											{
												"expression": {
													"id": 2235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2222,
															"name": "vaaKeys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2214,
															"src": "3154:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct VaaKey memory[] memory"
															}
														},
														"id": 2224,
														"indexExpression": {
															"hexValue": "30",
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3162:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3154:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$3514_memory_ptr",
															"typeString": "struct VaaKey memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2226,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2199,
																"src": "3182:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2227,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2201,
																"src": "3189:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2228,
																"name": "targetChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2189,
																"src": "3197:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 2229,
																"name": "targetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2191,
																"src": "3210:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 2232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3230:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"id": 2231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3224:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2230,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3224:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 2233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3224:9:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2225,
															"name": "transferTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2187,
															"src": "3167:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$returns$_t_struct$_VaaKey_$3514_memory_ptr_$",
																"typeString": "function (address,uint256,uint16,address,bytes memory) returns (struct VaaKey memory)"
															}
														},
														"id": 2234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3167:67:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$3514_memory_ptr",
															"typeString": "struct VaaKey memory"
														}
													},
													"src": "3154:80:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$3514_memory_ptr",
														"typeString": "struct VaaKey memory"
													}
												},
												"id": 2236,
												"nodeType": "ExpressionStatement",
												"src": "3154:80:8"
											},
											{
												"assignments": [
													2238,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2238,
														"mutability": "mutable",
														"name": "cost",
														"nameLocation": "3256:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 2260,
														"src": "3248:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2237,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3248:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2245,
												"initialValue": {
													"arguments": [
														{
															"id": 2241,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2189,
															"src": "3318:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 2242,
															"name": "receiverValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "3344:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2243,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2197,
															"src": "3372:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2239,
															"name": "wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "3266:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWormholeRelayer_$3919",
																"typeString": "contract IWormholeRelayer"
															}
														},
														"id": 2240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3282:21:8",
														"memberName": "quoteEVMDeliveryPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3813,
														"src": "3266:37:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint16_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint16,uint256,uint256) view external returns (uint256,uint256)"
														}
													},
													"id": 2244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3266:125:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3247:144:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2250,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2189,
															"src": "3483:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 2251,
															"name": "targetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2191,
															"src": "3513:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2252,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2193,
															"src": "3545:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2253,
															"name": "receiverValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "3571:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2254,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2197,
															"src": "3603:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2255,
															"name": "vaaKeys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2214,
															"src": "3630:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct VaaKey memory[] memory"
															}
														},
														{
															"id": 2256,
															"name": "refundChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2203,
															"src": "3656:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 2257,
															"name": "refundAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2205,
															"src": "3686:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct VaaKey memory[] memory"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct VaaKey memory[] memory"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 2246,
																"name": "wormholeRelayer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 708,
																"src": "3422:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWormholeRelayer_$3919",
																	"typeString": "contract IWormholeRelayer"
																}
															},
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3438:13:8",
															"memberName": "sendVaasToEvm",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3645,
															"src": "3422:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr_$_t_uint16_$_t_address_$returns$_t_uint64_$",
																"typeString": "function (uint16,address,bytes memory,uint256,uint256,struct VaaKey memory[] memory,uint16,address) payable external returns (uint64)"
															}
														},
														"id": 2249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2248,
																"name": "cost",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2238,
																"src": "3459:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3422:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr_$_t_uint16_$_t_address_$returns$_t_uint64_$value",
															"typeString": "function (uint16,address,bytes memory,uint256,uint256,struct VaaKey memory[] memory,uint16,address) payable external returns (uint64)"
														}
													},
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3422:292:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 2209,
												"id": 2259,
												"nodeType": "Return",
												"src": "3402:312:8"
											}
										]
									},
									"id": 2261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendTokenWithPayloadToEvm",
									"nameLocation": "2771:25:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "2814:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "2807:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2188,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2807:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "2844:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "2836:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "2881:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "2868:20:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2192,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2868:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "2907:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "2899:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2899:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "2939:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "2931:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2931:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2966:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "2958:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2958:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2990:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "2982:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "refundChain",
												"nameLocation": "3014:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "3007:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2202,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3007:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "refundAddress",
												"nameLocation": "3044:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "3036:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3036:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2796:268:8"
									},
									"returnParameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "3083:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2207,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3083:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3082:8:8"
									},
									"scope": 2262,
									"src": "2762:960:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2507,
							"src": "611:3114:8",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2263,
										"name": "TokenBase",
										"nameLocations": [
											"3764:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2125,
										"src": "3764:9:8"
									},
									"id": 2264,
									"nodeType": "InheritanceSpecifier",
									"src": "3764:9:8"
								}
							],
							"canonicalName": "TokenReceiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2506,
							"linearizedBaseContracts": [
								2506,
								2125,
								798
							],
							"name": "TokenReceiver",
							"nameLocation": "3747:13:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2294,
										"nodeType": "Block",
										"src": "3881:234:8",
										"statements": [
											{
												"assignments": [
													null,
													2272
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 2272,
														"mutability": "mutable",
														"name": "queriedDecimals",
														"nameLocation": "3935:15:8",
														"nodeType": "VariableDeclaration",
														"scope": 2294,
														"src": "3922:28:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2271,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3922:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2283,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "646563696d616c732829",
																	"id": 2280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4025:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_313ce567add4d438edf58b94ff345d7d38c45b17dfc0f947988d7819dca364f9",
																		"typeString": "literal_string \"decimals()\""
																	},
																	"value": "decimals()"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_313ce567add4d438edf58b94ff345d7d38c45b17dfc0f947988d7819dca364f9",
																		"typeString": "literal_string \"decimals()\""
																	}
																],
																"expression": {
																	"id": 2278,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4001:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4005:19:8",
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "4001:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4001:37:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2275,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2266,
																	"src": "3962:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3954:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2273,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3954:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3954:21:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3976:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3954:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3954:95:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3919:130:8"
											},
											{
												"expression": {
													"id": 2292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2284,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2269,
														"src": "4060:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2287,
																"name": "queriedDecimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2272,
																"src": "4082:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"components": [
																	{
																		"id": 2289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4100:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 2288,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "4100:5:8",
																			"typeDescriptions": {}
																		}
																	}
																],
																"id": 2290,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4099:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																}
															],
															"expression": {
																"id": 2285,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "4071:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 2286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4075:6:8",
															"memberName": "decode",
															"nodeType": "MemberAccess",
															"src": "4071:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4071:36:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4060:47:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 2293,
												"nodeType": "ExpressionStatement",
												"src": "4060:47:8"
											}
										]
									},
									"id": 2295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDecimals",
									"nameLocation": "3792:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "3822:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2295,
												"src": "3814:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3814:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3803:38:8"
									},
									"returnParameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "3871:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2295,
												"src": "3865:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2268,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3865:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:16:8"
									},
									"scope": 2506,
									"src": "3783:332:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2319,
										"nodeType": "Block",
										"src": "4289:209:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"id": 2308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2304,
															"name": "tokenHomeChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2297,
															"src": "4320:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 2305,
																	"name": "wormhole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 711,
																	"src": "4338:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWormhole_$3485",
																		"typeString": "contract IWormhole"
																	}
																},
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4347:7:8",
																"memberName": "chainId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3387,
																"src": "4338:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
																	"typeString": "function () view external returns (uint16)"
																}
															},
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4338:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "4320:36:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 2314,
																"name": "tokenHomeChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2297,
																"src": "4457:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 2315,
																"name": "tokenHomeAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2299,
																"src": "4473:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 2312,
																"name": "tokenBridge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2103,
																"src": "4432:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ITokenBridge_$3155",
																	"typeString": "contract ITokenBridge"
																}
															},
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4444:12:8",
															"memberName": "wrappedAsset",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3070,
															"src": "4432:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint16_$_t_bytes32_$returns$_t_address_$",
																"typeString": "function (uint16,bytes32) view external returns (address)"
															}
														},
														"id": 2316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4432:58:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4320:170:8",
													"trueExpression": {
														"arguments": [
															{
																"id": 2310,
																"name": "tokenHomeAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2299,
																"src": "4395:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2309,
															"name": "fromWormholeFormat",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2561,
															"src": "4376:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_address_$",
																"typeString": "function (bytes32) pure returns (address)"
															}
														},
														"id": 2311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4376:36:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2303,
												"id": 2318,
												"nodeType": "Return",
												"src": "4300:190:8"
											}
										]
									},
									"id": 2320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenAddressOnThisChain",
									"nameLocation": "4132:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "tokenHomeChain",
												"nameLocation": "4176:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "4169:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2296,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4169:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "tokenHomeAddress",
												"nameLocation": "4209:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "4201:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2298,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4201:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4158:74:8"
									},
									"returnParameters": {
										"id": 2303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "tokenAddressOnThisChain",
												"nameLocation": "4264:23:8",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "4256:31:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4256:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4255:33:8"
									},
									"scope": 2506,
									"src": "4123:375:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2485,
										"nodeType": "Block",
										"src": "4726:1901:8",
										"statements": [
											{
												"assignments": [
													2339
												],
												"declarations": [
													{
														"constant": false,
														"id": 2339,
														"mutability": "mutable",
														"name": "receivedTokens",
														"nameLocation": "4768:14:8",
														"nodeType": "VariableDeclaration",
														"scope": 2485,
														"src": "4737:45:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenReceived_$669_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Structs.TokenReceived[]"
														},
														"typeName": {
															"baseType": {
																"id": 2337,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2336,
																	"name": "Structs.TokenReceived",
																	"nameLocations": [
																		"4737:7:8",
																		"4745:13:8"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 669,
																	"src": "4737:21:8"
																},
																"referencedDeclaration": 669,
																"src": "4737:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenReceived_$669_storage_ptr",
																	"typeString": "struct Structs.TokenReceived"
																}
															},
															"id": 2338,
															"nodeType": "ArrayTypeName",
															"src": "4737:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenReceived_$669_storage_$dyn_storage_ptr",
																"typeString": "struct Structs.TokenReceived[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2347,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2344,
																"name": "additionalVaas",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2325,
																"src": "4827:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																	"typeString": "bytes memory[] memory"
																}
															},
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4842:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4827:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4785:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TokenReceived_$669_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct Structs.TokenReceived memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2341,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 2340,
																	"name": "Structs.TokenReceived",
																	"nameLocations": [
																		"4789:7:8",
																		"4797:13:8"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 669,
																	"src": "4789:21:8"
																},
																"referencedDeclaration": 669,
																"src": "4789:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenReceived_$669_storage_ptr",
																	"typeString": "struct Structs.TokenReceived"
																}
															},
															"id": 2342,
															"nodeType": "ArrayTypeName",
															"src": "4789:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenReceived_$669_storage_$dyn_storage_ptr",
																"typeString": "struct Structs.TokenReceived[]"
															}
														}
													},
													"id": 2346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4785:74:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenReceived_$669_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Structs.TokenReceived memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4737:122:8"
											},
											{
												"body": {
													"id": 2474,
													"nodeType": "Block",
													"src": "4924:1449:8",
													"statements": [
														{
															"assignments": [
																2363
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2363,
																	"mutability": "mutable",
																	"name": "parsed",
																	"nameLocation": "4959:6:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 2474,
																	"src": "4939:26:8",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VM_$3211_memory_ptr",
																		"typeString": "struct IWormhole.VM"
																	},
																	"typeName": {
																		"id": 2362,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 2361,
																			"name": "IWormhole.VM",
																			"nameLocations": [
																				"4939:9:8",
																				"4949:2:8"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 3211,
																			"src": "4939:12:8"
																		},
																		"referencedDeclaration": 3211,
																		"src": "4939:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_VM_$3211_storage_ptr",
																			"typeString": "struct IWormhole.VM"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2370,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 2366,
																			"name": "additionalVaas",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2325,
																			"src": "4985:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																				"typeString": "bytes memory[] memory"
																			}
																		},
																		"id": 2368,
																		"indexExpression": {
																			"id": 2367,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2349,
																			"src": "5000:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4985:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2364,
																		"name": "wormhole",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 711,
																		"src": "4968:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWormhole_$3485",
																			"typeString": "contract IWormhole"
																		}
																	},
																	"id": 2365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4977:7:8",
																	"memberName": "parseVM",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3343,
																	"src": "4968:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_struct$_VM_$3211_memory_ptr_$",
																		"typeString": "function (bytes memory) pure external returns (struct IWormhole.VM memory)"
																	}
																},
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4968:35:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VM_$3211_memory_ptr",
																	"typeString": "struct IWormhole.VM memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4939:64:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 2379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2372,
																				"name": "parsed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2363,
																				"src": "5044:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_VM_$3211_memory_ptr",
																					"typeString": "struct IWormhole.VM memory"
																				}
																			},
																			"id": 2373,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5051:14:8",
																			"memberName": "emitterAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3196,
																			"src": "5044:21:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2376,
																						"name": "parsed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2363,
																						"src": "5118:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_VM_$3211_memory_ptr",
																							"typeString": "struct IWormhole.VM memory"
																						}
																					},
																					"id": 2377,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5125:14:8",
																					"memberName": "emitterChainId",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3194,
																					"src": "5118:21:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				],
																				"expression": {
																					"id": 2374,
																					"name": "tokenBridge",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2103,
																					"src": "5090:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ITokenBridge_$3155",
																						"typeString": "contract ITokenBridge"
																					}
																				},
																				"id": 2375,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5102:15:8",
																				"memberName": "bridgeContracts",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3077,
																				"src": "5090:27:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_uint16_$returns$_t_bytes32_$",
																					"typeString": "function (uint16) view external returns (bytes32)"
																				}
																			},
																			"id": 2378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5090:50:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "5044:96:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e6f74206120546f6b656e2042726964676520564141",
																		"id": 2380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5159:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_97f7701d47a07e774ac5a8a9759768a55db9a0927dcdf2b109ecb87275183f9e",
																			"typeString": "literal_string \"Not a Token Bridge VAA\""
																		},
																		"value": "Not a Token Bridge VAA"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_97f7701d47a07e774ac5a8a9759768a55db9a0927dcdf2b109ecb87275183f9e",
																			"typeString": "literal_string \"Not a Token Bridge VAA\""
																		}
																	],
																	"id": 2371,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5018:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5018:180:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2382,
															"nodeType": "ExpressionStatement",
															"src": "5018:180:8"
														},
														{
															"assignments": [
																2387
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2387,
																	"mutability": "mutable",
																	"name": "transfer",
																	"nameLocation": "5253:8:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 2474,
																	"src": "5213:48:8",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TransferWithPayload_$2791_memory_ptr",
																		"typeString": "struct ITokenBridge.TransferWithPayload"
																	},
																	"typeName": {
																		"id": 2386,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 2385,
																			"name": "ITokenBridge.TransferWithPayload",
																			"nameLocations": [
																				"5213:12:8",
																				"5226:19:8"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2791,
																			"src": "5213:32:8"
																		},
																		"referencedDeclaration": 2791,
																		"src": "5213:32:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferWithPayload_$2791_storage_ptr",
																			"typeString": "struct ITokenBridge.TransferWithPayload"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2393,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2390,
																			"name": "parsed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2363,
																			"src": "5319:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_VM_$3211_memory_ptr",
																				"typeString": "struct IWormhole.VM memory"
																			}
																		},
																		"id": 2391,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5326:7:8",
																		"memberName": "payload",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3202,
																		"src": "5319:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2388,
																		"name": "tokenBridge",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2103,
																		"src": "5264:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ITokenBridge_$3155",
																			"typeString": "contract ITokenBridge"
																		}
																	},
																	"id": 2389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5294:24:8",
																	"memberName": "parseTransferWithPayload",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3009,
																	"src": "5264:54:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_struct$_TransferWithPayload_$2791_memory_ptr_$",
																		"typeString": "function (bytes memory) pure external returns (struct ITokenBridge.TransferWithPayload memory)"
																	}
																},
																"id": 2392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5264:70:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferWithPayload_$2791_memory_ptr",
																	"typeString": "struct ITokenBridge.TransferWithPayload memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5213:121:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 2403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2395,
																					"name": "transfer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2387,
																					"src": "5375:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TransferWithPayload_$2791_memory_ptr",
																						"typeString": "struct ITokenBridge.TransferWithPayload memory"
																					}
																				},
																				"id": 2396,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5384:2:8",
																				"memberName": "to",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2784,
																				"src": "5375:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 2400,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "5415:4:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_TokenReceiver_$2506",
																									"typeString": "contract TokenReceiver"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_TokenReceiver_$2506",
																									"typeString": "contract TokenReceiver"
																								}
																							],
																							"id": 2399,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "5407:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 2398,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "5407:7:8",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 2401,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5407:13:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2397,
																					"name": "toWormholeFormat",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2528,
																					"src": "5390:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
																						"typeString": "function (address) pure returns (bytes32)"
																					}
																				},
																				"id": 2402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5390:31:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "5375:46:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			},
																			"id": 2409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2404,
																					"name": "transfer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2387,
																					"src": "5446:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TransferWithPayload_$2791_memory_ptr",
																						"typeString": "struct ITokenBridge.TransferWithPayload memory"
																					}
																				},
																				"id": 2405,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5455:7:8",
																				"memberName": "toChain",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2786,
																				"src": "5446:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 2406,
																						"name": "wormhole",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 711,
																						"src": "5466:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IWormhole_$3485",
																							"typeString": "contract IWormhole"
																						}
																					},
																					"id": 2407,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5475:7:8",
																					"memberName": "chainId",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3387,
																					"src": "5466:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
																						"typeString": "function () view external returns (uint16)"
																					}
																				},
																				"id": 2408,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5466:18:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "5446:38:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "5375:109:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "546f6b656e20776173206e6f742073656e7420746f20746869732061646472657373",
																		"id": 2411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5503:36:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b88badcf55119d90f630b7846c67cf9afe587a0e49b80236232c807bbbb764b2",
																			"typeString": "literal_string \"Token was not sent to this address\""
																		},
																		"value": "Token was not sent to this address"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b88badcf55119d90f630b7846c67cf9afe587a0e49b80236232c807bbbb764b2",
																			"typeString": "literal_string \"Token was not sent to this address\""
																		}
																	],
																	"id": 2394,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5349:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5349:205:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2413,
															"nodeType": "ExpressionStatement",
															"src": "5349:205:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 2417,
																			"name": "additionalVaas",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2325,
																			"src": "5611:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																				"typeString": "bytes memory[] memory"
																			}
																		},
																		"id": 2419,
																		"indexExpression": {
																			"id": 2418,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2349,
																			"src": "5626:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5611:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2414,
																		"name": "tokenBridge",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2103,
																		"src": "5571:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ITokenBridge_$3155",
																			"typeString": "contract ITokenBridge"
																		}
																	},
																	"id": 2416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5583:27:8",
																	"memberName": "completeTransferWithPayload",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2937,
																	"src": "5571:39:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) external returns (bytes memory)"
																	}
																},
																"id": 2420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5571:58:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2421,
															"nodeType": "ExpressionStatement",
															"src": "5571:58:8"
														},
														{
															"assignments": [
																2423
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2423,
																	"mutability": "mutable",
																	"name": "thisChainTokenAddress",
																	"nameLocation": "5654:21:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 2474,
																	"src": "5646:29:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2422,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5646:7:8",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2430,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2425,
																			"name": "transfer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2387,
																			"src": "5723:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferWithPayload_$2791_memory_ptr",
																				"typeString": "struct ITokenBridge.TransferWithPayload memory"
																			}
																		},
																		"id": 2426,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5732:10:8",
																		"memberName": "tokenChain",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2782,
																		"src": "5723:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	{
																		"expression": {
																			"id": 2427,
																			"name": "transfer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2387,
																			"src": "5761:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferWithPayload_$2791_memory_ptr",
																				"typeString": "struct ITokenBridge.TransferWithPayload memory"
																			}
																		},
																		"id": 2428,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5770:12:8",
																		"memberName": "tokenAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2780,
																		"src": "5761:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 2424,
																	"name": "getTokenAddressOnThisChain",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2320,
																	"src": "5678:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint16_$_t_bytes32_$returns$_t_address_$",
																		"typeString": "function (uint16,bytes32) view returns (address)"
																	}
																},
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5678:119:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5646:151:8"
														},
														{
															"assignments": [
																2432
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2432,
																	"mutability": "mutable",
																	"name": "decimals",
																	"nameLocation": "5818:8:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 2474,
																	"src": "5812:14:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 2431,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "5812:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2436,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2434,
																		"name": "thisChainTokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2423,
																		"src": "5841:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2433,
																	"name": "getDecimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "5829:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint8_$",
																		"typeString": "function (address) view returns (uint8)"
																	}
																},
																"id": 2435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5829:34:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5812:51:8"
														},
														{
															"assignments": [
																2438
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2438,
																	"mutability": "mutable",
																	"name": "denormalizedAmount",
																	"nameLocation": "5886:18:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 2474,
																	"src": "5878:26:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2437,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5878:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2441,
															"initialValue": {
																"expression": {
																	"id": 2439,
																	"name": "transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2387,
																	"src": "5907:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TransferWithPayload_$2791_memory_ptr",
																		"typeString": "struct ITokenBridge.TransferWithPayload memory"
																	}
																},
																"id": 2440,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5916:6:8",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2778,
																"src": "5907:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5878:44:8"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2442,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2432,
																	"src": "5941:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5952:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "5941:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2457,
															"nodeType": "IfStatement",
															"src": "5937:86:8",
															"trueBody": {
																"expression": {
																	"id": 2455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2445,
																		"name": "denormalizedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2438,
																		"src": "5972:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "*=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"hexValue": "3130",
																					"id": 2448,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6002:2:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					}
																				],
																				"id": 2447,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5994:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2446,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5994:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5994:11:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					"id": 2452,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2450,
																						"name": "decimals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2432,
																						"src": "6010:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "38",
																						"id": 2451,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6021:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_8_by_1",
																							"typeString": "int_const 8"
																						},
																						"value": "8"
																					},
																					"src": "6010:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"id": 2453,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6009:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "5994:29:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5972:51:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2456,
																"nodeType": "ExpressionStatement",
																"src": "5972:51:8"
															}
														},
														{
															"expression": {
																"id": 2472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2458,
																		"name": "receivedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "6040:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_TokenReceived_$669_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct Structs.TokenReceived memory[] memory"
																		}
																	},
																	"id": 2460,
																	"indexExpression": {
																		"id": 2459,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2349,
																		"src": "6055:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6040:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenReceived_$669_memory_ptr",
																		"typeString": "struct Structs.TokenReceived memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 2463,
																				"name": "transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2387,
																				"src": "6119:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TransferWithPayload_$2791_memory_ptr",
																					"typeString": "struct ITokenBridge.TransferWithPayload memory"
																				}
																			},
																			"id": 2464,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6128:12:8",
																			"memberName": "tokenAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2780,
																			"src": "6119:21:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"expression": {
																				"id": 2465,
																				"name": "transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2387,
																				"src": "6175:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TransferWithPayload_$2791_memory_ptr",
																					"typeString": "struct ITokenBridge.TransferWithPayload memory"
																				}
																			},
																			"id": 2466,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6184:10:8",
																			"memberName": "tokenChain",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2782,
																			"src": "6175:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		{
																			"id": 2467,
																			"name": "thisChainTokenAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2423,
																			"src": "6227:21:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2468,
																			"name": "denormalizedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2438,
																			"src": "6275:18:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 2469,
																				"name": "transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2387,
																				"src": "6330:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TransferWithPayload_$2791_memory_ptr",
																					"typeString": "struct ITokenBridge.TransferWithPayload memory"
																				}
																			},
																			"id": 2470,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6339:6:8",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2778,
																			"src": "6330:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2461,
																			"name": "Structs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 670,
																			"src": "6060:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Structs_$670_$",
																				"typeString": "type(library Structs)"
																			}
																		},
																		"id": 2462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6068:13:8",
																		"memberName": "TokenReceived",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 669,
																		"src": "6060:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_TokenReceived_$669_storage_ptr_$",
																			"typeString": "type(struct Structs.TokenReceived storage pointer)"
																		}
																	},
																	"id": 2471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [
																		"6101:16:8",
																		"6159:14:8",
																		"6213:12:8",
																		"6267:6:8",
																		"6312:16:8"
																	],
																	"names": [
																		"tokenHomeAddress",
																		"tokenHomeChain",
																		"tokenAddress",
																		"amount",
																		"amountNormalized"
																	],
																	"nodeType": "FunctionCall",
																	"src": "6060:301:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenReceived_$669_memory_ptr",
																		"typeString": "struct Structs.TokenReceived memory"
																	}
																},
																"src": "6040:321:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenReceived_$669_memory_ptr",
																	"typeString": "struct Structs.TokenReceived memory"
																}
															},
															"id": 2473,
															"nodeType": "ExpressionStatement",
															"src": "6040:321:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2352,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2349,
														"src": "4892:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2353,
															"name": "additionalVaas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2325,
															"src": "4896:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																"typeString": "bytes memory[] memory"
															}
														},
														"id": 2354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4911:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4896:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4892:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2475,
												"initializationExpression": {
													"assignments": [
														2349
													],
													"declarations": [
														{
															"constant": false,
															"id": 2349,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4885:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 2475,
															"src": "4877:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2348,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4877:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2351,
													"initialValue": {
														"hexValue": "30",
														"id": 2350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4889:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4877:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 2357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "4919:3:8",
														"subExpression": {
															"id": 2356,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "4921:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2358,
													"nodeType": "ExpressionStatement",
													"src": "4919:3:8"
												},
												"nodeType": "ForStatement",
												"src": "4872:1501:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2477,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2322,
															"src": "6462:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2478,
															"name": "receivedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2339,
															"src": "6484:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenReceived_$669_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct Structs.TokenReceived memory[] memory"
															}
														},
														{
															"id": 2479,
															"name": "sourceAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2327,
															"src": "6513:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2480,
															"name": "sourceChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2329,
															"src": "6541:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 2481,
															"name": "deliveryHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2331,
															"src": "6567:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2482,
															"name": "additionalVaas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2325,
															"src": "6594:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																"typeString": "bytes memory[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_TokenReceived_$669_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct Structs.TokenReceived memory[] memory"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																"typeString": "bytes memory[] memory"
															}
														],
														"id": 2476,
														"name": "receivePayloadAndTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2505,
														"src": "6424:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_array$_t_struct$_TokenReceived_$669_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$_t_uint16_$_t_bytes32_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (bytes memory,struct Structs.TokenReceived memory[] memory,bytes32,uint16,bytes32,bytes memory[] memory)"
														}
													},
													"id": 2483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6424:195:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2484,
												"nodeType": "ExpressionStatement",
												"src": "6424:195:8"
											}
										]
									},
									"functionSelector": "529dca32",
									"id": 2486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receiveWormholeMessages",
									"nameLocation": "4515:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "4562:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "4549:20:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4549:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "additionalVaas",
												"nameLocation": "4595:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "4580:29:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 2323,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "4580:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 2324,
													"nodeType": "ArrayTypeName",
													"src": "4580:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "4628:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "4620:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2326,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4620:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "4659:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "4652:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2328,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4652:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "4689:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "4681:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2330,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4681:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4538:170:8"
									},
									"returnParameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4726:0:8"
									},
									"scope": 2506,
									"src": "4506:2121:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2504,
										"nodeType": "Block",
										"src": "7009:2:8",
										"statements": []
									},
									"id": 2505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receivePayloadAndTokens",
									"nameLocation": "6742:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "6789:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "6776:20:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2487,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6776:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "receivedTokens",
												"nameLocation": "6838:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "6807:45:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenReceived_$669_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Structs.TokenReceived[]"
												},
												"typeName": {
													"baseType": {
														"id": 2490,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2489,
															"name": "Structs.TokenReceived",
															"nameLocations": [
																"6807:7:8",
																"6815:13:8"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 669,
															"src": "6807:21:8"
														},
														"referencedDeclaration": 669,
														"src": "6807:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenReceived_$669_storage_ptr",
															"typeString": "struct Structs.TokenReceived"
														}
													},
													"id": 2491,
													"nodeType": "ArrayTypeName",
													"src": "6807:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenReceived_$669_storage_$dyn_storage_ptr",
														"typeString": "struct Structs.TokenReceived[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "6871:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "6863:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2493,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6863:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "6902:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "6895:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2495,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6895:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2498,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "6932:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "6924:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2497,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6924:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "additionalVaas",
												"nameLocation": "6970:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "6955:29:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 2499,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "6955:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 2500,
													"nodeType": "ArrayTypeName",
													"src": "6955:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6765:226:8"
									},
									"returnParameters": {
										"id": 2503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7009:0:8"
									},
									"scope": 2506,
									"src": "6733:278:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2507,
							"src": "3729:3285:8",
							"usedErrors": [
								4012
							],
							"usedEvents": []
						}
					],
					"src": "0:7016:8"
				},
				"id": 8
			},
			"BRIDGE_PARTNERSHIP/src/Utils.sol": {
				"ast": {
					"absolutePath": "BRIDGE_PARTNERSHIP/src/Utils.sol",
					"exportedSymbols": {
						"DeliveryProviderCannotReceivePayment": [
							3938
						],
						"DeliveryProviderDoesNotSupportMessageKeyType": [
							3942
						],
						"DeliveryProviderDoesNotSupportTargetChain": [
							3936
						],
						"IWormholeRelayer": [
							3919
						],
						"IWormholeRelayerBase": [
							3562
						],
						"IWormholeRelayerDelivery": [
							3914
						],
						"IWormholeRelayerSend": [
							3864
						],
						"InsufficientRelayerFunds": [
							4008
						],
						"InvalidDeliveryVaa": [
							3972
						],
						"InvalidEmitter": [
							3980
						],
						"InvalidMsgValue": [
							3928
						],
						"InvalidOverrideGasLimit": [
							3998
						],
						"InvalidOverrideReceiverValue": [
							4000
						],
						"InvalidOverrideRefundPerGasUnused": [
							4002
						],
						"InvalidPayloadId": [
							3954
						],
						"InvalidPayloadLength": [
							3960
						],
						"InvalidVaaKeyType": [
							3964
						],
						"MessageKey": [
							3522
						],
						"MessageKeysLengthDoesNotMatchMessagesLength": [
							3986
						],
						"NotAnEvmAddress": [
							4012
						],
						"RETURNDATA_TRUNCATION_THRESHOLD": [
							3922
						],
						"ReentrantDelivery": [
							3948
						],
						"RequestedGasLimitTooLow": [
							3930
						],
						"RequesterNotWormholeRelayer": [
							3992
						],
						"TargetChainIsNotThisChain": [
							3996
						],
						"TooManyMessageKeys": [
							3968
						],
						"VAA_KEY_TYPE": [
							3517
						],
						"VaaKey": [
							3514
						],
						"VaaKeysDoNotMatchVaas": [
							3990
						],
						"addressToBytes32CCTP": [
							2573
						],
						"fromWormholeFormat": [
							2561
						],
						"toWormholeFormat": [
							2528
						]
					},
					"id": 2574,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2508,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "2:24:9"
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol",
							"file": "./interfaces/IWormholeRelayer.sol",
							"id": 2509,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2574,
							"sourceUnit": 4013,
							"src": "30:43:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"body": {
								"id": 2527,
								"nodeType": "Block",
								"src": "140:49:9",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2522,
																	"name": "addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2511,
																	"src": "178:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "170:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 2520,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "170:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "170:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 2519,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "162:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "162:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 2524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "162:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												],
												"id": 2517,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "154:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_bytes32_$",
													"typeString": "type(bytes32)"
												},
												"typeName": {
													"id": 2516,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "154:7:9",
													"typeDescriptions": {}
												}
											},
											"id": 2525,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "154:31:9",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"functionReturnParameters": 2515,
										"id": 2526,
										"nodeType": "Return",
										"src": "147:38:9"
									}
								]
							},
							"id": 2528,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "toWormholeFormat",
							"nameLocation": "86:16:9",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2512,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2511,
										"mutability": "mutable",
										"name": "addr",
										"nameLocation": "111:4:9",
										"nodeType": "VariableDeclaration",
										"scope": 2528,
										"src": "103:12:9",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 2510,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "103:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "102:14:9"
							},
							"returnParameters": {
								"id": 2515,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2514,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 2528,
										"src": "131:7:9",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 2513,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "131:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "130:9:9"
							},
							"scope": 2574,
							"src": "77:112:9",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2560,
								"nodeType": "Block",
								"src": "269:166:9",
								"statements": [
									{
										"condition": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 2542,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 2540,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"arguments": [
														{
															"id": 2537,
															"name": "whFormatAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2530,
															"src": "288:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2536,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "280:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2535,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "280:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 2538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "280:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": ">>",
												"rightExpression": {
													"hexValue": "313630",
													"id": 2539,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "308:3:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_160_by_1",
														"typeString": "int_const 160"
													},
													"value": "160"
												},
												"src": "280:31:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "!=",
											"rightExpression": {
												"hexValue": "30",
												"id": 2541,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "315:1:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											},
											"src": "280:36:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 2548,
										"nodeType": "IfStatement",
										"src": "276:100:9",
										"trueBody": {
											"id": 2547,
											"nodeType": "Block",
											"src": "318:58:9",
											"statements": [
												{
													"errorCall": {
														"arguments": [
															{
																"id": 2544,
																"name": "whFormatAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2530,
																"src": "352:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2543,
															"name": "NotAnEvmAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4012,
															"src": "336:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																"typeString": "function (bytes32) pure"
															}
														},
														"id": 2545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "336:32:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2546,
													"nodeType": "RevertStatement",
													"src": "329:39:9"
												}
											]
										}
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2555,
																	"name": "whFormatAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2530,
																	"src": "413:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "405:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2553,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "405:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "405:24:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2552,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "397:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 2551,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "397:7:9",
															"typeDescriptions": {}
														}
													},
													"id": 2557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "397:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												],
												"id": 2550,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "389:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": {
													"id": 2549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:9",
													"typeDescriptions": {}
												}
											},
											"id": 2558,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "389:42:9",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"functionReturnParameters": 2534,
										"id": 2559,
										"nodeType": "Return",
										"src": "382:49:9"
									}
								]
							},
							"id": 2561,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "fromWormholeFormat",
							"nameLocation": "202:18:9",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2531,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2530,
										"mutability": "mutable",
										"name": "whFormatAddress",
										"nameLocation": "229:15:9",
										"nodeType": "VariableDeclaration",
										"scope": 2561,
										"src": "221:23:9",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 2529,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "221:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "220:25:9"
							},
							"returnParameters": {
								"id": 2534,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2533,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 2561,
										"src": "260:7:9",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 2532,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "260:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "259:9:9"
							},
							"scope": 2574,
							"src": "193:242:9",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2572,
								"nodeType": "Block",
								"src": "506:44:9",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"id": 2569,
													"name": "addr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2563,
													"src": "541:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 2568,
												"name": "toWormholeFormat",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2528,
												"src": "524:16:9",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
													"typeString": "function (address) pure returns (bytes32)"
												}
											},
											"id": 2570,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "524:22:9",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"functionReturnParameters": 2567,
										"id": 2571,
										"nodeType": "Return",
										"src": "517:29:9"
									}
								]
							},
							"id": 2573,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "addressToBytes32CCTP",
							"nameLocation": "448:20:9",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2564,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2563,
										"mutability": "mutable",
										"name": "addr",
										"nameLocation": "477:4:9",
										"nodeType": "VariableDeclaration",
										"scope": 2573,
										"src": "469:12:9",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 2562,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "469:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "468:14:9"
							},
							"returnParameters": {
								"id": 2567,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2566,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 2573,
										"src": "497:7:9",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 2565,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "497:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "496:9:9"
							},
							"scope": 2574,
							"src": "439:111:9",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						}
					],
					"src": "2:548:9"
				},
				"id": 9
			},
			"BRIDGE_PARTNERSHIP/src/WormholeRelayerSDK.sol": {
				"ast": {
					"absolutePath": "BRIDGE_PARTNERSHIP/src/WormholeRelayerSDK.sol",
					"exportedSymbols": {
						"Base": [
							798
						],
						"CCTPAndTokenBase": [
							849
						],
						"CCTPAndTokenReceiver": [
							1681
						],
						"CCTPAndTokenSender": [
							1272
						],
						"CCTPBase": [
							1758
						],
						"CCTPReceiver": [
							2087
						],
						"CCTPSender": [
							1948
						],
						"DeliveryProviderCannotReceivePayment": [
							3938
						],
						"DeliveryProviderDoesNotSupportMessageKeyType": [
							3942
						],
						"DeliveryProviderDoesNotSupportTargetChain": [
							3936
						],
						"IWormholeReceiver": [
							3504
						],
						"IWormholeRelayer": [
							3919
						],
						"IWormholeRelayerBase": [
							3562
						],
						"IWormholeRelayerDelivery": [
							3914
						],
						"IWormholeRelayerSend": [
							3864
						],
						"InsufficientRelayerFunds": [
							4008
						],
						"InvalidDeliveryVaa": [
							3972
						],
						"InvalidEmitter": [
							3980
						],
						"InvalidMsgValue": [
							3928
						],
						"InvalidOverrideGasLimit": [
							3998
						],
						"InvalidOverrideReceiverValue": [
							4000
						],
						"InvalidOverrideRefundPerGasUnused": [
							4002
						],
						"InvalidPayloadId": [
							3954
						],
						"InvalidPayloadLength": [
							3960
						],
						"InvalidVaaKeyType": [
							3964
						],
						"MessageKey": [
							3522
						],
						"MessageKeysLengthDoesNotMatchMessagesLength": [
							3986
						],
						"NotAnEvmAddress": [
							4012
						],
						"RETURNDATA_TRUNCATION_THRESHOLD": [
							3922
						],
						"ReentrantDelivery": [
							3948
						],
						"RequestedGasLimitTooLow": [
							3930
						],
						"RequesterNotWormholeRelayer": [
							3992
						],
						"TargetChainIsNotThisChain": [
							3996
						],
						"TokenBase": [
							2125
						],
						"TokenReceiver": [
							2506
						],
						"TokenSender": [
							2262
						],
						"TooManyMessageKeys": [
							3968
						],
						"VAA_KEY_TYPE": [
							3517
						],
						"VaaKey": [
							3514
						],
						"VaaKeysDoNotMatchVaas": [
							3990
						],
						"addressToBytes32CCTP": [
							2573
						],
						"fromWormholeFormat": [
							2561
						],
						"toWormholeFormat": [
							2528
						]
					},
					"id": 2593,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2575,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:10"
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol",
							"file": "./interfaces/IWormholeReceiver.sol",
							"id": 2576,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2593,
							"sourceUnit": 3505,
							"src": "28:44:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol",
							"file": "./interfaces/IWormholeRelayer.sol",
							"id": 2577,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2593,
							"sourceUnit": 4013,
							"src": "74:43:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/Utils.sol",
							"file": "./Utils.sol",
							"id": 2578,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2593,
							"sourceUnit": 2574,
							"src": "119:21:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/Base.sol",
							"file": "./Base.sol",
							"id": 2580,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2593,
							"sourceUnit": 799,
							"src": "142:32:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2579,
										"name": "Base",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 798,
										"src": "150:4:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/TokenBase.sol",
							"file": "./TokenBase.sol",
							"id": 2584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2593,
							"sourceUnit": 2507,
							"src": "176:70:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2581,
										"name": "TokenBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2125,
										"src": "184:9:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2582,
										"name": "TokenReceiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2506,
										"src": "195:13:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2583,
										"name": "TokenSender",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2262,
										"src": "210:11:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/CCTPBase.sol",
							"file": "./CCTPBase.sol",
							"id": 2588,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2593,
							"sourceUnit": 2088,
							"src": "248:66:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2585,
										"name": "CCTPBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1758,
										"src": "256:8:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2586,
										"name": "CCTPReceiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2087,
										"src": "266:12:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2587,
										"name": "CCTPSender",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1948,
										"src": "280:10:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/CCTPAndTokenBase.sol",
							"file": "./CCTPAndTokenBase.sol",
							"id": 2592,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2593,
							"sourceUnit": 1682,
							"src": "316:98:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2589,
										"name": "CCTPAndTokenBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 849,
										"src": "324:16:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2590,
										"name": "CCTPAndTokenReceiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1681,
										"src": "342:20:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2591,
										"name": "CCTPAndTokenSender",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1272,
										"src": "364:18:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "0:418:10"
				},
				"id": 10
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol": {
				"ast": {
					"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol",
					"exportedSymbols": {
						"IMessageTransmitter": [
							2602
						],
						"IReceiver": [
							2616
						],
						"IRelayer": [
							2658
						]
					},
					"id": 2603,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2594,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "634:23:11"
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol",
							"file": "./IRelayer.sol",
							"id": 2595,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2603,
							"sourceUnit": 2659,
							"src": "661:24:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol",
							"file": "./IReceiver.sol",
							"id": 2596,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2603,
							"sourceUnit": 2617,
							"src": "687:25:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2598,
										"name": "IRelayer",
										"nameLocations": [
											"877:8:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2658,
										"src": "877:8:11"
									},
									"id": 2599,
									"nodeType": "InheritanceSpecifier",
									"src": "877:8:11"
								},
								{
									"baseName": {
										"id": 2600,
										"name": "IReceiver",
										"nameLocations": [
											"887:9:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2616,
										"src": "887:9:11"
									},
									"id": 2601,
									"nodeType": "InheritanceSpecifier",
									"src": "887:9:11"
								}
							],
							"canonicalName": "IMessageTransmitter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2597,
								"nodeType": "StructuredDocumentation",
								"src": "716:126:11",
								"text": " @title IMessageTransmitter\n @notice Interface for message transmitters, which both relay and receive messages."
							},
							"fullyImplemented": false,
							"id": 2602,
							"linearizedBaseContracts": [
								2602,
								2616,
								2658
							],
							"name": "IMessageTransmitter",
							"nameLocation": "854:19:11",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2603,
							"src": "844:59:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "634:271:11"
				},
				"id": 11
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol": {
				"ast": {
					"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IReceiver.sol",
					"exportedSymbols": {
						"IReceiver": [
							2616
						]
					},
					"id": 2617,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2604,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "634:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IReceiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2605,
								"nodeType": "StructuredDocumentation",
								"src": "661:128:12",
								"text": " @title IReceiver\n @notice Receives messages on destination chain and forwards them to IMessageDestinationHandler"
							},
							"fullyImplemented": false,
							"id": 2616,
							"linearizedBaseContracts": [
								2616
							],
							"name": "IReceiver",
							"nameLocation": "801:9:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2606,
										"nodeType": "StructuredDocumentation",
										"src": "818:283:12",
										"text": " @notice Receives an incoming message, validating the header and passing\n the body to application-specific handler.\n @param message The message raw bytes\n @param signature The message signature\n @return success bool, true if successful"
									},
									"functionSelector": "57ecfd28",
									"id": 2615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "receiveMessage",
									"nameLocation": "1116:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2608,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1146:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "1131:22:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2607,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1131:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1170:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "1155:24:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2609,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1155:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1130:50:12"
									},
									"returnParameters": {
										"id": 2614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1222:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "1217:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2612,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1217:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1216:14:12"
									},
									"scope": 2616,
									"src": "1107:124:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2617,
							"src": "791:443:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "634:602:12"
				},
				"id": 12
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol": {
				"ast": {
					"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/IRelayer.sol",
					"exportedSymbols": {
						"IRelayer": [
							2658
						]
					},
					"id": 2659,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2618,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "634:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRelayer",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2619,
								"nodeType": "StructuredDocumentation",
								"src": "661:96:13",
								"text": " @title IRelayer\n @notice Sends messages from source domain to destination domain"
							},
							"fullyImplemented": false,
							"id": 2658,
							"linearizedBaseContracts": [
								2658
							],
							"name": "IRelayer",
							"nameLocation": "769:8:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2620,
										"nodeType": "StructuredDocumentation",
										"src": "785:429:13",
										"text": " @notice Sends an outgoing message from the source domain.\n @dev Increment nonce, format the message, and emit `MessageSent` event with message information.\n @param destinationDomain Domain of destination chain\n @param recipient Address of message recipient on destination domain as bytes32\n @param messageBody Raw bytes content of message\n @return nonce reserved by message"
									},
									"functionSelector": "0ba469bc",
									"id": 2631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendMessage",
									"nameLocation": "1229:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "destinationDomain",
												"nameLocation": "1258:17:13",
												"nodeType": "VariableDeclaration",
												"scope": 2631,
												"src": "1251:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2621,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1251:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2624,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1294:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2631,
												"src": "1286:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2623,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "messageBody",
												"nameLocation": "1329:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2631,
												"src": "1314:26:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2625,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1314:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:107:13"
									},
									"returnParameters": {
										"id": 2630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2631,
												"src": "1366:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2628,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1366:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1365:8:13"
									},
									"scope": 2658,
									"src": "1220:154:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2632,
										"nodeType": "StructuredDocumentation",
										"src": "1382:901:13",
										"text": " @notice Sends an outgoing message from the source domain, with a specified caller on the\n destination domain.\n @dev Increment nonce, format the message, and emit `MessageSent` event with message information.\n WARNING: if the `destinationCaller` does not represent a valid address as bytes32, then it will not be possible\n to broadcast the message on the destination domain. This is an advanced feature, and the standard\n sendMessage() should be preferred for use cases where a specific destination caller is not required.\n @param destinationDomain Domain of destination chain\n @param recipient Address of message recipient on destination domain as bytes32\n @param destinationCaller caller on the destination domain, as bytes32\n @param messageBody Raw bytes content of message\n @return nonce reserved by message"
									},
									"functionSelector": "f7259a75",
									"id": 2645,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendMessageWithCaller",
									"nameLocation": "2298:21:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2634,
												"mutability": "mutable",
												"name": "destinationDomain",
												"nameLocation": "2337:17:13",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "2330:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2633,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2330:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2636,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2373:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "2365:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2635,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2365:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2638,
												"mutability": "mutable",
												"name": "destinationCaller",
												"nameLocation": "2401:17:13",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "2393:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2637,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2393:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2640,
												"mutability": "mutable",
												"name": "messageBody",
												"nameLocation": "2444:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "2429:26:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2429:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2319:143:13"
									},
									"returnParameters": {
										"id": 2644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2645,
												"src": "2481:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2642,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2481:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:8:13"
									},
									"scope": 2658,
									"src": "2289:200:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2646,
										"nodeType": "StructuredDocumentation",
										"src": "2497:443:13",
										"text": " @notice Replace a message with a new message body and/or destination caller.\n @dev The `originalAttestation` must be a valid attestation of `originalMessage`.\n @param originalMessage original message to replace\n @param originalAttestation attestation of `originalMessage`\n @param newMessageBody new message body of replaced message\n @param newDestinationCaller the new destination caller"
									},
									"functionSelector": "b857b774",
									"id": 2657,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "replaceMessage",
									"nameLocation": "2955:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2648,
												"mutability": "mutable",
												"name": "originalMessage",
												"nameLocation": "2995:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "2980:30:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2647,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2980:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2650,
												"mutability": "mutable",
												"name": "originalAttestation",
												"nameLocation": "3036:19:13",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "3021:34:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2649,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3021:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "newMessageBody",
												"nameLocation": "3081:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "3066:29:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2651,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3066:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "newDestinationCaller",
												"nameLocation": "3114:20:13",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "3106:28:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2653,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3106:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2969:172:13"
									},
									"returnParameters": {
										"id": 2656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3150:0:13"
									},
									"scope": 2658,
									"src": "2946:205:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2659,
							"src": "759:2395:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "634:2522:13"
				},
				"id": 13
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol": {
				"ast": {
					"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/CCTPInterfaces/ITokenMessenger.sol",
					"exportedSymbols": {
						"ITokenMessenger": [
							2677
						]
					},
					"id": 2678,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2660,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITokenMessenger",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2677,
							"linearizedBaseContracts": [
								2677
							],
							"name": "ITokenMessenger",
							"nameLocation": "39:15:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2661,
										"nodeType": "StructuredDocumentation",
										"src": "61:1402:14",
										"text": " @notice Deposits and burns tokens from sender to be minted on destination domain. The mint\n on the destination domain must be called by `destinationCaller`.\n WARNING: if the `destinationCaller` does not represent a valid address as bytes32, then it will not be possible\n to broadcast the message on the destination domain. This is an advanced feature, and the standard\n depositForBurn() should be preferred for use cases where a specific destination caller is not required.\n Emits a `DepositForBurn` event.\n @dev reverts if:\n - given destinationCaller is zero address\n - given burnToken is not supported\n - given destinationDomain has no TokenMessenger registered\n - transferFrom() reverts. For example, if sender's burnToken balance or approved allowance\n to this contract is less than `amount`.\n - burn() reverts. For example, if `amount` is 0.\n - MessageTransmitter returns false or reverts.\n @param amount amount of tokens to burn\n @param destinationDomain destination domain\n @param mintRecipient address of mint recipient on destination domain\n @param burnToken address of contract to burn deposited tokens, on local domain\n @param destinationCaller caller on the destination domain, as bytes32\n @return nonce unique nonce reserved by message"
									},
									"functionSelector": "f856ddb6",
									"id": 2676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositForBurnWithCaller",
									"nameLocation": "1478:24:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2663,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1521:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2676,
												"src": "1513:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1513:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2665,
												"mutability": "mutable",
												"name": "destinationDomain",
												"nameLocation": "1545:17:14",
												"nodeType": "VariableDeclaration",
												"scope": 2676,
												"src": "1538:24:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2664,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1538:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "mintRecipient",
												"nameLocation": "1581:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 2676,
												"src": "1573:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2666,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "burnToken",
												"nameLocation": "1613:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2676,
												"src": "1605:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1605:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2671,
												"mutability": "mutable",
												"name": "destinationCaller",
												"nameLocation": "1641:17:14",
												"nodeType": "VariableDeclaration",
												"scope": 2676,
												"src": "1633:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2670,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1633:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:163:14"
									},
									"returnParameters": {
										"id": 2675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2674,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1691:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2676,
												"src": "1684:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2673,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1684:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:14:14"
									},
									"scope": 2677,
									"src": "1469:229:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2678,
							"src": "29:1672:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "2:1701:14"
				},
				"id": 14
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							2755
						]
					},
					"id": 2756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2679,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2680,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:15",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 2755,
							"linearizedBaseContracts": [
								2755
							],
							"name": "IERC20",
							"nameLocation": "220:6:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2681,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:15",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2689,
									"name": "Transfer",
									"nameLocation": "409:8:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2683,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "434:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2689,
												"src": "418:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2685,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "456:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2689,
												"src": "440:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2687,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2689,
												"src": "460:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:15"
									},
									"src": "403:72:15"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2690,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:15",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2698,
									"name": "Approval",
									"nameLocation": "646:8:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2692,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "671:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "655:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2694,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "694:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "678:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2696,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "711:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2698,
												"src": "703:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:15"
									},
									"src": "640:78:15"
								},
								{
									"documentation": {
										"id": 2699,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:15",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2704,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:15"
									},
									"returnParameters": {
										"id": 2703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "846:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:15"
									},
									"scope": 2755,
									"src": "800:55:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2705,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:15",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2712,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "952:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2707,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2712,
												"src": "962:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:15"
									},
									"returnParameters": {
										"id": 2711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2712,
												"src": "1002:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:15"
									},
									"scope": 2755,
									"src": "943:68:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2713,
										"nodeType": "StructuredDocumentation",
										"src": "1019:208:15",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2722,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1242:8:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2715,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1259:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "1251:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1271:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "1263:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:28:15"
									},
									"returnParameters": {
										"id": 2721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "1297:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2719,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:6:15"
									},
									"scope": 2755,
									"src": "1233:70:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2723,
										"nodeType": "StructuredDocumentation",
										"src": "1311:270:15",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2732,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1596:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1614:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2732,
												"src": "1606:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1629:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2732,
												"src": "1621:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:32:15"
									},
									"returnParameters": {
										"id": 2731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2732,
												"src": "1661:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:9:15"
									},
									"scope": 2755,
									"src": "1587:83:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2733,
										"nodeType": "StructuredDocumentation",
										"src": "1678:655:15",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2348:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2735,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2364:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "2356:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2737,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2381:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "2373:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:33:15"
									},
									"returnParameters": {
										"id": 2741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "2407:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2739,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2407:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:6:15"
									},
									"scope": 2755,
									"src": "2339:74:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2743,
										"nodeType": "StructuredDocumentation",
										"src": "2421:295:15",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2731:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2745,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2752:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2754,
												"src": "2744:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2744:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2766:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2754,
												"src": "2758:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2758:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2778:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2754,
												"src": "2770:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:42:15"
									},
									"returnParameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2754,
												"src": "2804:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2751,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2804:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2803:6:15"
									},
									"scope": 2755,
									"src": "2722:88:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2756,
							"src": "210:2603:15",
							"usedErrors": [],
							"usedEvents": [
								2689,
								2698
							]
						}
					],
					"src": "109:2706:15"
				},
				"id": 15
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/ITokenBridge.sol": {
				"ast": {
					"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/ITokenBridge.sol",
					"exportedSymbols": {
						"IERC20": [
							2755
						],
						"ITokenBridge": [
							3155
						],
						"IWETH": [
							3169
						],
						"IWormhole": [
							3485
						]
					},
					"id": 3156,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "65:23:16"
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IWETH.sol",
							"file": "./IWETH.sol",
							"id": 2758,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3156,
							"sourceUnit": 3170,
							"src": "92:21:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol",
							"file": "./IWormhole.sol",
							"id": 2759,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3156,
							"sourceUnit": 3486,
							"src": "115:25:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITokenBridge",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3155,
							"linearizedBaseContracts": [
								3155
							],
							"name": "ITokenBridge",
							"nameLocation": "154:12:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ITokenBridge.Transfer",
									"id": 2774,
									"members": [
										{
											"constant": false,
											"id": 2761,
											"mutability": "mutable",
											"name": "payloadID",
											"nameLocation": "207:9:16",
											"nodeType": "VariableDeclaration",
											"scope": 2774,
											"src": "201:15:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2760,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "201:5:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2763,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "235:6:16",
											"nodeType": "VariableDeclaration",
											"scope": 2774,
											"src": "227:14:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2762,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "227:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2765,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "260:12:16",
											"nodeType": "VariableDeclaration",
											"scope": 2774,
											"src": "252:20:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2764,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "252:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2767,
											"mutability": "mutable",
											"name": "tokenChain",
											"nameLocation": "290:10:16",
											"nodeType": "VariableDeclaration",
											"scope": 2774,
											"src": "283:17:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2766,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "283:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2769,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "319:2:16",
											"nodeType": "VariableDeclaration",
											"scope": 2774,
											"src": "311:10:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2768,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "311:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2771,
											"mutability": "mutable",
											"name": "toChain",
											"nameLocation": "339:7:16",
											"nodeType": "VariableDeclaration",
											"scope": 2774,
											"src": "332:14:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2770,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "332:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2773,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "365:3:16",
											"nodeType": "VariableDeclaration",
											"scope": 2774,
											"src": "357:11:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2772,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "357:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Transfer",
									"nameLocation": "181:8:16",
									"nodeType": "StructDefinition",
									"scope": 3155,
									"src": "174:202:16",
									"visibility": "public"
								},
								{
									"canonicalName": "ITokenBridge.TransferWithPayload",
									"id": 2791,
									"members": [
										{
											"constant": false,
											"id": 2776,
											"mutability": "mutable",
											"name": "payloadID",
											"nameLocation": "428:9:16",
											"nodeType": "VariableDeclaration",
											"scope": 2791,
											"src": "422:15:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2775,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "422:5:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2778,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "456:6:16",
											"nodeType": "VariableDeclaration",
											"scope": 2791,
											"src": "448:14:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2777,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "448:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2780,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "481:12:16",
											"nodeType": "VariableDeclaration",
											"scope": 2791,
											"src": "473:20:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2779,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "473:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2782,
											"mutability": "mutable",
											"name": "tokenChain",
											"nameLocation": "511:10:16",
											"nodeType": "VariableDeclaration",
											"scope": 2791,
											"src": "504:17:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2781,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "504:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2784,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "540:2:16",
											"nodeType": "VariableDeclaration",
											"scope": 2791,
											"src": "532:10:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2783,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "532:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2786,
											"mutability": "mutable",
											"name": "toChain",
											"nameLocation": "560:7:16",
											"nodeType": "VariableDeclaration",
											"scope": 2791,
											"src": "553:14:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2785,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "553:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2788,
											"mutability": "mutable",
											"name": "fromAddress",
											"nameLocation": "586:11:16",
											"nodeType": "VariableDeclaration",
											"scope": 2791,
											"src": "578:19:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2787,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "578:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2790,
											"mutability": "mutable",
											"name": "payload",
											"nameLocation": "614:7:16",
											"nodeType": "VariableDeclaration",
											"scope": 2791,
											"src": "608:13:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2789,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "608:5:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TransferWithPayload",
									"nameLocation": "391:19:16",
									"nodeType": "StructDefinition",
									"scope": 3155,
									"src": "384:245:16",
									"visibility": "public"
								},
								{
									"canonicalName": "ITokenBridge.AssetMeta",
									"id": 2804,
									"members": [
										{
											"constant": false,
											"id": 2793,
											"mutability": "mutable",
											"name": "payloadID",
											"nameLocation": "671:9:16",
											"nodeType": "VariableDeclaration",
											"scope": 2804,
											"src": "665:15:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2792,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "665:5:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2795,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "699:12:16",
											"nodeType": "VariableDeclaration",
											"scope": 2804,
											"src": "691:20:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2794,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "691:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2797,
											"mutability": "mutable",
											"name": "tokenChain",
											"nameLocation": "729:10:16",
											"nodeType": "VariableDeclaration",
											"scope": 2804,
											"src": "722:17:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2796,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "722:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2799,
											"mutability": "mutable",
											"name": "decimals",
											"nameLocation": "756:8:16",
											"nodeType": "VariableDeclaration",
											"scope": 2804,
											"src": "750:14:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2798,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "750:5:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2801,
											"mutability": "mutable",
											"name": "symbol",
											"nameLocation": "783:6:16",
											"nodeType": "VariableDeclaration",
											"scope": 2804,
											"src": "775:14:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2800,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "775:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2803,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "808:4:16",
											"nodeType": "VariableDeclaration",
											"scope": 2804,
											"src": "800:12:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2802,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "800:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AssetMeta",
									"nameLocation": "644:9:16",
									"nodeType": "StructDefinition",
									"scope": 3155,
									"src": "637:183:16",
									"visibility": "public"
								},
								{
									"canonicalName": "ITokenBridge.RegisterChain",
									"id": 2815,
									"members": [
										{
											"constant": false,
											"id": 2806,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "868:6:16",
											"nodeType": "VariableDeclaration",
											"scope": 2815,
											"src": "860:14:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2805,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "860:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2808,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "891:6:16",
											"nodeType": "VariableDeclaration",
											"scope": 2815,
											"src": "885:12:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2807,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "885:5:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2810,
											"mutability": "mutable",
											"name": "chainId",
											"nameLocation": "915:7:16",
											"nodeType": "VariableDeclaration",
											"scope": 2815,
											"src": "908:14:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2809,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "908:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2812,
											"mutability": "mutable",
											"name": "emitterChainID",
											"nameLocation": "940:14:16",
											"nodeType": "VariableDeclaration",
											"scope": 2815,
											"src": "933:21:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2811,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "933:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2814,
											"mutability": "mutable",
											"name": "emitterAddress",
											"nameLocation": "973:14:16",
											"nodeType": "VariableDeclaration",
											"scope": 2815,
											"src": "965:22:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2813,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "965:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RegisterChain",
									"nameLocation": "835:13:16",
									"nodeType": "StructDefinition",
									"scope": 3155,
									"src": "828:167:16",
									"visibility": "public"
								},
								{
									"canonicalName": "ITokenBridge.UpgradeContract",
									"id": 2824,
									"members": [
										{
											"constant": false,
											"id": 2817,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "1045:6:16",
											"nodeType": "VariableDeclaration",
											"scope": 2824,
											"src": "1037:14:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2816,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1037:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2819,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "1068:6:16",
											"nodeType": "VariableDeclaration",
											"scope": 2824,
											"src": "1062:12:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2818,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1062:5:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2821,
											"mutability": "mutable",
											"name": "chainId",
											"nameLocation": "1092:7:16",
											"nodeType": "VariableDeclaration",
											"scope": 2824,
											"src": "1085:14:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2820,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1085:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2823,
											"mutability": "mutable",
											"name": "newContract",
											"nameLocation": "1118:11:16",
											"nodeType": "VariableDeclaration",
											"scope": 2824,
											"src": "1110:19:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2822,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1110:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UpgradeContract",
									"nameLocation": "1010:15:16",
									"nodeType": "StructDefinition",
									"scope": 3155,
									"src": "1003:134:16",
									"visibility": "public"
								},
								{
									"canonicalName": "ITokenBridge.RecoverChainId",
									"id": 2833,
									"members": [
										{
											"constant": false,
											"id": 2826,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "1186:6:16",
											"nodeType": "VariableDeclaration",
											"scope": 2833,
											"src": "1178:14:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2825,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1178:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2828,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "1209:6:16",
											"nodeType": "VariableDeclaration",
											"scope": 2833,
											"src": "1203:12:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2827,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1203:5:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2830,
											"mutability": "mutable",
											"name": "evmChainId",
											"nameLocation": "1234:10:16",
											"nodeType": "VariableDeclaration",
											"scope": 2833,
											"src": "1226:18:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2829,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1226:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2832,
											"mutability": "mutable",
											"name": "newChainId",
											"nameLocation": "1262:10:16",
											"nodeType": "VariableDeclaration",
											"scope": 2833,
											"src": "1255:17:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2831,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1255:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RecoverChainId",
									"nameLocation": "1152:14:16",
									"nodeType": "StructDefinition",
									"scope": 3155,
									"src": "1145:135:16",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a49",
									"id": 2839,
									"name": "ContractUpgraded",
									"nameLocation": "1294:16:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2835,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldContract",
												"nameLocation": "1327:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2839,
												"src": "1311:27:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2837,
												"indexed": true,
												"mutability": "mutable",
												"name": "newContract",
												"nameLocation": "1356:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2839,
												"src": "1340:27:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:58:16"
									},
									"src": "1288:81:16"
								},
								{
									"functionSelector": "e89bc401",
									"id": 2847,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_parseTransferCommon",
									"nameLocation": "1386:20:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2841,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "1420:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "1407:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2840,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1407:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:22:16"
									},
									"returnParameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "transfer",
												"nameLocation": "1468:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "1452:24:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Transfer_$2774_memory_ptr",
													"typeString": "struct ITokenBridge.Transfer"
												},
												"typeName": {
													"id": 2844,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2843,
														"name": "Transfer",
														"nameLocations": [
															"1452:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2774,
														"src": "1452:8:16"
													},
													"referencedDeclaration": 2774,
													"src": "1452:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Transfer_$2774_storage_ptr",
														"typeString": "struct ITokenBridge.Transfer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1451:26:16"
									},
									"scope": 3155,
									"src": "1377:101:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c48fa115",
									"id": 2856,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "attestToken",
									"nameLocation": "1495:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2849,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "1515:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2856,
												"src": "1507:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1507:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2851,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1536:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2856,
												"src": "1529:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2850,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1529:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1506:36:16"
									},
									"returnParameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2854,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1576:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2856,
												"src": "1569:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2853,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1569:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1568:17:16"
									},
									"scope": 3155,
									"src": "1486:100:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9981509f",
									"id": 2869,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wrapAndTransferETH",
									"nameLocation": "1603:18:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2858,
												"mutability": "mutable",
												"name": "recipientChain",
												"nameLocation": "1629:14:16",
												"nodeType": "VariableDeclaration",
												"scope": 2869,
												"src": "1622:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2857,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1622:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1653:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2869,
												"src": "1645:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2859,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1645:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2862,
												"mutability": "mutable",
												"name": "arbiterFee",
												"nameLocation": "1672:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2869,
												"src": "1664:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2864,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1691:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2869,
												"src": "1684:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2863,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1684:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:76:16"
									},
									"returnParameters": {
										"id": 2868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2867,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1758:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2869,
												"src": "1751:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2866,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1751:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1750:17:16"
									},
									"scope": 3155,
									"src": "1594:174:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bee9cdfc",
									"id": 2882,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wrapAndTransferETHWithPayload",
									"nameLocation": "1785:29:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2871,
												"mutability": "mutable",
												"name": "recipientChain",
												"nameLocation": "1822:14:16",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "1815:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2870,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1815:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1846:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "1838:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2872,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1864:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "1857:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2874,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1857:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "1884:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "1871:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2876,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1871:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1814:78:16"
									},
									"returnParameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1953:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "1946:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2879,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1946:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1945:17:16"
									},
									"scope": 3155,
									"src": "1776:187:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0f5287b0",
									"id": 2899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "1980:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2884,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2013:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "2005:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2886,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2037:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "2029:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "recipientChain",
												"nameLocation": "2061:14:16",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "2054:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2887,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2054:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2890,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2094:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "2086:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2889,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2892,
												"mutability": "mutable",
												"name": "arbiterFee",
												"nameLocation": "2122:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "2114:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2894,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "2150:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "2143:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2893,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2143:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1994:168:16"
									},
									"returnParameters": {
										"id": 2898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2897,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "2196:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "2189:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2896,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2189:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2188:17:16"
									},
									"scope": 3155,
									"src": "1971:235:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c5a5ebda",
									"id": 2916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokensWithPayload",
									"nameLocation": "2223:25:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2901,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2267:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2916,
												"src": "2259:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2259:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2903,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2291:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2916,
												"src": "2283:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2905,
												"mutability": "mutable",
												"name": "recipientChain",
												"nameLocation": "2315:14:16",
												"nodeType": "VariableDeclaration",
												"scope": 2916,
												"src": "2308:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2904,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2308:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2907,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2348:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2916,
												"src": "2340:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2906,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2340:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2909,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "2375:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2916,
												"src": "2368:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2908,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2368:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2911,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "2404:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2916,
												"src": "2391:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2910,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2391:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:170:16"
									},
									"returnParameters": {
										"id": 2915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2914,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "2452:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2916,
												"src": "2445:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2913,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2445:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2444:17:16"
									},
									"scope": 3155,
									"src": "2214:248:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f768441f",
									"id": 2923,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateWrapped",
									"nameLocation": "2479:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2918,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2506:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2923,
												"src": "2493:22:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2493:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:24:16"
									},
									"returnParameters": {
										"id": 2922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2921,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2543:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2923,
												"src": "2535:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2535:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2534:15:16"
									},
									"scope": 3155,
									"src": "2470:80:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8059810",
									"id": 2930,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createWrapped",
									"nameLocation": "2567:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2925,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2594:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2930,
												"src": "2581:22:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2924,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2581:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2580:24:16"
									},
									"returnParameters": {
										"id": 2929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2928,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2631:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2930,
												"src": "2623:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2623:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2622:15:16"
									},
									"scope": 3155,
									"src": "2558:80:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c3f511c1",
									"id": 2937,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "completeTransferWithPayload",
									"nameLocation": "2655:27:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2932,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2696:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2937,
												"src": "2683:22:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2931,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2683:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:24:16"
									},
									"returnParameters": {
										"id": 2936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2937,
												"src": "2725:12:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2934,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2725:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:14:16"
									},
									"scope": 3155,
									"src": "2646:93:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1c8475e4",
									"id": 2944,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "completeTransferAndUnwrapETHWithPayload",
									"nameLocation": "2756:39:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2939,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2809:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2944,
												"src": "2796:22:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2938,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2796:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:24:16"
									},
									"returnParameters": {
										"id": 2943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2944,
												"src": "2838:12:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2941,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2838:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2837:14:16"
									},
									"scope": 3155,
									"src": "2747:105:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c6878519",
									"id": 2949,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "completeTransfer",
									"nameLocation": "2869:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2946,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2899:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "2886:22:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2945,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2886:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2885:24:16"
									},
									"returnParameters": {
										"id": 2948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2918:0:16"
									},
									"scope": 3155,
									"src": "2860:59:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ff200cde",
									"id": 2954,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "completeTransferAndUnwrapETH",
									"nameLocation": "2936:28:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2951,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2978:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2954,
												"src": "2965:22:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2950,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2965:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:24:16"
									},
									"returnParameters": {
										"id": 2953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2997:0:16"
									},
									"scope": 3155,
									"src": "2927:71:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b046223b",
									"id": 2962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "encodeAssetMeta",
									"nameLocation": "3015:15:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "meta",
												"nameLocation": "3048:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2962,
												"src": "3031:21:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AssetMeta_$2804_memory_ptr",
													"typeString": "struct ITokenBridge.AssetMeta"
												},
												"typeName": {
													"id": 2956,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2955,
														"name": "AssetMeta",
														"nameLocations": [
															"3031:9:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2804,
														"src": "3031:9:16"
													},
													"referencedDeclaration": 2804,
													"src": "3031:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AssetMeta_$2804_storage_ptr",
														"typeString": "struct ITokenBridge.AssetMeta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3030:23:16"
									},
									"returnParameters": {
										"id": 2961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2960,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3090:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2962,
												"src": "3077:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2959,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3077:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3076:22:16"
									},
									"scope": 3155,
									"src": "3006:93:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5f854266",
									"id": 2970,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "encodeTransfer",
									"nameLocation": "3116:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2965,
												"mutability": "mutable",
												"name": "transfer",
												"nameLocation": "3147:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2970,
												"src": "3131:24:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Transfer_$2774_memory_ptr",
													"typeString": "struct ITokenBridge.Transfer"
												},
												"typeName": {
													"id": 2964,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2963,
														"name": "Transfer",
														"nameLocations": [
															"3131:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2774,
														"src": "3131:8:16"
													},
													"referencedDeclaration": 2774,
													"src": "3131:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Transfer_$2774_storage_ptr",
														"typeString": "struct ITokenBridge.Transfer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3130:26:16"
									},
									"returnParameters": {
										"id": 2969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2968,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3193:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2970,
												"src": "3180:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2967,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3180:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:22:16"
									},
									"scope": 3155,
									"src": "3107:95:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d56e2e24",
									"id": 2978,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "encodeTransferWithPayload",
									"nameLocation": "3219:25:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2973,
												"mutability": "mutable",
												"name": "transfer",
												"nameLocation": "3272:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2978,
												"src": "3245:35:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TransferWithPayload_$2791_memory_ptr",
													"typeString": "struct ITokenBridge.TransferWithPayload"
												},
												"typeName": {
													"id": 2972,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2971,
														"name": "TransferWithPayload",
														"nameLocations": [
															"3245:19:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2791,
														"src": "3245:19:16"
													},
													"referencedDeclaration": 2791,
													"src": "3245:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TransferWithPayload_$2791_storage_ptr",
														"typeString": "struct ITokenBridge.TransferWithPayload"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3244:37:16"
									},
									"returnParameters": {
										"id": 2977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2976,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3345:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2978,
												"src": "3332:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2975,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3332:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3331:22:16"
									},
									"scope": 3155,
									"src": "3210:144:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0f509008",
									"id": 2985,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parsePayloadID",
									"nameLocation": "3371:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2980,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3399:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2985,
												"src": "3386:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2979,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3386:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:22:16"
									},
									"returnParameters": {
										"id": 2984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2983,
												"mutability": "mutable",
												"name": "payloadID",
												"nameLocation": "3437:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2985,
												"src": "3431:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2982,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3431:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3430:17:16"
									},
									"scope": 3155,
									"src": "3362:86:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "07dfd8fb",
									"id": 2993,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseAssetMeta",
									"nameLocation": "3465:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2987,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3493:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "3480:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2986,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3480:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:22:16"
									},
									"returnParameters": {
										"id": 2992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2991,
												"mutability": "mutable",
												"name": "meta",
												"nameLocation": "3542:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "3525:21:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AssetMeta_$2804_memory_ptr",
													"typeString": "struct ITokenBridge.AssetMeta"
												},
												"typeName": {
													"id": 2990,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2989,
														"name": "AssetMeta",
														"nameLocations": [
															"3525:9:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2804,
														"src": "3525:9:16"
													},
													"referencedDeclaration": 2804,
													"src": "3525:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AssetMeta_$2804_storage_ptr",
														"typeString": "struct ITokenBridge.AssetMeta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3524:23:16"
									},
									"scope": 3155,
									"src": "3456:92:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2b511375",
									"id": 3001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseTransfer",
									"nameLocation": "3565:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2995,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3592:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3001,
												"src": "3579:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2994,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3579:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3578:22:16"
									},
									"returnParameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "transfer",
												"nameLocation": "3640:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3001,
												"src": "3624:24:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Transfer_$2774_memory_ptr",
													"typeString": "struct ITokenBridge.Transfer"
												},
												"typeName": {
													"id": 2998,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2997,
														"name": "Transfer",
														"nameLocations": [
															"3624:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2774,
														"src": "3624:8:16"
													},
													"referencedDeclaration": 2774,
													"src": "3624:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Transfer_$2774_storage_ptr",
														"typeString": "struct ITokenBridge.Transfer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3623:26:16"
									},
									"scope": 3155,
									"src": "3556:94:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ea63738d",
									"id": 3009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseTransferWithPayload",
									"nameLocation": "3667:24:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3003,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3705:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3009,
												"src": "3692:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3002,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3692:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3691:22:16"
									},
									"returnParameters": {
										"id": 3008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3007,
												"mutability": "mutable",
												"name": "transfer",
												"nameLocation": "3791:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3009,
												"src": "3764:35:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TransferWithPayload_$2791_memory_ptr",
													"typeString": "struct ITokenBridge.TransferWithPayload"
												},
												"typeName": {
													"id": 3006,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3005,
														"name": "TransferWithPayload",
														"nameLocations": [
															"3764:19:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2791,
														"src": "3764:19:16"
													},
													"referencedDeclaration": 2791,
													"src": "3764:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TransferWithPayload_$2791_storage_ptr",
														"typeString": "struct ITokenBridge.TransferWithPayload"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3763:37:16"
									},
									"scope": 3155,
									"src": "3658:143:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2c3c02a4",
									"id": 3016,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceActionIsConsumed",
									"nameLocation": "3818:26:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3011,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3853:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 3016,
												"src": "3845:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3010,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3845:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3844:14:16"
									},
									"returnParameters": {
										"id": 3015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3016,
												"src": "3882:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3013,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3882:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3881:6:16"
									},
									"scope": 3155,
									"src": "3809:79:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d60b347f",
									"id": 3023,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isInitialized",
									"nameLocation": "3905:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3018,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "3927:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 3023,
												"src": "3919:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:14:16"
									},
									"returnParameters": {
										"id": 3022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3023,
												"src": "3956:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3020,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3956:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3955:6:16"
									},
									"scope": 3155,
									"src": "3896:66:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aa4efa5b",
									"id": 3030,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isTransferCompleted",
									"nameLocation": "3979:19:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3025,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4007:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 3030,
												"src": "3999:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3024,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3999:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:16"
									},
									"returnParameters": {
										"id": 3029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3030,
												"src": "4036:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3027,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4036:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4035:6:16"
									},
									"scope": 3155,
									"src": "3970:72:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "84acd1bb",
									"id": 3036,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wormhole",
									"nameLocation": "4059:8:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4067:2:16"
									},
									"returnParameters": {
										"id": 3035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3036,
												"src": "4093:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IWormhole_$3485",
													"typeString": "contract IWormhole"
												},
												"typeName": {
													"id": 3033,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3032,
														"name": "IWormhole",
														"nameLocations": [
															"4093:9:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3485,
														"src": "4093:9:16"
													},
													"referencedDeclaration": 3485,
													"src": "4093:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWormhole_$3485",
														"typeString": "contract IWormhole"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4092:11:16"
									},
									"scope": 3155,
									"src": "4050:54:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a8a0592",
									"id": 3041,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "chainId",
									"nameLocation": "4121:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4128:2:16"
									},
									"returnParameters": {
										"id": 3040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3041,
												"src": "4154:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3038,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4154:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4153:8:16"
									},
									"scope": 3155,
									"src": "4112:50:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "64d42b17",
									"id": 3046,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "evmChainId",
									"nameLocation": "4179:10:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4189:2:16"
									},
									"returnParameters": {
										"id": 3045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3046,
												"src": "4215:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4215:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4214:9:16"
									},
									"scope": 3155,
									"src": "4170:54:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e039f224",
									"id": 3051,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isFork",
									"nameLocation": "4241:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4247:2:16"
									},
									"returnParameters": {
										"id": 3050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3051,
												"src": "4273:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3048,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4273:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4272:6:16"
									},
									"scope": 3155,
									"src": "4232:47:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fbe3c2cd",
									"id": 3056,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceChainId",
									"nameLocation": "4296:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4313:2:16"
									},
									"returnParameters": {
										"id": 3055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3056,
												"src": "4339:6:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3053,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4339:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4338:8:16"
									},
									"scope": 3155,
									"src": "4287:60:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b172b222",
									"id": 3061,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceContract",
									"nameLocation": "4364:18:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4382:2:16"
									},
									"returnParameters": {
										"id": 3060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3061,
												"src": "4408:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3058,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4408:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4407:9:16"
									},
									"scope": 3155,
									"src": "4355:62:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1ff1e286",
									"id": 3070,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wrappedAsset",
									"nameLocation": "4434:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3063,
												"mutability": "mutable",
												"name": "tokenChainId",
												"nameLocation": "4454:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 3070,
												"src": "4447:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3062,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4447:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3065,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "4476:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 3070,
												"src": "4468:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3064,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4468:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4446:43:16"
									},
									"returnParameters": {
										"id": 3069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3070,
												"src": "4513:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4513:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4512:9:16"
									},
									"scope": 3155,
									"src": "4425:97:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad66a5f1",
									"id": 3077,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bridgeContracts",
									"nameLocation": "4539:15:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3072,
												"mutability": "mutable",
												"name": "chainId_",
												"nameLocation": "4562:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3077,
												"src": "4555:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3071,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4555:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4554:17:16"
									},
									"returnParameters": {
										"id": 3076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3077,
												"src": "4595:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3074,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4595:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4594:9:16"
									},
									"scope": 3155,
									"src": "4530:74:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2f3a3d5d",
									"id": 3082,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenImplementation",
									"nameLocation": "4621:19:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4640:2:16"
									},
									"returnParameters": {
										"id": 3081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3082,
												"src": "4666:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4665:9:16"
									},
									"scope": 3155,
									"src": "4612:63:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 3088,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "4692:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4696:2:16"
									},
									"returnParameters": {
										"id": 3087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3088,
												"src": "4722:5:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IWETH_$3169",
													"typeString": "contract IWETH"
												},
												"typeName": {
													"id": 3085,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3084,
														"name": "IWETH",
														"nameLocations": [
															"4722:5:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3169,
														"src": "4722:5:16"
													},
													"referencedDeclaration": 3169,
													"src": "4722:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWETH_$3169",
														"typeString": "contract IWETH"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4721:7:16"
									},
									"scope": 3155,
									"src": "4683:46:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b96c7e4d",
									"id": 3095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "outstandingBridged",
									"nameLocation": "4746:18:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3090,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4773:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3095,
												"src": "4765:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4765:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4764:15:16"
									},
									"returnParameters": {
										"id": 3094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3095,
												"src": "4803:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4803:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:9:16"
									},
									"scope": 3155,
									"src": "4737:75:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1a2be4da",
									"id": 3102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isWrappedAsset",
									"nameLocation": "4829:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3097,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4852:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3102,
												"src": "4844:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:15:16"
									},
									"returnParameters": {
										"id": 3101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3102,
												"src": "4882:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3099,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4882:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4881:6:16"
									},
									"scope": 3155,
									"src": "4820:68:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "739fc8d1",
									"id": 3107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "finality",
									"nameLocation": "4905:8:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4913:2:16"
									},
									"returnParameters": {
										"id": 3106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3107,
												"src": "4939:5:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3104,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4939:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4938:7:16"
									},
									"scope": 3155,
									"src": "4896:50:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c60da1b",
									"id": 3112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "4963:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4977:2:16"
									},
									"returnParameters": {
										"id": 3111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3112,
												"src": "5003:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5003:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5002:9:16"
									},
									"scope": 3155,
									"src": "4954:58:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8129fc1c",
									"id": 3115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "5029:10:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5039:2:16"
									},
									"returnParameters": {
										"id": 3114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5050:0:16"
									},
									"scope": 3155,
									"src": "5020:31:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a5799f93",
									"id": 3120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerChain",
									"nameLocation": "5068:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3117,
												"mutability": "mutable",
												"name": "encodedVM",
												"nameLocation": "5095:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 3120,
												"src": "5082:22:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3116,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5082:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5081:24:16"
									},
									"returnParameters": {
										"id": 3119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5114:0:16"
									},
									"scope": 3155,
									"src": "5059:56:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "25394645",
									"id": 3125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "upgrade",
									"nameLocation": "5132:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3122,
												"mutability": "mutable",
												"name": "encodedVM",
												"nameLocation": "5153:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 3125,
												"src": "5140:22:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5140:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5139:24:16"
									},
									"returnParameters": {
										"id": 3124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5172:0:16"
									},
									"scope": 3155,
									"src": "5123:50:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "178149e7",
									"id": 3130,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitRecoverChainId",
									"nameLocation": "5190:20:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3127,
												"mutability": "mutable",
												"name": "encodedVM",
												"nameLocation": "5224:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 3130,
												"src": "5211:22:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5211:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:24:16"
									},
									"returnParameters": {
										"id": 3129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5243:0:16"
									},
									"scope": 3155,
									"src": "5181:63:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "01f53255",
									"id": 3138,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseRegisterChain",
									"nameLocation": "5261:18:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3132,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "5293:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "5280:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3131,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5280:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5279:22:16"
									},
									"returnParameters": {
										"id": 3137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3136,
												"mutability": "mutable",
												"name": "chain",
												"nameLocation": "5346:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "5325:26:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RegisterChain_$2815_memory_ptr",
													"typeString": "struct ITokenBridge.RegisterChain"
												},
												"typeName": {
													"id": 3135,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3134,
														"name": "RegisterChain",
														"nameLocations": [
															"5325:13:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2815,
														"src": "5325:13:16"
													},
													"referencedDeclaration": 2815,
													"src": "5325:13:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RegisterChain_$2815_storage_ptr",
														"typeString": "struct ITokenBridge.RegisterChain"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:28:16"
									},
									"scope": 3155,
									"src": "5252:101:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fbeeacd9",
									"id": 3146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseUpgrade",
									"nameLocation": "5370:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3140,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "5396:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3146,
												"src": "5383:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3139,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5383:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5382:22:16"
									},
									"returnParameters": {
										"id": 3145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3144,
												"mutability": "mutable",
												"name": "chain",
												"nameLocation": "5451:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3146,
												"src": "5428:28:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UpgradeContract_$2824_memory_ptr",
													"typeString": "struct ITokenBridge.UpgradeContract"
												},
												"typeName": {
													"id": 3143,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3142,
														"name": "UpgradeContract",
														"nameLocations": [
															"5428:15:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2824,
														"src": "5428:15:16"
													},
													"referencedDeclaration": 2824,
													"src": "5428:15:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UpgradeContract_$2824_storage_ptr",
														"typeString": "struct ITokenBridge.UpgradeContract"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5427:30:16"
									},
									"scope": 3155,
									"src": "5361:97:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cb4cfea8",
									"id": 3154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseRecoverChainId",
									"nameLocation": "5475:19:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3148,
												"mutability": "mutable",
												"name": "encodedRecoverChainId",
												"nameLocation": "5508:21:16",
												"nodeType": "VariableDeclaration",
												"scope": 3154,
												"src": "5495:34:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3147,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:36:16"
									},
									"returnParameters": {
										"id": 3153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3152,
												"mutability": "mutable",
												"name": "rci",
												"nameLocation": "5603:3:16",
												"nodeType": "VariableDeclaration",
												"scope": 3154,
												"src": "5581:25:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RecoverChainId_$2833_memory_ptr",
													"typeString": "struct ITokenBridge.RecoverChainId"
												},
												"typeName": {
													"id": 3151,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3150,
														"name": "RecoverChainId",
														"nameLocations": [
															"5581:14:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2833,
														"src": "5581:14:16"
													},
													"referencedDeclaration": 2833,
													"src": "5581:14:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RecoverChainId_$2833_storage_ptr",
														"typeString": "struct ITokenBridge.RecoverChainId"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5580:27:16"
									},
									"scope": 3155,
									"src": "5466:142:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3156,
							"src": "144:5467:16",
							"usedErrors": [],
							"usedEvents": [
								2839
							]
						}
					],
					"src": "65:5548:16"
				},
				"id": 16
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/IWETH.sol": {
				"ast": {
					"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IWETH.sol",
					"exportedSymbols": {
						"IERC20": [
							2755
						],
						"IWETH": [
							3169
						]
					},
					"id": 3170,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3157,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "65:23:17"
						},
						{
							"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3158,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3170,
							"sourceUnit": 2756,
							"src": "92:22:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3159,
										"name": "IERC20",
										"nameLocations": [
											"137:6:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2755,
										"src": "137:6:17"
									},
									"id": 3160,
									"nodeType": "InheritanceSpecifier",
									"src": "137:6:17"
								}
							],
							"canonicalName": "IWETH",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3169,
							"linearizedBaseContracts": [
								3169,
								2755
							],
							"name": "IWETH",
							"nameLocation": "128:5:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 3163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "160:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:17"
									},
									"returnParameters": {
										"id": 3162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:0:17"
									},
									"scope": 3169,
									"src": "151:36:17",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 3168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "202:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3165,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "219:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 3168,
												"src": "211:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "210:16:17"
									},
									"returnParameters": {
										"id": 3167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "235:0:17"
									},
									"scope": 3169,
									"src": "193:43:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3170,
							"src": "118:121:17",
							"usedErrors": [],
							"usedEvents": [
								2689,
								2698
							]
						}
					],
					"src": "65:176:17"
				},
				"id": 17
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol": {
				"ast": {
					"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IWormhole.sol",
					"exportedSymbols": {
						"IWormhole": [
							3485
						]
					},
					"id": 3486,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3171,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "67:23:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWormhole",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3485,
							"linearizedBaseContracts": [
								3485
							],
							"name": "IWormhole",
							"nameLocation": "104:9:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IWormhole.GuardianSet",
									"id": 3177,
									"members": [
										{
											"constant": false,
											"id": 3174,
											"mutability": "mutable",
											"name": "keys",
											"nameLocation": "161:4:18",
											"nodeType": "VariableDeclaration",
											"scope": 3177,
											"src": "151:14:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 3172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "151:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3173,
												"nodeType": "ArrayTypeName",
												"src": "151:9:18",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3176,
											"mutability": "mutable",
											"name": "expirationTime",
											"nameLocation": "183:14:18",
											"nodeType": "VariableDeclaration",
											"scope": 3177,
											"src": "176:21:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 3175,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "176:6:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "GuardianSet",
									"nameLocation": "128:11:18",
									"nodeType": "StructDefinition",
									"scope": 3485,
									"src": "121:84:18",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.Signature",
									"id": 3186,
									"members": [
										{
											"constant": false,
											"id": 3179,
											"mutability": "mutable",
											"name": "r",
											"nameLocation": "249:1:18",
											"nodeType": "VariableDeclaration",
											"scope": 3186,
											"src": "241:9:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 3178,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "241:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3181,
											"mutability": "mutable",
											"name": "s",
											"nameLocation": "269:1:18",
											"nodeType": "VariableDeclaration",
											"scope": 3186,
											"src": "261:9:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 3180,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "261:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3183,
											"mutability": "mutable",
											"name": "v",
											"nameLocation": "287:1:18",
											"nodeType": "VariableDeclaration",
											"scope": 3186,
											"src": "281:7:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 3182,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "281:5:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3185,
											"mutability": "mutable",
											"name": "guardianIndex",
											"nameLocation": "305:13:18",
											"nodeType": "VariableDeclaration",
											"scope": 3186,
											"src": "299:19:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 3184,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "299:5:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Signature",
									"nameLocation": "220:9:18",
									"nodeType": "StructDefinition",
									"scope": 3485,
									"src": "213:113:18",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.VM",
									"id": 3211,
									"members": [
										{
											"constant": false,
											"id": 3188,
											"mutability": "mutable",
											"name": "version",
											"nameLocation": "361:7:18",
											"nodeType": "VariableDeclaration",
											"scope": 3211,
											"src": "355:13:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 3187,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "355:5:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3190,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "386:9:18",
											"nodeType": "VariableDeclaration",
											"scope": 3211,
											"src": "379:16:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 3189,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "379:6:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3192,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "413:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 3211,
											"src": "406:12:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 3191,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "406:6:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3194,
											"mutability": "mutable",
											"name": "emitterChainId",
											"nameLocation": "436:14:18",
											"nodeType": "VariableDeclaration",
											"scope": 3211,
											"src": "429:21:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 3193,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "429:6:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3196,
											"mutability": "mutable",
											"name": "emitterAddress",
											"nameLocation": "469:14:18",
											"nodeType": "VariableDeclaration",
											"scope": 3211,
											"src": "461:22:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 3195,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "461:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3198,
											"mutability": "mutable",
											"name": "sequence",
											"nameLocation": "501:8:18",
											"nodeType": "VariableDeclaration",
											"scope": 3211,
											"src": "494:15:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 3197,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "494:6:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3200,
											"mutability": "mutable",
											"name": "consistencyLevel",
											"nameLocation": "526:16:18",
											"nodeType": "VariableDeclaration",
											"scope": 3211,
											"src": "520:22:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 3199,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "520:5:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3202,
											"mutability": "mutable",
											"name": "payload",
											"nameLocation": "559:7:18",
											"nodeType": "VariableDeclaration",
											"scope": 3211,
											"src": "553:13:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 3201,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "553:5:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3204,
											"mutability": "mutable",
											"name": "guardianSetIndex",
											"nameLocation": "584:16:18",
											"nodeType": "VariableDeclaration",
											"scope": 3211,
											"src": "577:23:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 3203,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "577:6:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3208,
											"mutability": "mutable",
											"name": "signatures",
											"nameLocation": "623:10:18",
											"nodeType": "VariableDeclaration",
											"scope": 3211,
											"src": "611:22:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Signature_$3186_storage_$dyn_storage_ptr",
												"typeString": "struct IWormhole.Signature[]"
											},
											"typeName": {
												"baseType": {
													"id": 3206,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3205,
														"name": "Signature",
														"nameLocations": [
															"611:9:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3186,
														"src": "611:9:18"
													},
													"referencedDeclaration": 3186,
													"src": "611:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Signature_$3186_storage_ptr",
														"typeString": "struct IWormhole.Signature"
													}
												},
												"id": 3207,
												"nodeType": "ArrayTypeName",
												"src": "611:11:18",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Signature_$3186_storage_$dyn_storage_ptr",
													"typeString": "struct IWormhole.Signature[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3210,
											"mutability": "mutable",
											"name": "hash",
											"nameLocation": "652:4:18",
											"nodeType": "VariableDeclaration",
											"scope": 3211,
											"src": "644:12:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 3209,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "644:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VM",
									"nameLocation": "341:2:18",
									"nodeType": "StructDefinition",
									"scope": 3485,
									"src": "334:330:18",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.ContractUpgrade",
									"id": 3220,
									"members": [
										{
											"constant": false,
											"id": 3213,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "714:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3220,
											"src": "706:14:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 3212,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "706:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3215,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "737:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3220,
											"src": "731:12:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 3214,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "731:5:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3217,
											"mutability": "mutable",
											"name": "chain",
											"nameLocation": "761:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 3220,
											"src": "754:12:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 3216,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "754:6:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3219,
											"mutability": "mutable",
											"name": "newContract",
											"nameLocation": "785:11:18",
											"nodeType": "VariableDeclaration",
											"scope": 3220,
											"src": "777:19:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3218,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "777:7:18",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ContractUpgrade",
									"nameLocation": "679:15:18",
									"nodeType": "StructDefinition",
									"scope": 3485,
									"src": "672:132:18",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.GuardianSetUpgrade",
									"id": 3232,
									"members": [
										{
											"constant": false,
											"id": 3222,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "857:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3232,
											"src": "849:14:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 3221,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "849:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3224,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "880:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3232,
											"src": "874:12:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 3223,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "874:5:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3226,
											"mutability": "mutable",
											"name": "chain",
											"nameLocation": "904:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 3232,
											"src": "897:12:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 3225,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "897:6:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3229,
											"mutability": "mutable",
											"name": "newGuardianSet",
											"nameLocation": "932:14:18",
											"nodeType": "VariableDeclaration",
											"scope": 3232,
											"src": "920:26:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_GuardianSet_$3177_storage_ptr",
												"typeString": "struct IWormhole.GuardianSet"
											},
											"typeName": {
												"id": 3228,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3227,
													"name": "GuardianSet",
													"nameLocations": [
														"920:11:18"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3177,
													"src": "920:11:18"
												},
												"referencedDeclaration": 3177,
												"src": "920:11:18",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_GuardianSet_$3177_storage_ptr",
													"typeString": "struct IWormhole.GuardianSet"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3231,
											"mutability": "mutable",
											"name": "newGuardianSetIndex",
											"nameLocation": "964:19:18",
											"nodeType": "VariableDeclaration",
											"scope": 3232,
											"src": "957:26:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 3230,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "957:6:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "GuardianSetUpgrade",
									"nameLocation": "819:18:18",
									"nodeType": "StructDefinition",
									"scope": 3485,
									"src": "812:179:18",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.SetMessageFee",
									"id": 3241,
									"members": [
										{
											"constant": false,
											"id": 3234,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "1039:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3241,
											"src": "1031:14:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 3233,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1031:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3236,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "1062:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3241,
											"src": "1056:12:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 3235,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1056:5:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3238,
											"mutability": "mutable",
											"name": "chain",
											"nameLocation": "1086:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 3241,
											"src": "1079:12:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 3237,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1079:6:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3240,
											"mutability": "mutable",
											"name": "messageFee",
											"nameLocation": "1110:10:18",
											"nodeType": "VariableDeclaration",
											"scope": 3241,
											"src": "1102:18:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3239,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1102:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SetMessageFee",
									"nameLocation": "1006:13:18",
									"nodeType": "StructDefinition",
									"scope": 3485,
									"src": "999:129:18",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.TransferFees",
									"id": 3252,
									"members": [
										{
											"constant": false,
											"id": 3243,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "1175:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3252,
											"src": "1167:14:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 3242,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1167:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3245,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "1198:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3252,
											"src": "1192:12:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 3244,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1192:5:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3247,
											"mutability": "mutable",
											"name": "chain",
											"nameLocation": "1222:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 3252,
											"src": "1215:12:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 3246,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1215:6:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3249,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1246:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3252,
											"src": "1238:14:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3248,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1238:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3251,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1271:9:18",
											"nodeType": "VariableDeclaration",
											"scope": 3252,
											"src": "1263:17:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 3250,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1263:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TransferFees",
									"nameLocation": "1143:12:18",
									"nodeType": "StructDefinition",
									"scope": 3485,
									"src": "1136:152:18",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.RecoverChainId",
									"id": 3261,
									"members": [
										{
											"constant": false,
											"id": 3254,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "1337:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3261,
											"src": "1329:14:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 3253,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1329:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3256,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "1360:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3261,
											"src": "1354:12:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 3255,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1354:5:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3258,
											"mutability": "mutable",
											"name": "evmChainId",
											"nameLocation": "1385:10:18",
											"nodeType": "VariableDeclaration",
											"scope": 3261,
											"src": "1377:18:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3257,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1377:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3260,
											"mutability": "mutable",
											"name": "newChainId",
											"nameLocation": "1413:10:18",
											"nodeType": "VariableDeclaration",
											"scope": 3261,
											"src": "1406:17:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 3259,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1406:6:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RecoverChainId",
									"nameLocation": "1303:14:18",
									"nodeType": "StructDefinition",
									"scope": 3485,
									"src": "1296:135:18",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b2",
									"id": 3273,
									"name": "LogMessagePublished",
									"nameLocation": "1445:19:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3263,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1491:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3273,
												"src": "1475:22:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3265,
												"indexed": false,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1506:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3273,
												"src": "1499:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3264,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1499:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3267,
												"indexed": false,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1523:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3273,
												"src": "1516:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3266,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1516:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3269,
												"indexed": false,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "1536:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3273,
												"src": "1530:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1530:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3271,
												"indexed": false,
												"mutability": "mutable",
												"name": "consistencyLevel",
												"nameLocation": "1551:16:18",
												"nodeType": "VariableDeclaration",
												"scope": 3273,
												"src": "1545:22:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3270,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1545:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1464:110:18"
									},
									"src": "1439:136:18"
								},
								{
									"anonymous": false,
									"eventSelector": "2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a49",
									"id": 3279,
									"name": "ContractUpgraded",
									"nameLocation": "1587:16:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3275,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldContract",
												"nameLocation": "1620:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 3279,
												"src": "1604:27:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3277,
												"indexed": true,
												"mutability": "mutable",
												"name": "newContract",
												"nameLocation": "1649:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 3279,
												"src": "1633:27:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1633:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1603:58:18"
									},
									"src": "1581:81:18"
								},
								{
									"anonymous": false,
									"eventSelector": "2384dbc52f7b617fb7c5aa71e5455a21ff21d58604bb6daef6af2bb44aadebdd",
									"id": 3283,
									"name": "GuardianSetAdded",
									"nameLocation": "1674:16:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3281,
												"indexed": true,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1706:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3283,
												"src": "1691:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3280,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1691:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1690:22:18"
									},
									"src": "1668:45:18"
								},
								{
									"functionSelector": "b19a437e",
									"id": 3294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "publishMessage",
									"nameLocation": "1730:14:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3285,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1752:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3294,
												"src": "1745:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3284,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1745:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3287,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "1772:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3294,
												"src": "1759:20:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3286,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1759:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3289,
												"mutability": "mutable",
												"name": "consistencyLevel",
												"nameLocation": "1787:16:18",
												"nodeType": "VariableDeclaration",
												"scope": 3294,
												"src": "1781:22:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3288,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1781:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:60:18"
									},
									"returnParameters": {
										"id": 3293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3292,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1865:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3294,
												"src": "1858:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3291,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1858:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1857:17:18"
									},
									"scope": 3485,
									"src": "1721:154:18",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8129fc1c",
									"id": 3297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "1892:10:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1902:2:18"
									},
									"returnParameters": {
										"id": 3296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1913:0:18"
									},
									"scope": 3485,
									"src": "1883:31:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c0fd8bde",
									"id": 3309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseAndVerifyVM",
									"nameLocation": "1931:16:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3299,
												"mutability": "mutable",
												"name": "encodedVM",
												"nameLocation": "1963:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 3309,
												"src": "1948:24:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3298,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1948:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1947:26:18"
									},
									"returnParameters": {
										"id": 3308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3303,
												"mutability": "mutable",
												"name": "vm",
												"nameLocation": "2034:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 3309,
												"src": "2024:12:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VM_$3211_memory_ptr",
													"typeString": "struct IWormhole.VM"
												},
												"typeName": {
													"id": 3302,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3301,
														"name": "VM",
														"nameLocations": [
															"2024:2:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3211,
														"src": "2024:2:18"
													},
													"referencedDeclaration": 3211,
													"src": "2024:2:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VM_$3211_storage_ptr",
														"typeString": "struct IWormhole.VM"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3305,
												"mutability": "mutable",
												"name": "valid",
												"nameLocation": "2043:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3309,
												"src": "2038:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3304,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2038:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3307,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "2064:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3309,
												"src": "2050:20:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3306,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2050:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2023:48:18"
									},
									"scope": 3485,
									"src": "1922:150:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "875be02a",
									"id": 3319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "verifyVM",
									"nameLocation": "2089:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3312,
												"mutability": "mutable",
												"name": "vm",
												"nameLocation": "2108:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 3319,
												"src": "2098:12:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VM_$3211_memory_ptr",
													"typeString": "struct IWormhole.VM"
												},
												"typeName": {
													"id": 3311,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3310,
														"name": "VM",
														"nameLocations": [
															"2098:2:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3211,
														"src": "2098:2:18"
													},
													"referencedDeclaration": 3211,
													"src": "2098:2:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VM_$3211_storage_ptr",
														"typeString": "struct IWormhole.VM"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2097:14:18"
									},
									"returnParameters": {
										"id": 3318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3315,
												"mutability": "mutable",
												"name": "valid",
												"nameLocation": "2140:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3319,
												"src": "2135:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2135:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3317,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "2161:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3319,
												"src": "2147:20:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3316,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2147:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2134:34:18"
									},
									"scope": 3485,
									"src": "2080:89:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a0cce1b3",
									"id": 3335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "verifySignatures",
									"nameLocation": "2186:16:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3321,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2211:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 3335,
												"src": "2203:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2203:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3325,
												"mutability": "mutable",
												"name": "signatures",
												"nameLocation": "2236:10:18",
												"nodeType": "VariableDeclaration",
												"scope": 3335,
												"src": "2217:29:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Signature_$3186_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IWormhole.Signature[]"
												},
												"typeName": {
													"baseType": {
														"id": 3323,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3322,
															"name": "Signature",
															"nameLocations": [
																"2217:9:18"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3186,
															"src": "2217:9:18"
														},
														"referencedDeclaration": 3186,
														"src": "2217:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Signature_$3186_storage_ptr",
															"typeString": "struct IWormhole.Signature"
														}
													},
													"id": 3324,
													"nodeType": "ArrayTypeName",
													"src": "2217:11:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Signature_$3186_storage_$dyn_storage_ptr",
														"typeString": "struct IWormhole.Signature[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3328,
												"mutability": "mutable",
												"name": "guardianSet",
												"nameLocation": "2267:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 3335,
												"src": "2248:30:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_GuardianSet_$3177_memory_ptr",
													"typeString": "struct IWormhole.GuardianSet"
												},
												"typeName": {
													"id": 3327,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3326,
														"name": "GuardianSet",
														"nameLocations": [
															"2248:11:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3177,
														"src": "2248:11:18"
													},
													"referencedDeclaration": 3177,
													"src": "2248:11:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_GuardianSet_$3177_storage_ptr",
														"typeString": "struct IWormhole.GuardianSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2202:77:18"
									},
									"returnParameters": {
										"id": 3334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3331,
												"mutability": "mutable",
												"name": "valid",
												"nameLocation": "2335:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3335,
												"src": "2330:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2330:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3333,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "2356:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3335,
												"src": "2342:20:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3332,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2342:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2329:34:18"
									},
									"scope": 3485,
									"src": "2177:187:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9e11893",
									"id": 3343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseVM",
									"nameLocation": "2381:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3337,
												"mutability": "mutable",
												"name": "encodedVM",
												"nameLocation": "2402:9:18",
												"nodeType": "VariableDeclaration",
												"scope": 3343,
												"src": "2389:22:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3336,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2389:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2388:24:18"
									},
									"returnParameters": {
										"id": 3342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3341,
												"mutability": "mutable",
												"name": "vm",
												"nameLocation": "2446:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 3343,
												"src": "2436:12:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VM_$3211_memory_ptr",
													"typeString": "struct IWormhole.VM"
												},
												"typeName": {
													"id": 3340,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3339,
														"name": "VM",
														"nameLocations": [
															"2436:2:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3211,
														"src": "2436:2:18"
													},
													"referencedDeclaration": 3211,
													"src": "2436:2:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VM_$3211_storage_ptr",
														"typeString": "struct IWormhole.VM"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2435:14:18"
									},
									"scope": 3485,
									"src": "2372:78:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f8ce560a",
									"id": 3350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quorum",
									"nameLocation": "2467:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3345,
												"mutability": "mutable",
												"name": "numGuardians",
												"nameLocation": "2482:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 3350,
												"src": "2474:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2474:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2473:22:18"
									},
									"returnParameters": {
										"id": 3349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3348,
												"mutability": "mutable",
												"name": "numSignaturesRequiredForQuorum",
												"nameLocation": "2527:30:18",
												"nodeType": "VariableDeclaration",
												"scope": 3350,
												"src": "2519:38:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2519:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2518:40:18"
									},
									"scope": 3485,
									"src": "2458:101:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f951975a",
									"id": 3358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getGuardianSet",
									"nameLocation": "2576:14:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3352,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2598:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3358,
												"src": "2591:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3351,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2591:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2590:14:18"
									},
									"returnParameters": {
										"id": 3357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3358,
												"src": "2628:18:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_GuardianSet_$3177_memory_ptr",
													"typeString": "struct IWormhole.GuardianSet"
												},
												"typeName": {
													"id": 3355,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3354,
														"name": "GuardianSet",
														"nameLocations": [
															"2628:11:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3177,
														"src": "2628:11:18"
													},
													"referencedDeclaration": 3177,
													"src": "2628:11:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_GuardianSet_$3177_storage_ptr",
														"typeString": "struct IWormhole.GuardianSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2627:20:18"
									},
									"scope": 3485,
									"src": "2567:81:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1cfe7951",
									"id": 3363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentGuardianSetIndex",
									"nameLocation": "2665:26:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2691:2:18"
									},
									"returnParameters": {
										"id": 3362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3363,
												"src": "2717:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3360,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2717:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2716:8:18"
									},
									"scope": 3485,
									"src": "2656:69:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "eb8d3f12",
									"id": 3368,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getGuardianSetExpiry",
									"nameLocation": "2742:20:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2762:2:18"
									},
									"returnParameters": {
										"id": 3367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3368,
												"src": "2788:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3365,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2788:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2787:8:18"
									},
									"scope": 3485,
									"src": "2733:63:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2c3c02a4",
									"id": 3375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceActionIsConsumed",
									"nameLocation": "2813:26:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3370,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2848:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 3375,
												"src": "2840:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3369,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2840:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2839:14:18"
									},
									"returnParameters": {
										"id": 3374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3375,
												"src": "2877:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3372,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2877:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:6:18"
									},
									"scope": 3485,
									"src": "2804:79:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d60b347f",
									"id": 3382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isInitialized",
									"nameLocation": "2900:13:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3377,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "2922:4:18",
												"nodeType": "VariableDeclaration",
												"scope": 3382,
												"src": "2914:12:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2914:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2913:14:18"
									},
									"returnParameters": {
										"id": 3381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3382,
												"src": "2951:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3379,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2951:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2950:6:18"
									},
									"scope": 3485,
									"src": "2891:66:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a8a0592",
									"id": 3387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "chainId",
									"nameLocation": "2974:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2981:2:18"
									},
									"returnParameters": {
										"id": 3386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "3007:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3384,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3007:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3006:8:18"
									},
									"scope": 3485,
									"src": "2965:50:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e039f224",
									"id": 3392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isFork",
									"nameLocation": "3032:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3038:2:18"
									},
									"returnParameters": {
										"id": 3391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3392,
												"src": "3064:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3389,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3064:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3063:6:18"
									},
									"scope": 3485,
									"src": "3023:47:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fbe3c2cd",
									"id": 3397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceChainId",
									"nameLocation": "3087:17:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3104:2:18"
									},
									"returnParameters": {
										"id": 3396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3397,
												"src": "3130:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3394,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3130:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3129:8:18"
									},
									"scope": 3485,
									"src": "3078:60:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b172b222",
									"id": 3402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceContract",
									"nameLocation": "3155:18:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3173:2:18"
									},
									"returnParameters": {
										"id": 3401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3402,
												"src": "3199:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3399,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3199:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3198:9:18"
									},
									"scope": 3485,
									"src": "3146:62:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1a90a219",
									"id": 3407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "messageFee",
									"nameLocation": "3225:10:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3235:2:18"
									},
									"returnParameters": {
										"id": 3406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3407,
												"src": "3261:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3261:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3260:9:18"
									},
									"scope": 3485,
									"src": "3216:54:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "64d42b17",
									"id": 3412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "evmChainId",
									"nameLocation": "3287:10:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3297:2:18"
									},
									"returnParameters": {
										"id": 3411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3412,
												"src": "3323:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:9:18"
									},
									"scope": 3485,
									"src": "3278:54:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4cf842b5",
									"id": 3419,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nextSequence",
									"nameLocation": "3349:12:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3414,
												"mutability": "mutable",
												"name": "emitter",
												"nameLocation": "3370:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3419,
												"src": "3362:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3362:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3361:17:18"
									},
									"returnParameters": {
										"id": 3418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3419,
												"src": "3402:6:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3416,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3402:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3401:8:18"
									},
									"scope": 3485,
									"src": "3340:70:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4fdc60fa",
									"id": 3427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseContractUpgrade",
									"nameLocation": "3427:20:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3421,
												"mutability": "mutable",
												"name": "encodedUpgrade",
												"nameLocation": "3461:14:18",
												"nodeType": "VariableDeclaration",
												"scope": 3427,
												"src": "3448:27:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3420,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3448:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3447:29:18"
									},
									"returnParameters": {
										"id": 3426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3425,
												"mutability": "mutable",
												"name": "cu",
												"nameLocation": "3523:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 3427,
												"src": "3500:25:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ContractUpgrade_$3220_memory_ptr",
													"typeString": "struct IWormhole.ContractUpgrade"
												},
												"typeName": {
													"id": 3424,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3423,
														"name": "ContractUpgrade",
														"nameLocations": [
															"3500:15:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3220,
														"src": "3500:15:18"
													},
													"referencedDeclaration": 3220,
													"src": "3500:15:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ContractUpgrade_$3220_storage_ptr",
														"typeString": "struct IWormhole.ContractUpgrade"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3499:27:18"
									},
									"scope": 3485,
									"src": "3418:109:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "04ca84cf",
									"id": 3435,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseGuardianSetUpgrade",
									"nameLocation": "3544:23:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3429,
												"mutability": "mutable",
												"name": "encodedUpgrade",
												"nameLocation": "3581:14:18",
												"nodeType": "VariableDeclaration",
												"scope": 3435,
												"src": "3568:27:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3568:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3567:29:18"
									},
									"returnParameters": {
										"id": 3434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3433,
												"mutability": "mutable",
												"name": "gsu",
												"nameLocation": "3673:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 3435,
												"src": "3647:29:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_GuardianSetUpgrade_$3232_memory_ptr",
													"typeString": "struct IWormhole.GuardianSetUpgrade"
												},
												"typeName": {
													"id": 3432,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3431,
														"name": "GuardianSetUpgrade",
														"nameLocations": [
															"3647:18:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3232,
														"src": "3647:18:18"
													},
													"referencedDeclaration": 3232,
													"src": "3647:18:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_GuardianSetUpgrade_$3232_storage_ptr",
														"typeString": "struct IWormhole.GuardianSetUpgrade"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:31:18"
									},
									"scope": 3485,
									"src": "3535:143:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "515f3247",
									"id": 3443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseSetMessageFee",
									"nameLocation": "3695:18:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3437,
												"mutability": "mutable",
												"name": "encodedSetMessageFee",
												"nameLocation": "3727:20:18",
												"nodeType": "VariableDeclaration",
												"scope": 3443,
												"src": "3714:33:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3436,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3714:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3713:35:18"
									},
									"returnParameters": {
										"id": 3442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3441,
												"mutability": "mutable",
												"name": "smf",
												"nameLocation": "3793:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 3443,
												"src": "3772:24:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SetMessageFee_$3241_memory_ptr",
													"typeString": "struct IWormhole.SetMessageFee"
												},
												"typeName": {
													"id": 3440,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3439,
														"name": "SetMessageFee",
														"nameLocations": [
															"3772:13:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3241,
														"src": "3772:13:18"
													},
													"referencedDeclaration": 3241,
													"src": "3772:13:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SetMessageFee_$3241_storage_ptr",
														"typeString": "struct IWormhole.SetMessageFee"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3771:26:18"
									},
									"scope": 3485,
									"src": "3686:112:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0319e59c",
									"id": 3451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseTransferFees",
									"nameLocation": "3815:17:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3445,
												"mutability": "mutable",
												"name": "encodedTransferFees",
												"nameLocation": "3846:19:18",
												"nodeType": "VariableDeclaration",
												"scope": 3451,
												"src": "3833:32:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3444,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3833:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3832:34:18"
									},
									"returnParameters": {
										"id": 3450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3449,
												"mutability": "mutable",
												"name": "tf",
												"nameLocation": "3910:2:18",
												"nodeType": "VariableDeclaration",
												"scope": 3451,
												"src": "3890:22:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TransferFees_$3252_memory_ptr",
													"typeString": "struct IWormhole.TransferFees"
												},
												"typeName": {
													"id": 3448,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3447,
														"name": "TransferFees",
														"nameLocations": [
															"3890:12:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3252,
														"src": "3890:12:18"
													},
													"referencedDeclaration": 3252,
													"src": "3890:12:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TransferFees_$3252_storage_ptr",
														"typeString": "struct IWormhole.TransferFees"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3889:24:18"
									},
									"scope": 3485,
									"src": "3806:108:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cb4cfea8",
									"id": 3459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseRecoverChainId",
									"nameLocation": "3931:19:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3453,
												"mutability": "mutable",
												"name": "encodedRecoverChainId",
												"nameLocation": "3964:21:18",
												"nodeType": "VariableDeclaration",
												"scope": 3459,
												"src": "3951:34:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3452,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3951:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3950:36:18"
									},
									"returnParameters": {
										"id": 3458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3457,
												"mutability": "mutable",
												"name": "rci",
												"nameLocation": "4059:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 3459,
												"src": "4037:25:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RecoverChainId_$3261_memory_ptr",
													"typeString": "struct IWormhole.RecoverChainId"
												},
												"typeName": {
													"id": 3456,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3455,
														"name": "RecoverChainId",
														"nameLocations": [
															"4037:14:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3261,
														"src": "4037:14:18"
													},
													"referencedDeclaration": 3261,
													"src": "4037:14:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RecoverChainId_$3261_storage_ptr",
														"typeString": "struct IWormhole.RecoverChainId"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4036:27:18"
									},
									"scope": 3485,
									"src": "3922:142:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5cb8cae2",
									"id": 3464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitContractUpgrade",
									"nameLocation": "4081:21:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3461,
												"mutability": "mutable",
												"name": "_vm",
												"nameLocation": "4116:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 3464,
												"src": "4103:16:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3460,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4103:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4102:18:18"
									},
									"returnParameters": {
										"id": 3463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:18"
									},
									"scope": 3485,
									"src": "4072:58:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f42bc641",
									"id": 3469,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitSetMessageFee",
									"nameLocation": "4147:19:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3466,
												"mutability": "mutable",
												"name": "_vm",
												"nameLocation": "4180:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 3469,
												"src": "4167:16:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4167:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4166:18:18"
									},
									"returnParameters": {
										"id": 3468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4193:0:18"
									},
									"scope": 3485,
									"src": "4138:56:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6606b4e0",
									"id": 3474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitNewGuardianSet",
									"nameLocation": "4211:20:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3471,
												"mutability": "mutable",
												"name": "_vm",
												"nameLocation": "4245:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 3474,
												"src": "4232:16:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4232:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4231:18:18"
									},
									"returnParameters": {
										"id": 3473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4258:0:18"
									},
									"scope": 3485,
									"src": "4202:57:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "93df337e",
									"id": 3479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitTransferFees",
									"nameLocation": "4276:18:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3476,
												"mutability": "mutable",
												"name": "_vm",
												"nameLocation": "4308:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 3479,
												"src": "4295:16:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4295:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4294:18:18"
									},
									"returnParameters": {
										"id": 3478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4321:0:18"
									},
									"scope": 3485,
									"src": "4267:55:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "178149e7",
									"id": 3484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitRecoverChainId",
									"nameLocation": "4339:20:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3481,
												"mutability": "mutable",
												"name": "_vm",
												"nameLocation": "4373:3:18",
												"nodeType": "VariableDeclaration",
												"scope": 3484,
												"src": "4360:16:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4360:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4359:18:18"
									},
									"returnParameters": {
										"id": 3483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4386:0:18"
									},
									"scope": 3485,
									"src": "4330:57:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3486,
							"src": "94:4296:18",
							"usedErrors": [],
							"usedEvents": [
								3273,
								3279,
								3283
							]
						}
					],
					"src": "67:4325:18"
				},
				"id": 18
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol": {
				"ast": {
					"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IWormholeReceiver.sol",
					"exportedSymbols": {
						"IWormholeReceiver": [
							3504
						]
					},
					"id": 3505,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3487,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:19"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWormholeReceiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3488,
								"nodeType": "StructuredDocumentation",
								"src": "67:82:19",
								"text": " @notice Interface for a contract which can receive Wormhole messages."
							},
							"fullyImplemented": false,
							"id": 3504,
							"linearizedBaseContracts": [
								3504
							],
							"name": "IWormholeReceiver",
							"nameLocation": "161:17:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3489,
										"nodeType": "StructuredDocumentation",
										"src": "186:2164:19",
										"text": " @notice When a `send` is performed with this contract as the target, this function will be\n     invoked by the WormholeRelayer contract\n NOTE: This function should be restricted such that only the Wormhole Relayer contract can call it.\n We also recommend that this function checks that `sourceChain` and `sourceAddress` are indeed who\n       you expect to have requested the calling of `send` on the source chain\n The invocation of this function corresponding to the `send` request will have msg.value equal\n   to the receiverValue specified in the send request.\n If the invocation of this function reverts or exceeds the gas limit\n   specified by the send requester, this delivery will result in a `ReceiverFailure`.\n @param payload - an arbitrary message which was included in the delivery by the\n     requester. This message's signature will already have been verified (as long as msg.sender is the Wormhole Relayer contract)\n @param additionalMessages - Additional messages which were requested to be included in this delivery.\n      Note: There are no contract-level guarantees that the messages in this array are what was requested\n      so **you should verify any sensitive information given here!**\n      For example, if a 'VaaKey' was specified on the source chain, then MAKE SURE the corresponding message here\n      has valid signatures (by calling `parseAndVerifyVM(message)` on the Wormhole core contract)\n      This field can be used to perform and relay TokenBridge or CCTP transfers, and there are example\n      usages of this at\n         https://github.com/wormhole-foundation/hello-token\n         https://github.com/wormhole-foundation/hello-cctp\n @param sourceAddress - the (wormhole format) address on the sending chain which requested\n     this delivery.\n @param sourceChain - the wormhole chain ID where this delivery was requested.\n @param deliveryHash - the VAA hash of the deliveryVAA."
									},
									"functionSelector": "529dca32",
									"id": 3503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "receiveWormholeMessages",
									"nameLocation": "2365:23:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3491,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "2412:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 3503,
												"src": "2399:20:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3490,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2399:5:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3494,
												"mutability": "mutable",
												"name": "additionalMessages",
												"nameLocation": "2445:18:19",
												"nodeType": "VariableDeclaration",
												"scope": 3503,
												"src": "2430:33:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 3492,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "2430:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 3493,
													"nodeType": "ArrayTypeName",
													"src": "2430:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3496,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "2482:13:19",
												"nodeType": "VariableDeclaration",
												"scope": 3503,
												"src": "2474:21:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3495,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2474:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3498,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "2513:11:19",
												"nodeType": "VariableDeclaration",
												"scope": 3503,
												"src": "2506:18:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3497,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2506:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3500,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "2543:12:19",
												"nodeType": "VariableDeclaration",
												"scope": 3503,
												"src": "2535:20:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3499,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2535:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2388:174:19"
									},
									"returnParameters": {
										"id": 3502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2579:0:19"
									},
									"scope": 3504,
									"src": "2356:224:19",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3505,
							"src": "151:2432:19",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "40:2545:19"
				},
				"id": 19
			},
			"BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol": {
				"ast": {
					"absolutePath": "BRIDGE_PARTNERSHIP/src/interfaces/IWormholeRelayer.sol",
					"exportedSymbols": {
						"DeliveryProviderCannotReceivePayment": [
							3938
						],
						"DeliveryProviderDoesNotSupportMessageKeyType": [
							3942
						],
						"DeliveryProviderDoesNotSupportTargetChain": [
							3936
						],
						"IWormholeRelayer": [
							3919
						],
						"IWormholeRelayerBase": [
							3562
						],
						"IWormholeRelayerDelivery": [
							3914
						],
						"IWormholeRelayerSend": [
							3864
						],
						"InsufficientRelayerFunds": [
							4008
						],
						"InvalidDeliveryVaa": [
							3972
						],
						"InvalidEmitter": [
							3980
						],
						"InvalidMsgValue": [
							3928
						],
						"InvalidOverrideGasLimit": [
							3998
						],
						"InvalidOverrideReceiverValue": [
							4000
						],
						"InvalidOverrideRefundPerGasUnused": [
							4002
						],
						"InvalidPayloadId": [
							3954
						],
						"InvalidPayloadLength": [
							3960
						],
						"InvalidVaaKeyType": [
							3964
						],
						"MessageKey": [
							3522
						],
						"MessageKeysLengthDoesNotMatchMessagesLength": [
							3986
						],
						"NotAnEvmAddress": [
							4012
						],
						"RETURNDATA_TRUNCATION_THRESHOLD": [
							3922
						],
						"ReentrantDelivery": [
							3948
						],
						"RequestedGasLimitTooLow": [
							3930
						],
						"RequesterNotWormholeRelayer": [
							3992
						],
						"TargetChainIsNotThisChain": [
							3996
						],
						"TooManyMessageKeys": [
							3968
						],
						"VAA_KEY_TYPE": [
							3517
						],
						"VaaKey": [
							3514
						],
						"VaaKeysDoNotMatchVaas": [
							3990
						]
					},
					"id": 4013,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3506,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:20"
						},
						{
							"canonicalName": "VaaKey",
							"documentation": {
								"id": 3507,
								"nodeType": "StructuredDocumentation",
								"src": "479:302:20",
								"text": " @notice VaaKey identifies a wormhole message\n @custom:member chainId Wormhole chain ID of the chain where this VAA was emitted from\n @custom:member emitterAddress Address of the emitter of the VAA, in Wormhole bytes32 format\n @custom:member sequence Sequence number of the VAA"
							},
							"id": 3514,
							"members": [
								{
									"constant": false,
									"id": 3509,
									"mutability": "mutable",
									"name": "chainId",
									"nameLocation": "811:7:20",
									"nodeType": "VariableDeclaration",
									"scope": 3514,
									"src": "804:14:20",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 3508,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "804:6:20",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3511,
									"mutability": "mutable",
									"name": "emitterAddress",
									"nameLocation": "833:14:20",
									"nodeType": "VariableDeclaration",
									"scope": 3514,
									"src": "825:22:20",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3510,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "825:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3513,
									"mutability": "mutable",
									"name": "sequence",
									"nameLocation": "861:8:20",
									"nodeType": "VariableDeclaration",
									"scope": 3514,
									"src": "854:15:20",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 3512,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "854:6:20",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "VaaKey",
							"nameLocation": "790:6:20",
							"nodeType": "StructDefinition",
							"scope": 4013,
							"src": "783:90:20",
							"visibility": "public"
						},
						{
							"constant": true,
							"id": 3517,
							"mutability": "constant",
							"name": "VAA_KEY_TYPE",
							"nameLocation": "969:12:20",
							"nodeType": "VariableDeclaration",
							"scope": 4013,
							"src": "954:31:20",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint8",
								"typeString": "uint8"
							},
							"typeName": {
								"id": 3515,
								"name": "uint8",
								"nodeType": "ElementaryTypeName",
								"src": "954:5:20",
								"typeDescriptions": {
									"typeIdentifier": "t_uint8",
									"typeString": "uint8"
								}
							},
							"value": {
								"hexValue": "31",
								"id": 3516,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "984:1:20",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_1_by_1",
									"typeString": "int_const 1"
								},
								"value": "1"
							},
							"visibility": "internal"
						},
						{
							"canonicalName": "MessageKey",
							"id": 3522,
							"members": [
								{
									"constant": false,
									"id": 3519,
									"mutability": "mutable",
									"name": "keyType",
									"nameLocation": "1021:7:20",
									"nodeType": "VariableDeclaration",
									"scope": 3522,
									"src": "1015:13:20",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 3518,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1015:5:20",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3521,
									"mutability": "mutable",
									"name": "encodedKey",
									"nameLocation": "1117:10:20",
									"nodeType": "VariableDeclaration",
									"scope": 3522,
									"src": "1111:16:20",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 3520,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1111:5:20",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "MessageKey",
							"nameLocation": "997:10:20",
							"nodeType": "StructDefinition",
							"scope": 4013,
							"src": "990:141:20",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWormholeRelayerBase",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3562,
							"linearizedBaseContracts": [
								3562
							],
							"name": "IWormholeRelayerBase",
							"nameLocation": "1145:20:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "da8540426b64ece7b164a9dce95448765f0a7263ef3ff85091c9c7361e485364",
									"id": 3530,
									"name": "SendEvent",
									"nameLocation": "1179:9:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3524,
												"indexed": true,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1214:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3530,
												"src": "1199:23:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3523,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1199:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3526,
												"indexed": false,
												"mutability": "mutable",
												"name": "deliveryQuote",
												"nameLocation": "1241:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3530,
												"src": "1233:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3528,
												"indexed": false,
												"mutability": "mutable",
												"name": "paymentForExtraReceiverValue",
												"nameLocation": "1273:28:20",
												"nodeType": "VariableDeclaration",
												"scope": 3530,
												"src": "1265:36:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1188:120:20"
									},
									"src": "1173:136:20"
								},
								{
									"functionSelector": "3e8267e7",
									"id": 3537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRegisteredWormholeRelayerContract",
									"nameLocation": "1326:36:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3532,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "1380:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3537,
												"src": "1373:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3531,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1373:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1362:32:20"
									},
									"returnParameters": {
										"id": 3536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3537,
												"src": "1418:7:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3534,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1417:9:20"
									},
									"scope": 3562,
									"src": "1317:110:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3538,
										"nodeType": "StructuredDocumentation",
										"src": "1435:184:20",
										"text": " @notice Returns true if a delivery has been attempted for the given deliveryHash\n Note: invalid deliveries where the tx reverts are not considered attempted"
									},
									"functionSelector": "d0625a19",
									"id": 3545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deliveryAttempted",
									"nameLocation": "1634:17:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3540,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "1670:12:20",
												"nodeType": "VariableDeclaration",
												"scope": 3545,
												"src": "1662:20:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3539,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1662:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1651:38:20"
									},
									"returnParameters": {
										"id": 3544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3543,
												"mutability": "mutable",
												"name": "attempted",
												"nameLocation": "1718:9:20",
												"nodeType": "VariableDeclaration",
												"scope": 3545,
												"src": "1713:14:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3542,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1713:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1712:16:20"
									},
									"scope": 3562,
									"src": "1625:104:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3546,
										"nodeType": "StructuredDocumentation",
										"src": "1737:87:20",
										"text": " @notice block number at which a delivery was successfully executed"
									},
									"functionSelector": "40984f08",
									"id": 3553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deliverySuccessBlock",
									"nameLocation": "1839:20:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3548,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "1878:12:20",
												"nodeType": "VariableDeclaration",
												"scope": 3553,
												"src": "1870:20:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3547,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:38:20"
									},
									"returnParameters": {
										"id": 3552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3551,
												"mutability": "mutable",
												"name": "blockNumber",
												"nameLocation": "1929:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3553,
												"src": "1921:19:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1921:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1920:21:20"
									},
									"scope": 3562,
									"src": "1830:112:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3554,
										"nodeType": "StructuredDocumentation",
										"src": "1950:97:20",
										"text": " @notice block number of the latest attempt to execute a delivery that failed"
									},
									"functionSelector": "5a3b92e8",
									"id": 3561,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deliveryFailureBlock",
									"nameLocation": "2062:20:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3556,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "2101:12:20",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "2093:20:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3555,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2093:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2082:38:20"
									},
									"returnParameters": {
										"id": 3560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3559,
												"mutability": "mutable",
												"name": "blockNumber",
												"nameLocation": "2152:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "2144:19:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2144:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:21:20"
									},
									"scope": 3562,
									"src": "2053:112:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4013,
							"src": "1135:1033:20",
							"usedErrors": [],
							"usedEvents": [
								3530
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3564,
										"name": "IWormholeRelayerBase",
										"nameLocations": [
											"2296:20:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3562,
										"src": "2296:20:20"
									},
									"id": 3565,
									"nodeType": "InheritanceSpecifier",
									"src": "2296:20:20"
								}
							],
							"canonicalName": "IWormholeRelayerSend",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3563,
								"nodeType": "StructuredDocumentation",
								"src": "2172:88:20",
								"text": " @title IWormholeRelayerSend\n @notice The interface to request deliveries"
							},
							"fullyImplemented": false,
							"id": 3864,
							"linearizedBaseContracts": [
								3864,
								3562
							],
							"name": "IWormholeRelayerSend",
							"nameLocation": "2272:20:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3566,
										"nodeType": "StructuredDocumentation",
										"src": "2324:1219:20",
										"text": " @notice Publishes an instruction for the default delivery provider\n to relay a payload to the address `targetAddress` on chain `targetChain`\n with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\n Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendPayloadToEvm` function\n with `refundChain` and `refundAddress` as parameters\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param gasLimit gas limit with which to call `targetAddress`.\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "8fecdd02",
									"id": 3581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendPayloadToEvm",
									"nameLocation": "3558:16:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3568,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "3592:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3581,
												"src": "3585:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3567,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3585:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3570,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "3622:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3581,
												"src": "3614:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3614:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3572,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "3659:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3581,
												"src": "3646:20:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3571,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3646:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3574,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "3685:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3581,
												"src": "3677:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3677:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3576,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "3717:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3581,
												"src": "3709:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3709:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3574:158:20"
									},
									"returnParameters": {
										"id": 3580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3579,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "3766:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3581,
												"src": "3759:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3578,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3759:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3758:17:20"
									},
									"scope": 3864,
									"src": "3549:227:20",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3582,
										"nodeType": "StructuredDocumentation",
										"src": "3784:1413:20",
										"text": " @notice Publishes an instruction for the default delivery provider\n to relay a payload to the address `targetAddress` on chain `targetChain`\n with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\n Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\n        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\n @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n @param refundAddress The address on `refundChain` to deliver any refund to\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "4b5ca6f4",
									"id": 3601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendPayloadToEvm",
									"nameLocation": "5212:16:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3584,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "5246:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3601,
												"src": "5239:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3583,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5239:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3586,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "5276:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3601,
												"src": "5268:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5268:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3588,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "5313:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3601,
												"src": "5300:20:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3587,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5300:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3590,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "5339:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3601,
												"src": "5331:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3592,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "5371:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3601,
												"src": "5363:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5363:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3594,
												"mutability": "mutable",
												"name": "refundChain",
												"nameLocation": "5397:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3601,
												"src": "5390:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3593,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5390:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3596,
												"mutability": "mutable",
												"name": "refundAddress",
												"nameLocation": "5427:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3601,
												"src": "5419:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5228:219:20"
									},
									"returnParameters": {
										"id": 3600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3599,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "5481:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3601,
												"src": "5474:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3598,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5474:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5473:17:20"
									},
									"scope": 3864,
									"src": "5203:288:20",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3602,
										"nodeType": "StructuredDocumentation",
										"src": "5499:1338:20",
										"text": " @notice Publishes an instruction for the default delivery provider\n to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\n with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\n Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendVaasToEvm` function\n with `refundChain` and `refundAddress` as parameters\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param gasLimit gas limit with which to call `targetAddress`.\n @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "329a2be7",
									"id": 3621,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendVaasToEvm",
									"nameLocation": "6852:13:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3604,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "6883:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3621,
												"src": "6876:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3603,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6876:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3606,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "6913:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3621,
												"src": "6905:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6905:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3608,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "6950:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3621,
												"src": "6937:20:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3607,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6937:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3610,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "6976:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3621,
												"src": "6968:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3612,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "7008:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3621,
												"src": "7000:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7000:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3616,
												"mutability": "mutable",
												"name": "vaaKeys",
												"nameLocation": "7043:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3621,
												"src": "7027:23:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct VaaKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 3614,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3613,
															"name": "VaaKey",
															"nameLocations": [
																"7027:6:20"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3514,
															"src": "7027:6:20"
														},
														"referencedDeclaration": 3514,
														"src": "7027:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$3514_storage_ptr",
															"typeString": "struct VaaKey"
														}
													},
													"id": 3615,
													"nodeType": "ArrayTypeName",
													"src": "7027:8:20",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_storage_$dyn_storage_ptr",
														"typeString": "struct VaaKey[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6865:192:20"
									},
									"returnParameters": {
										"id": 3620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3619,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "7091:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3621,
												"src": "7084:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3618,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7084:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7083:17:20"
									},
									"scope": 3864,
									"src": "6843:258:20",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3622,
										"nodeType": "StructuredDocumentation",
										"src": "7109:1535:20",
										"text": " @notice Publishes an instruction for the default delivery provider\n to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\n with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\n Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\n        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\n @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\n @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n @param refundAddress The address on `refundChain` to deliver any refund to\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "32b2fc0e",
									"id": 3645,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendVaasToEvm",
									"nameLocation": "8659:13:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3624,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "8690:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3645,
												"src": "8683:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3623,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8683:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3626,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "8720:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3645,
												"src": "8712:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8712:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3628,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "8757:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3645,
												"src": "8744:20:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8744:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3630,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "8783:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3645,
												"src": "8775:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8775:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3632,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "8815:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3645,
												"src": "8807:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8807:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3636,
												"mutability": "mutable",
												"name": "vaaKeys",
												"nameLocation": "8850:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3645,
												"src": "8834:23:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct VaaKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 3634,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3633,
															"name": "VaaKey",
															"nameLocations": [
																"8834:6:20"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3514,
															"src": "8834:6:20"
														},
														"referencedDeclaration": 3514,
														"src": "8834:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$3514_storage_ptr",
															"typeString": "struct VaaKey"
														}
													},
													"id": 3635,
													"nodeType": "ArrayTypeName",
													"src": "8834:8:20",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_storage_$dyn_storage_ptr",
														"typeString": "struct VaaKey[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3638,
												"mutability": "mutable",
												"name": "refundChain",
												"nameLocation": "8875:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3645,
												"src": "8868:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3637,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8868:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3640,
												"mutability": "mutable",
												"name": "refundAddress",
												"nameLocation": "8905:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3645,
												"src": "8897:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8897:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8672:253:20"
									},
									"returnParameters": {
										"id": 3644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3643,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "8959:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3645,
												"src": "8952:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3642,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8952:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8951:17:20"
									},
									"scope": 3864,
									"src": "8650:319:20",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3646,
										"nodeType": "StructuredDocumentation",
										"src": "8977:2256:20",
										"text": " @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\n to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\n with gas limit `gasLimit` and `msg.value` equal to\n receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\n Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to\n quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\n        (in addition to the `receiverValue` specified)\n @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\n        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\n @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n @param refundAddress The address on `refundChain` to deliver any refund to\n @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\n @param consistencyLevel Consistency level with which to publish the delivery instructions - see\n        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "3a2c767d",
									"id": 3675,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendToEvm",
									"nameLocation": "11248:9:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3648,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "11275:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3675,
												"src": "11268:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3647,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "11268:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3650,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "11305:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3675,
												"src": "11297:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11297:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3652,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "11342:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3675,
												"src": "11329:20:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3651,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11329:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3654,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "11368:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3675,
												"src": "11360:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11360:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3656,
												"mutability": "mutable",
												"name": "paymentForExtraReceiverValue",
												"nameLocation": "11400:28:20",
												"nodeType": "VariableDeclaration",
												"scope": 3675,
												"src": "11392:36:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11392:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3658,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "11447:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3675,
												"src": "11439:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11439:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3660,
												"mutability": "mutable",
												"name": "refundChain",
												"nameLocation": "11473:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3675,
												"src": "11466:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3659,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "11466:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3662,
												"mutability": "mutable",
												"name": "refundAddress",
												"nameLocation": "11503:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3675,
												"src": "11495:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11495:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3664,
												"mutability": "mutable",
												"name": "deliveryProviderAddress",
												"nameLocation": "11535:23:20",
												"nodeType": "VariableDeclaration",
												"scope": 3675,
												"src": "11527:31:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11527:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3668,
												"mutability": "mutable",
												"name": "vaaKeys",
												"nameLocation": "11585:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3675,
												"src": "11569:23:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct VaaKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 3666,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3665,
															"name": "VaaKey",
															"nameLocations": [
																"11569:6:20"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3514,
															"src": "11569:6:20"
														},
														"referencedDeclaration": 3514,
														"src": "11569:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$3514_storage_ptr",
															"typeString": "struct VaaKey"
														}
													},
													"id": 3667,
													"nodeType": "ArrayTypeName",
													"src": "11569:8:20",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_storage_$dyn_storage_ptr",
														"typeString": "struct VaaKey[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3670,
												"mutability": "mutable",
												"name": "consistencyLevel",
												"nameLocation": "11609:16:20",
												"nodeType": "VariableDeclaration",
												"scope": 3675,
												"src": "11603:22:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3669,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11603:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11257:375:20"
									},
									"returnParameters": {
										"id": 3674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3673,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "11666:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3675,
												"src": "11659:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3672,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "11659:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11658:17:20"
									},
									"scope": 3864,
									"src": "11239:437:20",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3676,
										"nodeType": "StructuredDocumentation",
										"src": "11684:2540:20",
										"text": " @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\n to relay a payload and external messages specified by `messageKeys` to the address `targetAddress` on chain `targetChain`\n with gas limit `gasLimit` and `msg.value` equal to\n receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\n Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to\n quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue\n Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected\n DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\n        (in addition to the `receiverValue` specified)\n @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\n        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\n @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n @param refundAddress The address on `refundChain` to deliver any refund to\n @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @param messageKeys Additional messagess to pass in as parameter in call to `targetAddress`\n @param consistencyLevel Consistency level with which to publish the delivery instructions - see\n        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "c055120e",
									"id": 3705,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendToEvm",
									"nameLocation": "14239:9:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3678,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "14266:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3705,
												"src": "14259:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3677,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "14259:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3680,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "14296:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3705,
												"src": "14288:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14288:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3682,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "14333:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3705,
												"src": "14320:20:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3681,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14320:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3684,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "14359:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3705,
												"src": "14351:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14351:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3686,
												"mutability": "mutable",
												"name": "paymentForExtraReceiverValue",
												"nameLocation": "14391:28:20",
												"nodeType": "VariableDeclaration",
												"scope": 3705,
												"src": "14383:36:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14383:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3688,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "14438:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3705,
												"src": "14430:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14430:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3690,
												"mutability": "mutable",
												"name": "refundChain",
												"nameLocation": "14464:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3705,
												"src": "14457:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3689,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "14457:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3692,
												"mutability": "mutable",
												"name": "refundAddress",
												"nameLocation": "14494:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3705,
												"src": "14486:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14486:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3694,
												"mutability": "mutable",
												"name": "deliveryProviderAddress",
												"nameLocation": "14526:23:20",
												"nodeType": "VariableDeclaration",
												"scope": 3705,
												"src": "14518:31:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14518:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3698,
												"mutability": "mutable",
												"name": "messageKeys",
												"nameLocation": "14580:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3705,
												"src": "14560:31:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_MessageKey_$3522_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct MessageKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 3696,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3695,
															"name": "MessageKey",
															"nameLocations": [
																"14560:10:20"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3522,
															"src": "14560:10:20"
														},
														"referencedDeclaration": 3522,
														"src": "14560:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MessageKey_$3522_storage_ptr",
															"typeString": "struct MessageKey"
														}
													},
													"id": 3697,
													"nodeType": "ArrayTypeName",
													"src": "14560:12:20",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MessageKey_$3522_storage_$dyn_storage_ptr",
														"typeString": "struct MessageKey[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3700,
												"mutability": "mutable",
												"name": "consistencyLevel",
												"nameLocation": "14608:16:20",
												"nodeType": "VariableDeclaration",
												"scope": 3705,
												"src": "14602:22:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3699,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "14602:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14248:383:20"
									},
									"returnParameters": {
										"id": 3704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3703,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "14665:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3705,
												"src": "14658:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3702,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "14658:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14657:17:20"
									},
									"scope": 3864,
									"src": "14230:445:20",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3706,
										"nodeType": "StructuredDocumentation",
										"src": "14683:2323:20",
										"text": " @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\n to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\n with `msg.value` equal to\n receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\n Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to\n quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\n        (in addition to the `receiverValue` specified)\n @param encodedExecutionParameters encoded information on how to execute delivery that may impact pricing\n        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\n @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n @param refundAddress The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\n @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\n @param consistencyLevel Consistency level with which to publish the delivery instructions - see\n        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "c81fb7fe",
									"id": 3735,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nameLocation": "17021:4:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3708,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "17043:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3735,
												"src": "17036:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3707,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "17036:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3710,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "17073:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3735,
												"src": "17065:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3709,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17065:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3712,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "17110:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3735,
												"src": "17097:20:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3711,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17097:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3714,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "17136:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3735,
												"src": "17128:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17128:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3716,
												"mutability": "mutable",
												"name": "paymentForExtraReceiverValue",
												"nameLocation": "17168:28:20",
												"nodeType": "VariableDeclaration",
												"scope": 3735,
												"src": "17160:36:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17160:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3718,
												"mutability": "mutable",
												"name": "encodedExecutionParameters",
												"nameLocation": "17220:26:20",
												"nodeType": "VariableDeclaration",
												"scope": 3735,
												"src": "17207:39:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3717,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17207:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3720,
												"mutability": "mutable",
												"name": "refundChain",
												"nameLocation": "17264:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3735,
												"src": "17257:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3719,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "17257:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3722,
												"mutability": "mutable",
												"name": "refundAddress",
												"nameLocation": "17294:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3735,
												"src": "17286:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3721,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17286:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3724,
												"mutability": "mutable",
												"name": "deliveryProviderAddress",
												"nameLocation": "17326:23:20",
												"nodeType": "VariableDeclaration",
												"scope": 3735,
												"src": "17318:31:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17318:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3728,
												"mutability": "mutable",
												"name": "vaaKeys",
												"nameLocation": "17376:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3735,
												"src": "17360:23:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct VaaKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 3726,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3725,
															"name": "VaaKey",
															"nameLocations": [
																"17360:6:20"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3514,
															"src": "17360:6:20"
														},
														"referencedDeclaration": 3514,
														"src": "17360:6:20",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$3514_storage_ptr",
															"typeString": "struct VaaKey"
														}
													},
													"id": 3727,
													"nodeType": "ArrayTypeName",
													"src": "17360:8:20",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_VaaKey_$3514_storage_$dyn_storage_ptr",
														"typeString": "struct VaaKey[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3730,
												"mutability": "mutable",
												"name": "consistencyLevel",
												"nameLocation": "17400:16:20",
												"nodeType": "VariableDeclaration",
												"scope": 3735,
												"src": "17394:22:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3729,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "17394:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17025:398:20"
									},
									"returnParameters": {
										"id": 3734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3733,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "17457:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3735,
												"src": "17450:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3732,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "17450:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17449:17:20"
									},
									"scope": 3864,
									"src": "17012:455:20",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3736,
										"nodeType": "StructuredDocumentation",
										"src": "17475:2590:20",
										"text": " @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\n to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\n with `msg.value` equal to\n receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\n Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to\n quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue\n Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected\n DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\n        (in addition to the `receiverValue` specified)\n @param encodedExecutionParameters encoded information on how to execute delivery that may impact pricing\n        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\n @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n @param refundAddress The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\n @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @param messageKeys Additional messagess to pass in as parameter in call to `targetAddress`\n @param consistencyLevel Consistency level with which to publish the delivery instructions - see\n        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "cee4bda0",
									"id": 3765,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nameLocation": "20080:4:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3738,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "20102:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3765,
												"src": "20095:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3737,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "20095:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3740,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "20132:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3765,
												"src": "20124:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3739,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20124:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3742,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "20169:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3765,
												"src": "20156:20:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3741,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20156:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3744,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "20195:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3765,
												"src": "20187:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20187:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3746,
												"mutability": "mutable",
												"name": "paymentForExtraReceiverValue",
												"nameLocation": "20227:28:20",
												"nodeType": "VariableDeclaration",
												"scope": 3765,
												"src": "20219:36:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20219:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3748,
												"mutability": "mutable",
												"name": "encodedExecutionParameters",
												"nameLocation": "20279:26:20",
												"nodeType": "VariableDeclaration",
												"scope": 3765,
												"src": "20266:39:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3747,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20266:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3750,
												"mutability": "mutable",
												"name": "refundChain",
												"nameLocation": "20323:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3765,
												"src": "20316:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3749,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "20316:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3752,
												"mutability": "mutable",
												"name": "refundAddress",
												"nameLocation": "20353:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3765,
												"src": "20345:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3751,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20345:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3754,
												"mutability": "mutable",
												"name": "deliveryProviderAddress",
												"nameLocation": "20385:23:20",
												"nodeType": "VariableDeclaration",
												"scope": 3765,
												"src": "20377:31:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20377:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3758,
												"mutability": "mutable",
												"name": "messageKeys",
												"nameLocation": "20439:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3765,
												"src": "20419:31:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_MessageKey_$3522_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct MessageKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 3756,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3755,
															"name": "MessageKey",
															"nameLocations": [
																"20419:10:20"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3522,
															"src": "20419:10:20"
														},
														"referencedDeclaration": 3522,
														"src": "20419:10:20",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MessageKey_$3522_storage_ptr",
															"typeString": "struct MessageKey"
														}
													},
													"id": 3757,
													"nodeType": "ArrayTypeName",
													"src": "20419:12:20",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MessageKey_$3522_storage_$dyn_storage_ptr",
														"typeString": "struct MessageKey[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3760,
												"mutability": "mutable",
												"name": "consistencyLevel",
												"nameLocation": "20467:16:20",
												"nodeType": "VariableDeclaration",
												"scope": 3765,
												"src": "20461:22:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3759,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "20461:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20084:406:20"
									},
									"returnParameters": {
										"id": 3764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3763,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "20524:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3765,
												"src": "20517:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3762,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "20517:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20516:17:20"
									},
									"scope": 3864,
									"src": "20071:463:20",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3766,
										"nodeType": "StructuredDocumentation",
										"src": "20542:1850:20",
										"text": " @notice Requests a previously published delivery instruction to be redelivered\n (e.g. with a different delivery provider)\n This function must be called with `msg.value` equal to\n quoteEVMDeliveryPrice(targetChain, newReceiverValue, newGasLimit, newDeliveryProviderAddress)\n  @notice *** This will only be able to succeed if the following is true **\n         - newGasLimit >= gas limit of the old instruction\n         - newReceiverValue >= receiver value of the old instruction\n         - newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`\n @param deliveryVaaKey VaaKey identifying the wormhole message containing the\n        previously published delivery instructions\n @param targetChain The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\n @param newReceiverValue new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param newGasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\n        `targetChainRefundPerGasUnused` rate quoted by the delivery provider, to the refund chain and address specified in the original request\n @param newDeliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @return sequence sequence number of published VAA containing redelivery instructions\n @notice *** This will only be able to succeed if the following is true **\n         - newGasLimit >= gas limit of the old instruction\n         - newReceiverValue >= receiver value of the old instruction"
									},
									"functionSelector": "8b0301b1",
									"id": 3782,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "resendToEvm",
									"nameLocation": "22407:11:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3769,
												"mutability": "mutable",
												"name": "deliveryVaaKey",
												"nameLocation": "22443:14:20",
												"nodeType": "VariableDeclaration",
												"scope": 3782,
												"src": "22429:28:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VaaKey_$3514_memory_ptr",
													"typeString": "struct VaaKey"
												},
												"typeName": {
													"id": 3768,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3767,
														"name": "VaaKey",
														"nameLocations": [
															"22429:6:20"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3514,
														"src": "22429:6:20"
													},
													"referencedDeclaration": 3514,
													"src": "22429:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$3514_storage_ptr",
														"typeString": "struct VaaKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3771,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "22475:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3782,
												"src": "22468:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3770,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "22468:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3773,
												"mutability": "mutable",
												"name": "newReceiverValue",
												"nameLocation": "22505:16:20",
												"nodeType": "VariableDeclaration",
												"scope": 3782,
												"src": "22497:24:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22497:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3775,
												"mutability": "mutable",
												"name": "newGasLimit",
												"nameLocation": "22540:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3782,
												"src": "22532:19:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22532:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3777,
												"mutability": "mutable",
												"name": "newDeliveryProviderAddress",
												"nameLocation": "22570:26:20",
												"nodeType": "VariableDeclaration",
												"scope": 3782,
												"src": "22562:34:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22562:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22418:185:20"
									},
									"returnParameters": {
										"id": 3781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3780,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "22637:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3782,
												"src": "22630:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3779,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "22630:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22629:17:20"
									},
									"scope": 3864,
									"src": "22398:249:20",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3783,
										"nodeType": "StructuredDocumentation",
										"src": "22655:1575:20",
										"text": " @notice Requests a previously published delivery instruction to be redelivered\n This function must be called with `msg.value` equal to\n quoteDeliveryPrice(targetChain, newReceiverValue, newEncodedExecutionParameters, newDeliveryProviderAddress)\n @param deliveryVaaKey VaaKey identifying the wormhole message containing the\n        previously published delivery instructions\n @param targetChain The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\n @param newReceiverValue new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param newEncodedExecutionParameters new encoded information on how to execute delivery that may impact pricing\n        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\n @param newDeliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @return sequence sequence number of published VAA containing redelivery instructions\n  @notice *** This will only be able to succeed if the following is true **\n         - (For EVM_V1) newGasLimit >= gas limit of the old instruction\n         - newReceiverValue >= receiver value of the old instruction\n         - (For EVM_V1) newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`"
									},
									"functionSelector": "b686d089",
									"id": 3799,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "resend",
									"nameLocation": "24245:6:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3786,
												"mutability": "mutable",
												"name": "deliveryVaaKey",
												"nameLocation": "24276:14:20",
												"nodeType": "VariableDeclaration",
												"scope": 3799,
												"src": "24262:28:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VaaKey_$3514_memory_ptr",
													"typeString": "struct VaaKey"
												},
												"typeName": {
													"id": 3785,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3784,
														"name": "VaaKey",
														"nameLocations": [
															"24262:6:20"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3514,
														"src": "24262:6:20"
													},
													"referencedDeclaration": 3514,
													"src": "24262:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$3514_storage_ptr",
														"typeString": "struct VaaKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3788,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "24308:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3799,
												"src": "24301:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3787,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "24301:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3790,
												"mutability": "mutable",
												"name": "newReceiverValue",
												"nameLocation": "24338:16:20",
												"nodeType": "VariableDeclaration",
												"scope": 3799,
												"src": "24330:24:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24330:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3792,
												"mutability": "mutable",
												"name": "newEncodedExecutionParameters",
												"nameLocation": "24378:29:20",
												"nodeType": "VariableDeclaration",
												"scope": 3799,
												"src": "24365:42:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3791,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24365:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3794,
												"mutability": "mutable",
												"name": "newDeliveryProviderAddress",
												"nameLocation": "24426:26:20",
												"nodeType": "VariableDeclaration",
												"scope": 3799,
												"src": "24418:34:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24418:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24251:208:20"
									},
									"returnParameters": {
										"id": 3798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3797,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "24493:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3799,
												"src": "24486:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3796,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "24486:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24485:17:20"
									},
									"scope": 3864,
									"src": "24236:267:20",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3800,
										"nodeType": "StructuredDocumentation",
										"src": "24511:1142:20",
										"text": " @notice Returns the price to request a relay to chain `targetChain`, using the default delivery provider\n @param targetChain in Wormhole Chain ID format\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param gasLimit gas limit with which to call `targetAddress`.\n @return nativePriceQuote Price, in units of current chain currency, that the delivery provider charges to perform the relay\n @return targetChainRefundPerGasUnused amount of target chain currency that will be refunded per unit of gas unused,\n         if a refundAddress is specified.\n         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a\n         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.\n         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain."
									},
									"functionSelector": "c23ee3c3",
									"id": 3813,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteEVMDeliveryPrice",
									"nameLocation": "25668:21:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3802,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "25707:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3813,
												"src": "25700:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3801,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "25700:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3804,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "25737:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3813,
												"src": "25729:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25729:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3806,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "25769:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3813,
												"src": "25761:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25761:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25689:95:20"
									},
									"returnParameters": {
										"id": 3812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3809,
												"mutability": "mutable",
												"name": "nativePriceQuote",
												"nameLocation": "25857:16:20",
												"nodeType": "VariableDeclaration",
												"scope": 3813,
												"src": "25849:24:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25849:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3811,
												"mutability": "mutable",
												"name": "targetChainRefundPerGasUnused",
												"nameLocation": "25896:29:20",
												"nodeType": "VariableDeclaration",
												"scope": 3813,
												"src": "25888:37:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25888:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25834:102:20"
									},
									"scope": 3864,
									"src": "25659:278:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3814,
										"nodeType": "StructuredDocumentation",
										"src": "25945:1277:20",
										"text": " @notice Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\n @param targetChain in Wormhole Chain ID format\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param gasLimit gas limit with which to call `targetAddress`.\n @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @return nativePriceQuote Price, in units of current chain currency, that the delivery provider charges to perform the relay\n @return targetChainRefundPerGasUnused amount of target chain currency that will be refunded per unit of gas unused,\n         if a refundAddress is specified\n         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a\n         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.\n         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain."
									},
									"functionSelector": "80ebabd0",
									"id": 3829,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteEVMDeliveryPrice",
									"nameLocation": "27237:21:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3816,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "27276:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3829,
												"src": "27269:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3815,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "27269:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3818,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "27306:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3829,
												"src": "27298:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27298:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3820,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "27338:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3829,
												"src": "27330:16:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27330:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3822,
												"mutability": "mutable",
												"name": "deliveryProviderAddress",
												"nameLocation": "27365:23:20",
												"nodeType": "VariableDeclaration",
												"scope": 3829,
												"src": "27357:31:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27357:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27258:137:20"
									},
									"returnParameters": {
										"id": 3828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3825,
												"mutability": "mutable",
												"name": "nativePriceQuote",
												"nameLocation": "27468:16:20",
												"nodeType": "VariableDeclaration",
												"scope": 3829,
												"src": "27460:24:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27460:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3827,
												"mutability": "mutable",
												"name": "targetChainRefundPerGasUnused",
												"nameLocation": "27507:29:20",
												"nodeType": "VariableDeclaration",
												"scope": 3829,
												"src": "27499:37:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27499:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27445:102:20"
									},
									"scope": 3864,
									"src": "27228:320:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3830,
										"nodeType": "StructuredDocumentation",
										"src": "27556:1207:20",
										"text": " @notice Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\n @param targetChain in Wormhole Chain ID format\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param encodedExecutionParameters encoded information on how to execute delivery that may impact pricing\n        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\n @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @return nativePriceQuote Price, in units of current chain currency, that the delivery provider charges to perform the relay\n @return encodedExecutionInfo encoded information on how the delivery will be executed\n        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` and `targetChainRefundPerGasUnused`\n             (which is the amount of target chain currency that will be refunded per unit of gas unused,\n              if a refundAddress is specified)"
									},
									"functionSelector": "a79629d8",
									"id": 3845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteDeliveryPrice",
									"nameLocation": "28778:18:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3832,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "28814:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3845,
												"src": "28807:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3831,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "28807:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3834,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "28844:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3845,
												"src": "28836:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28836:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3836,
												"mutability": "mutable",
												"name": "encodedExecutionParameters",
												"nameLocation": "28881:26:20",
												"nodeType": "VariableDeclaration",
												"scope": 3845,
												"src": "28868:39:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3835,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28868:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3838,
												"mutability": "mutable",
												"name": "deliveryProviderAddress",
												"nameLocation": "28926:23:20",
												"nodeType": "VariableDeclaration",
												"scope": 3845,
												"src": "28918:31:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28918:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28796:160:20"
									},
									"returnParameters": {
										"id": 3844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3841,
												"mutability": "mutable",
												"name": "nativePriceQuote",
												"nameLocation": "29015:16:20",
												"nodeType": "VariableDeclaration",
												"scope": 3845,
												"src": "29007:24:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29007:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3843,
												"mutability": "mutable",
												"name": "encodedExecutionInfo",
												"nameLocation": "29046:20:20",
												"nodeType": "VariableDeclaration",
												"scope": 3845,
												"src": "29033:33:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3842,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29033:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29006:61:20"
									},
									"scope": 3864,
									"src": "28769:299:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3846,
										"nodeType": "StructuredDocumentation",
										"src": "29076:650:20",
										"text": " @notice Returns the (extra) amount of target chain currency that `targetAddress`\n will be called with, if the `paymentForExtraReceiverValue` field is set to `currentChainAmount`\n @param targetChain in Wormhole Chain ID format\n @param currentChainAmount The value that `paymentForExtraReceiverValue` will be set to\n @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @return targetChainAmount The amount such that if `targetAddress` will be called with `msg.value` equal to\n         receiverValue + targetChainAmount"
									},
									"functionSelector": "2385904a",
									"id": 3857,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteNativeForChain",
									"nameLocation": "29741:19:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3848,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "29778:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3857,
												"src": "29771:18:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3847,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "29771:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3850,
												"mutability": "mutable",
												"name": "currentChainAmount",
												"nameLocation": "29808:18:20",
												"nodeType": "VariableDeclaration",
												"scope": 3857,
												"src": "29800:26:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29800:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3852,
												"mutability": "mutable",
												"name": "deliveryProviderAddress",
												"nameLocation": "29845:23:20",
												"nodeType": "VariableDeclaration",
												"scope": 3857,
												"src": "29837:31:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29837:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29760:115:20"
									},
									"returnParameters": {
										"id": 3856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3855,
												"mutability": "mutable",
												"name": "targetChainAmount",
												"nameLocation": "29907:17:20",
												"nodeType": "VariableDeclaration",
												"scope": 3857,
												"src": "29899:25:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29899:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29898:27:20"
									},
									"scope": 3864,
									"src": "29732:194:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3858,
										"nodeType": "StructuredDocumentation",
										"src": "29934:271:20",
										"text": " @notice Returns the address of the current default delivery provider\n @return deliveryProvider The address of (the default delivery provider)'s contract on this source\n   chain. This must be a contract that implements IDeliveryProvider."
									},
									"functionSelector": "24320c9f",
									"id": 3863,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDefaultDeliveryProvider",
									"nameLocation": "30220:26:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30246:2:20"
									},
									"returnParameters": {
										"id": 3862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3861,
												"mutability": "mutable",
												"name": "deliveryProvider",
												"nameLocation": "30307:16:20",
												"nodeType": "VariableDeclaration",
												"scope": 3863,
												"src": "30299:24:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30299:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30298:26:20"
									},
									"scope": 3864,
									"src": "30211:114:20",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4013,
							"src": "2262:28066:20",
							"usedErrors": [],
							"usedEvents": [
								3530
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3866,
										"name": "IWormholeRelayerBase",
										"nameLocations": [
											"30502:20:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3562,
										"src": "30502:20:20"
									},
									"id": 3867,
									"nodeType": "InheritanceSpecifier",
									"src": "30502:20:20"
								}
							],
							"canonicalName": "IWormholeRelayerDelivery",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3865,
								"nodeType": "StructuredDocumentation",
								"src": "30332:130:20",
								"text": " @title IWormholeRelayerDelivery\n @notice The interface to execute deliveries. Only relevant for Delivery Providers"
							},
							"fullyImplemented": false,
							"id": 3914,
							"linearizedBaseContracts": [
								3914,
								3562
							],
							"name": "IWormholeRelayerDelivery",
							"nameLocation": "30474:24:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IWormholeRelayerDelivery.DeliveryStatus",
									"id": 3870,
									"members": [
										{
											"id": 3868,
											"name": "SUCCESS",
											"nameLocation": "30561:7:20",
											"nodeType": "EnumValue",
											"src": "30561:7:20"
										},
										{
											"id": 3869,
											"name": "RECEIVER_FAILURE",
											"nameLocation": "30579:16:20",
											"nodeType": "EnumValue",
											"src": "30579:16:20"
										}
									],
									"name": "DeliveryStatus",
									"nameLocation": "30535:14:20",
									"nodeType": "EnumDefinition",
									"src": "30530:72:20"
								},
								{
									"canonicalName": "IWormholeRelayerDelivery.RefundStatus",
									"id": 3877,
									"members": [
										{
											"id": 3871,
											"name": "REFUND_SENT",
											"nameLocation": "30639:11:20",
											"nodeType": "EnumValue",
											"src": "30639:11:20"
										},
										{
											"id": 3872,
											"name": "REFUND_FAIL",
											"nameLocation": "30661:11:20",
											"nodeType": "EnumValue",
											"src": "30661:11:20"
										},
										{
											"id": 3873,
											"name": "CROSS_CHAIN_REFUND_SENT",
											"nameLocation": "30683:23:20",
											"nodeType": "EnumValue",
											"src": "30683:23:20"
										},
										{
											"id": 3874,
											"name": "CROSS_CHAIN_REFUND_FAIL_PROVIDER_NOT_SUPPORTED",
											"nameLocation": "30717:46:20",
											"nodeType": "EnumValue",
											"src": "30717:46:20"
										},
										{
											"id": 3875,
											"name": "CROSS_CHAIN_REFUND_FAIL_NOT_ENOUGH",
											"nameLocation": "30774:34:20",
											"nodeType": "EnumValue",
											"src": "30774:34:20"
										},
										{
											"id": 3876,
											"name": "NO_REFUND_REQUESTED",
											"nameLocation": "30819:19:20",
											"nodeType": "EnumValue",
											"src": "30819:19:20"
										}
									],
									"name": "RefundStatus",
									"nameLocation": "30615:12:20",
									"nodeType": "EnumDefinition",
									"src": "30610:235:20"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3878,
										"nodeType": "StructuredDocumentation",
										"src": "30853:1484:20",
										"text": " @custom:member recipientContract - The target contract address\n @custom:member sourceChain - The chain which this delivery was requested from (in wormhole\n     ChainID format)\n @custom:member sequence - The wormhole sequence number of the delivery VAA on the source chain\n     corresponding to this delivery request\n @custom:member deliveryVaaHash - The hash of the delivery VAA corresponding to this delivery\n     request\n @custom:member gasUsed - The amount of gas that was used to call your target contract\n @custom:member status:\n   - RECEIVER_FAILURE, if the target contract reverts\n   - SUCCESS, if the target contract doesn't revert\n @custom:member additionalStatusInfo:\n   - If status is SUCCESS, then this is empty.\n   - If status is RECEIVER_FAILURE, this is `RETURNDATA_TRUNCATION_THRESHOLD` bytes of the\n       return data (i.e. potentially truncated revert reason information).\n @custom:member refundStatus - Result of the refund. REFUND_SUCCESS or REFUND_FAIL are for\n     refunds where targetChain=refundChain; the others are for targetChain!=refundChain,\n     where a cross chain refund is necessary, or if the default code path is used where no refund is requested (NO_REFUND_REQUESTED)\n @custom:member overridesInfo:\n   - If not an override: empty bytes array\n   - Otherwise: An encoded `DeliveryOverride`"
									},
									"eventSelector": "bccc00b713f54173962e7de6098f643d8ebf53d488d71f4b2a5171496d038f9e",
									"id": 3900,
									"name": "Delivery",
									"nameLocation": "32349:8:20",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3880,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipientContract",
												"nameLocation": "32384:17:20",
												"nodeType": "VariableDeclaration",
												"scope": 3900,
												"src": "32368:33:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32368:7:20",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3882,
												"indexed": true,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "32427:11:20",
												"nodeType": "VariableDeclaration",
												"scope": 3900,
												"src": "32412:26:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3881,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "32412:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3884,
												"indexed": true,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "32464:8:20",
												"nodeType": "VariableDeclaration",
												"scope": 3900,
												"src": "32449:23:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3883,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "32449:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3886,
												"indexed": false,
												"mutability": "mutable",
												"name": "deliveryVaaHash",
												"nameLocation": "32491:15:20",
												"nodeType": "VariableDeclaration",
												"scope": 3900,
												"src": "32483:23:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3885,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32483:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3889,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "32532:6:20",
												"nodeType": "VariableDeclaration",
												"scope": 3900,
												"src": "32517:21:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_DeliveryStatus_$3870",
													"typeString": "enum IWormholeRelayerDelivery.DeliveryStatus"
												},
												"typeName": {
													"id": 3888,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3887,
														"name": "DeliveryStatus",
														"nameLocations": [
															"32517:14:20"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3870,
														"src": "32517:14:20"
													},
													"referencedDeclaration": 3870,
													"src": "32517:14:20",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_DeliveryStatus_$3870",
														"typeString": "enum IWormholeRelayerDelivery.DeliveryStatus"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3891,
												"indexed": false,
												"mutability": "mutable",
												"name": "gasUsed",
												"nameLocation": "32557:7:20",
												"nodeType": "VariableDeclaration",
												"scope": 3900,
												"src": "32549:15:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32549:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3894,
												"indexed": false,
												"mutability": "mutable",
												"name": "refundStatus",
												"nameLocation": "32588:12:20",
												"nodeType": "VariableDeclaration",
												"scope": 3900,
												"src": "32575:25:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RefundStatus_$3877",
													"typeString": "enum IWormholeRelayerDelivery.RefundStatus"
												},
												"typeName": {
													"id": 3893,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3892,
														"name": "RefundStatus",
														"nameLocations": [
															"32575:12:20"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3877,
														"src": "32575:12:20"
													},
													"referencedDeclaration": 3877,
													"src": "32575:12:20",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RefundStatus_$3877",
														"typeString": "enum IWormholeRelayerDelivery.RefundStatus"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3896,
												"indexed": false,
												"mutability": "mutable",
												"name": "additionalStatusInfo",
												"nameLocation": "32617:20:20",
												"nodeType": "VariableDeclaration",
												"scope": 3900,
												"src": "32611:26:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3895,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32611:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3898,
												"indexed": false,
												"mutability": "mutable",
												"name": "overridesInfo",
												"nameLocation": "32654:13:20",
												"nodeType": "VariableDeclaration",
												"scope": 3900,
												"src": "32648:19:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3897,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32648:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32357:317:20"
									},
									"src": "32343:332:20"
								},
								{
									"documentation": {
										"id": 3901,
										"nodeType": "StructuredDocumentation",
										"src": "32683:1611:20",
										"text": " @notice The delivery provider calls `deliver` to relay messages as described by one delivery instruction\n The delivery provider must pass in the specified (by VaaKeys[]) signed wormhole messages (VAAs) from the source chain\n as well as the signed wormhole message with the delivery instructions (the delivery VAA)\n The messages will be relayed to the target address (with the specified gas limit and receiver value) iff the following checks are met:\n - the delivery VAA has a valid signature\n - the delivery VAA's emitter is one of these WormholeRelayer contracts\n - the delivery provider passed in at least enough of this chain's currency as msg.value (enough meaning the maximum possible refund)\n - the instruction's target chain is this chain\n - the relayed signed VAAs match the descriptions in container.messages (the VAA hashes match, or the emitter address, sequence number pair matches, depending on the description given)\n @param encodedVMs - An array of signed wormhole messages (all from the same source chain\n     transaction)\n @param encodedDeliveryVAA - Signed wormhole message from the source chain's WormholeRelayer\n     contract with payload being the encoded delivery instruction container\n @param relayerRefundAddress - The address to which any refunds to the delivery provider\n     should be sent\n @param deliveryOverrides - Optional overrides field which must be either an empty bytes array or\n     an encoded DeliveryOverride struct"
									},
									"functionSelector": "a60eb4c8",
									"id": 3913,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deliver",
									"nameLocation": "34309:7:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3904,
												"mutability": "mutable",
												"name": "encodedVMs",
												"nameLocation": "34342:10:20",
												"nodeType": "VariableDeclaration",
												"scope": 3913,
												"src": "34327:25:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 3902,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "34327:5:20",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 3903,
													"nodeType": "ArrayTypeName",
													"src": "34327:7:20",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3906,
												"mutability": "mutable",
												"name": "encodedDeliveryVAA",
												"nameLocation": "34376:18:20",
												"nodeType": "VariableDeclaration",
												"scope": 3913,
												"src": "34363:31:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3905,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34363:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3908,
												"mutability": "mutable",
												"name": "relayerRefundAddress",
												"nameLocation": "34421:20:20",
												"nodeType": "VariableDeclaration",
												"scope": 3913,
												"src": "34405:36:20",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34405:15:20",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3910,
												"mutability": "mutable",
												"name": "deliveryOverrides",
												"nameLocation": "34465:17:20",
												"nodeType": "VariableDeclaration",
												"scope": 3913,
												"src": "34452:30:20",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3909,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34452:5:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34316:173:20"
									},
									"returnParameters": {
										"id": 3912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34506:0:20"
									},
									"scope": 3914,
									"src": "34300:207:20",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4013,
							"src": "30464:4046:20",
							"usedErrors": [],
							"usedEvents": [
								3530,
								3900
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3915,
										"name": "IWormholeRelayerDelivery",
										"nameLocations": [
											"34544:24:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3914,
										"src": "34544:24:20"
									},
									"id": 3916,
									"nodeType": "InheritanceSpecifier",
									"src": "34544:24:20"
								},
								{
									"baseName": {
										"id": 3917,
										"name": "IWormholeRelayerSend",
										"nameLocations": [
											"34570:20:20"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3864,
										"src": "34570:20:20"
									},
									"id": 3918,
									"nodeType": "InheritanceSpecifier",
									"src": "34570:20:20"
								}
							],
							"canonicalName": "IWormholeRelayer",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3919,
							"linearizedBaseContracts": [
								3919,
								3864,
								3914,
								3562
							],
							"name": "IWormholeRelayer",
							"nameLocation": "34524:16:20",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 4013,
							"src": "34514:79:20",
							"usedErrors": [],
							"usedEvents": [
								3530,
								3900
							]
						},
						{
							"constant": true,
							"id": 3922,
							"mutability": "constant",
							"name": "RETURNDATA_TRUNCATION_THRESHOLD",
							"nameLocation": "34964:31:20",
							"nodeType": "VariableDeclaration",
							"scope": 4013,
							"src": "34947:54:20",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 3920,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "34947:7:20",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "313332",
								"id": 3921,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "34998:3:20",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_132_by_1",
									"typeString": "int_const 132"
								},
								"value": "132"
							},
							"visibility": "internal"
						},
						{
							"errorSelector": "1f89f671",
							"id": 3928,
							"name": "InvalidMsgValue",
							"nameLocation": "35124:15:20",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3927,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3924,
										"mutability": "mutable",
										"name": "msgValue",
										"nameLocation": "35148:8:20",
										"nodeType": "VariableDeclaration",
										"scope": 3928,
										"src": "35140:16:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 3923,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "35140:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3926,
										"mutability": "mutable",
										"name": "totalFee",
										"nameLocation": "35166:8:20",
										"nodeType": "VariableDeclaration",
										"scope": 3928,
										"src": "35158:16:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 3925,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "35158:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "35139:36:20"
							},
							"src": "35118:58:20"
						},
						{
							"errorSelector": "71ae1330",
							"id": 3930,
							"name": "RequestedGasLimitTooLow",
							"nameLocation": "35186:23:20",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3929,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "35209:2:20"
							},
							"src": "35180:32:20"
						},
						{
							"errorSelector": "66b69b9d",
							"id": 3936,
							"name": "DeliveryProviderDoesNotSupportTargetChain",
							"nameLocation": "35222:41:20",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3935,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3932,
										"mutability": "mutable",
										"name": "relayer",
										"nameLocation": "35278:7:20",
										"nodeType": "VariableDeclaration",
										"scope": 3936,
										"src": "35270:15:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 3931,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "35270:7:20",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3934,
										"mutability": "mutable",
										"name": "chainId",
										"nameLocation": "35299:7:20",
										"nodeType": "VariableDeclaration",
										"scope": 3936,
										"src": "35292:14:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 3933,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "35292:6:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "35263:46:20"
							},
							"src": "35216:94:20"
						},
						{
							"errorSelector": "95d64fa0",
							"id": 3938,
							"name": "DeliveryProviderCannotReceivePayment",
							"nameLocation": "35318:36:20",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3937,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "35354:2:20"
							},
							"src": "35312:45:20"
						},
						{
							"errorSelector": "82273f20",
							"id": 3942,
							"name": "DeliveryProviderDoesNotSupportMessageKeyType",
							"nameLocation": "35365:44:20",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3941,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3940,
										"mutability": "mutable",
										"name": "keyType",
										"nameLocation": "35416:7:20",
										"nodeType": "VariableDeclaration",
										"scope": 3942,
										"src": "35410:13:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"typeName": {
											"id": 3939,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "35410:5:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "35409:15:20"
							},
							"src": "35359:66:20"
						},
						{
							"errorSelector": "20b84ced",
							"id": 3948,
							"name": "ReentrantDelivery",
							"nameLocation": "35524:17:20",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3947,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3944,
										"mutability": "mutable",
										"name": "msgSender",
										"nameLocation": "35550:9:20",
										"nodeType": "VariableDeclaration",
										"scope": 3948,
										"src": "35542:17:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 3943,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "35542:7:20",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3946,
										"mutability": "mutable",
										"name": "lockedBy",
										"nameLocation": "35569:8:20",
										"nodeType": "VariableDeclaration",
										"scope": 3948,
										"src": "35561:16:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 3945,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "35561:7:20",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "35541:37:20"
							},
							"src": "35518:61:20"
						},
						{
							"errorSelector": "79cbfdbe",
							"id": 3954,
							"name": "InvalidPayloadId",
							"nameLocation": "35589:16:20",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3953,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3950,
										"mutability": "mutable",
										"name": "parsed",
										"nameLocation": "35612:6:20",
										"nodeType": "VariableDeclaration",
										"scope": 3954,
										"src": "35606:12:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"typeName": {
											"id": 3949,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "35606:5:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3952,
										"mutability": "mutable",
										"name": "expected",
										"nameLocation": "35626:8:20",
										"nodeType": "VariableDeclaration",
										"scope": 3954,
										"src": "35620:14:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"typeName": {
											"id": 3951,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "35620:5:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "35605:30:20"
							},
							"src": "35583:53:20"
						},
						{
							"errorSelector": "c37906a0",
							"id": 3960,
							"name": "InvalidPayloadLength",
							"nameLocation": "35644:20:20",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3959,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3956,
										"mutability": "mutable",
										"name": "received",
										"nameLocation": "35673:8:20",
										"nodeType": "VariableDeclaration",
										"scope": 3960,
										"src": "35665:16:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 3955,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "35665:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3958,
										"mutability": "mutable",
										"name": "expected",
										"nameLocation": "35691:8:20",
										"nodeType": "VariableDeclaration",
										"scope": 3960,
										"src": "35683:16:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 3957,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "35683:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "35664:36:20"
							},
							"src": "35638:63:20"
						},
						{
							"errorSelector": "249ede70",
							"id": 3964,
							"name": "InvalidVaaKeyType",
							"nameLocation": "35709:17:20",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3963,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3962,
										"mutability": "mutable",
										"name": "parsed",
										"nameLocation": "35733:6:20",
										"nodeType": "VariableDeclaration",
										"scope": 3964,
										"src": "35727:12:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"typeName": {
											"id": 3961,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "35727:5:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "35726:14:20"
							},
							"src": "35703:38:20"
						},
						{
							"errorSelector": "12d6a5c7",
							"id": 3968,
							"name": "TooManyMessageKeys",
							"nameLocation": "35749:18:20",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3967,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3966,
										"mutability": "mutable",
										"name": "numMessageKeys",
										"nameLocation": "35776:14:20",
										"nodeType": "VariableDeclaration",
										"scope": 3968,
										"src": "35768:22:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 3965,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "35768:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "35767:24:20"
							},
							"src": "35743:49:20"
						},
						{
							"errorSelector": "b72c3b7f",
							"id": 3972,
							"name": "InvalidDeliveryVaa",
							"nameLocation": "35802:18:20",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3971,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3970,
										"mutability": "mutable",
										"name": "reason",
										"nameLocation": "35828:6:20",
										"nodeType": "VariableDeclaration",
										"scope": 3972,
										"src": "35821:13:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_string_memory_ptr",
											"typeString": "string"
										},
										"typeName": {
											"id": 3969,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "35821:6:20",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "35820:15:20"
							},
							"src": "35796:40:20"
						},
						{
							"errorSelector": "776c06ce",
							"id": 3980,
							"name": "InvalidEmitter",
							"nameLocation": "35986:14:20",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3979,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3974,
										"mutability": "mutable",
										"name": "emitter",
										"nameLocation": "36009:7:20",
										"nodeType": "VariableDeclaration",
										"scope": 3980,
										"src": "36001:15:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 3973,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "36001:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3976,
										"mutability": "mutable",
										"name": "registered",
										"nameLocation": "36026:10:20",
										"nodeType": "VariableDeclaration",
										"scope": 3980,
										"src": "36018:18:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 3975,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "36018:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3978,
										"mutability": "mutable",
										"name": "chainId",
										"nameLocation": "36045:7:20",
										"nodeType": "VariableDeclaration",
										"scope": 3980,
										"src": "36038:14:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 3977,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "36038:6:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "36000:53:20"
							},
							"src": "35980:74:20"
						},
						{
							"errorSelector": "65c1f7cd",
							"id": 3986,
							"name": "MessageKeysLengthDoesNotMatchMessagesLength",
							"nameLocation": "36062:43:20",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3985,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3982,
										"mutability": "mutable",
										"name": "keys",
										"nameLocation": "36114:4:20",
										"nodeType": "VariableDeclaration",
										"scope": 3986,
										"src": "36106:12:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 3981,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "36106:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3984,
										"mutability": "mutable",
										"name": "vaas",
										"nameLocation": "36128:4:20",
										"nodeType": "VariableDeclaration",
										"scope": 3986,
										"src": "36120:12:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 3983,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "36120:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "36105:28:20"
							},
							"src": "36056:78:20"
						},
						{
							"errorSelector": "eb5e161c",
							"id": 3990,
							"name": "VaaKeysDoNotMatchVaas",
							"nameLocation": "36142:21:20",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3989,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3988,
										"mutability": "mutable",
										"name": "index",
										"nameLocation": "36170:5:20",
										"nodeType": "VariableDeclaration",
										"scope": 3990,
										"src": "36164:11:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"typeName": {
											"id": 3987,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "36164:5:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "36163:13:20"
							},
							"src": "36136:41:20"
						},
						{
							"errorSelector": "72132d5a",
							"id": 3992,
							"name": "RequesterNotWormholeRelayer",
							"nameLocation": "36374:27:20",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3991,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "36401:2:20"
							},
							"src": "36368:36:20"
						},
						{
							"errorSelector": "d8215fc9",
							"id": 3996,
							"name": "TargetChainIsNotThisChain",
							"nameLocation": "36514:25:20",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3995,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3994,
										"mutability": "mutable",
										"name": "targetChain",
										"nameLocation": "36547:11:20",
										"nodeType": "VariableDeclaration",
										"scope": 3996,
										"src": "36540:18:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 3993,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "36540:6:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "36539:20:20"
							},
							"src": "36508:52:20"
						},
						{
							"errorSelector": "afe343e8",
							"id": 3998,
							"name": "InvalidOverrideGasLimit",
							"nameLocation": "36648:23:20",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3997,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "36671:2:20"
							},
							"src": "36642:32:20"
						},
						{
							"errorSelector": "e3704808",
							"id": 4000,
							"name": "InvalidOverrideReceiverValue",
							"nameLocation": "36767:28:20",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3999,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "36795:2:20"
							},
							"src": "36761:37:20"
						},
						{
							"errorSelector": "0cfb7d9e",
							"id": 4002,
							"name": "InvalidOverrideRefundPerGasUnused",
							"nameLocation": "36908:33:20",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4001,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "36941:2:20"
							},
							"src": "36902:42:20"
						},
						{
							"errorSelector": "02216bc0",
							"id": 4008,
							"name": "InsufficientRelayerFunds",
							"nameLocation": "37093:24:20",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4007,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 4004,
										"mutability": "mutable",
										"name": "msgValue",
										"nameLocation": "37126:8:20",
										"nodeType": "VariableDeclaration",
										"scope": 4008,
										"src": "37118:16:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 4003,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "37118:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 4006,
										"mutability": "mutable",
										"name": "minimum",
										"nameLocation": "37144:7:20",
										"nodeType": "VariableDeclaration",
										"scope": 4008,
										"src": "37136:15:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 4005,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "37136:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "37117:35:20"
							},
							"src": "37087:66:20"
						},
						{
							"errorSelector": "33b960d0",
							"id": 4012,
							"name": "NotAnEvmAddress",
							"nameLocation": "37309:15:20",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4011,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 4010,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 4012,
										"src": "37325:7:20",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 4009,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "37325:7:20",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "37324:9:20"
							},
							"src": "37303:31:20"
						}
					],
					"src": "40:37296:20"
				},
				"id": 20
			}
		}
	}
}