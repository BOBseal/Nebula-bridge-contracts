{
	"id": "c74713e9370cb79a85180d0c4617f11b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"Nebula-bridge-contracts/src/TokenBase.sol": {
				"content": "pragma solidity ^0.8.13;\r\n\r\nimport \"./interfaces/IWormholeReceiver.sol\";\r\nimport \"./interfaces/IWormholeRelayer.sol\";\r\nimport \"./interfaces/ITokenBridge.sol\";\r\nimport {IERC20} from \"./interfaces/IERC20.sol\";\r\nimport {Base} from \"./WormholeRelayerSDK.sol\";\r\nimport \"../lib.d.sol\";\r\nimport \"./Utils.sol\";\r\n\r\nabstract contract TokenBase is Base {\r\n    ITokenBridge public tokenBridge;\r\n\r\n    function  _initTokenBase(address _wormholeRelayer,address _tokenBridge,address _wormhole) internal virtual{\r\n        _initBase(_wormholeRelayer , _wormhole);\r\n        tokenBridge = ITokenBridge(_tokenBridge);\r\n    }\r\n}\r\n\r\nabstract contract TokenSender is TokenBase {\r\n\r\n    /**\r\n     * transferTokens wraps common boilerplate for sending tokens to another chain using IWormholeRelayer.\r\n     * A payload can be included in the transfer vaa. By including a payload here instead of the deliveryVaa,\r\n     * fewer trust assumptions are placed on the WormholeRelayer contract.\r\n     *\r\n     * - approves tokenBridge to spend 'amount' of 'token'\r\n     * - emits token transfer VAA\r\n     * - returns VAA key for inclusion in WormholeRelayer `additionalVaas` argument\r\n     *\r\n     * Note: this function uses transferTokensWithPayload instead of transferTokens since the former requires that only the targetAddress\r\n     *       can redeem transfers. Otherwise it's possible for another address to redeem the transfer before the targetContract is invoked by\r\n     *       the offchain relayer and the target contract would have to be hardened against this.\r\n     */\r\n    function transferTokens(\r\n        address token,\r\n        uint256 amount,\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload\r\n    ) internal returns (VaaKey memory) {\r\n        IERC20(token).approve(address(tokenBridge), amount);\r\n        uint64 sequence = tokenBridge.transferTokensWithPayload{\r\n            value: wormhole.messageFee()\r\n        }(\r\n            token,\r\n            amount,\r\n            targetChain,\r\n            toWormholeFormat(targetAddress),\r\n            0,\r\n            payload\r\n        );\r\n        return\r\n            VaaKey({\r\n                emitterAddress: toWormholeFormat(address(tokenBridge)),\r\n                chainId: wormhole.chainId(),\r\n                sequence: sequence\r\n            });\r\n    }\r\n\r\n    // Publishes a wormhole message representing a 'TokenBridge' transfer of 'amount' of 'token'\r\n    // and requests a delivery of the transfer along with 'payload' to 'targetAddress' on 'targetChain'\r\n    //\r\n    // The second step is done by publishing a wormhole message representing a request\r\n    // to call 'receiveWormholeMessages' on the address 'targetAddress' on chain 'targetChain'\r\n    // with the payload 'payload'\r\n\r\n\r\n    function sendTokenWithPayloadToEvm(\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 gasLimit,\r\n        address token,\r\n        uint256 amount,\r\n        uint16 refundChain,\r\n        address refundAddress\r\n    ) internal returns (uint64) {\r\n        VaaKey[] memory vaaKeys = new VaaKey[](1);\r\n        vaaKeys[0] = transferTokens(token, amount, targetChain, targetAddress,bytes(\"\"));\r\n\r\n        (uint256 cost, ) = wormholeRelayer.quoteEVMDeliveryPrice(\r\n            targetChain,\r\n            receiverValue,\r\n            gasLimit\r\n        );\r\n        return\r\n            wormholeRelayer.sendVaasToEvm{value: cost}(\r\n                targetChain,\r\n                targetAddress,\r\n                payload,\r\n                receiverValue,\r\n                gasLimit,\r\n                vaaKeys,\r\n                refundChain,\r\n                refundAddress\r\n            );\r\n    }\r\n}\r\n\r\nabstract contract TokenReceiver is TokenBase {\r\n\r\n    function getDecimals(\r\n        address tokenAddress\r\n    ) internal view returns (uint8 decimals) {\r\n        // query decimals\r\n        (, bytes memory queriedDecimals) = address(tokenAddress).staticcall(\r\n            abi.encodeWithSignature(\"decimals()\")\r\n        );\r\n        decimals = abi.decode(queriedDecimals, (uint8));\r\n    }\r\n\r\n    function getTokenAddressOnThisChain(\r\n        uint16 tokenHomeChain,\r\n        bytes32 tokenHomeAddress\r\n    ) internal view returns (address tokenAddressOnThisChain) {\r\n        return\r\n            tokenHomeChain == wormhole.chainId()\r\n                ? fromWormholeFormat(tokenHomeAddress)\r\n                : tokenBridge.wrappedAsset(tokenHomeChain, tokenHomeAddress);\r\n    }\r\n\r\n    function receiveWormholeMessages(\r\n        bytes memory payload,\r\n        bytes[] memory additionalVaas,\r\n        bytes32 sourceAddress,\r\n        uint16 sourceChain,\r\n        bytes32 deliveryHash\r\n    ) external payable {\r\n        Structs.TokenReceived[] memory receivedTokens = new Structs.TokenReceived[](\r\n            additionalVaas.length\r\n        );\r\n\r\n        for (uint256 i = 0; i < additionalVaas.length; ++i) {\r\n            IWormhole.VM memory parsed = wormhole.parseVM(additionalVaas[i]);\r\n            require(\r\n                parsed.emitterAddress ==\r\n                    tokenBridge.bridgeContracts(parsed.emitterChainId),\r\n                \"Not a Token Bridge VAA\"\r\n            );\r\n            ITokenBridge.TransferWithPayload memory transfer = tokenBridge\r\n                .parseTransferWithPayload(parsed.payload);\r\n            require(\r\n                transfer.to == toWormholeFormat(address(this)) &&\r\n                    transfer.toChain == wormhole.chainId(),\r\n                \"Token not sent to this address\"\r\n            );\r\n\r\n            tokenBridge.completeTransferWithPayload(additionalVaas[i]);\r\n\r\n            address thisChainTokenAddress = getTokenAddressOnThisChain(\r\n                transfer.tokenChain,\r\n                transfer.tokenAddress\r\n            );\r\n            uint8 decimals = getDecimals(thisChainTokenAddress);\r\n            uint256 denormalizedAmount = transfer.amount;\r\n            if (decimals > 8)\r\n                denormalizedAmount *= uint256(10) ** (decimals - 8);\r\n\r\n            receivedTokens[i] = Structs.TokenReceived({\r\n                tokenHomeAddress: transfer.tokenAddress,\r\n                tokenHomeChain: transfer.tokenChain,\r\n                tokenAddress: thisChainTokenAddress,\r\n                amount: denormalizedAmount,\r\n                amountNormalized: transfer.amount\r\n            });\r\n        }\r\n\r\n        // call into overriden method\r\n        receivePayloadAndTokens(\r\n            payload,\r\n            receivedTokens,\r\n            sourceAddress,\r\n            sourceChain,\r\n            deliveryHash,\r\n            additionalVaas\r\n        );\r\n    }\r\n\r\n    // Implement this function to handle in-bound deliveries that include a TokenBridge transfer\r\n    function receivePayloadAndTokens(\r\n        bytes memory payload,\r\n        Structs.TokenReceived[] memory receivedTokens,\r\n        bytes32 sourceAddress,\r\n        uint16 sourceChain,\r\n        bytes32 deliveryHash,\r\n        bytes[] memory additionalVaas\r\n    ) internal virtual {}\r\n}\r\n"
			},
			"Nebula-bridge-contracts/src/Utils.sol": {
				"content": "\r\npragma solidity ^0.8.13;\r\n\r\nimport \"./interfaces/IWormholeRelayer.sol\";\r\n\r\nfunction toWormholeFormat(address addr) pure returns (bytes32) {\r\n    return bytes32(uint256(uint160(addr)));\r\n}\r\n\r\nfunction fromWormholeFormat(bytes32 whFormatAddress) pure returns (address) {\r\n    if (uint256(whFormatAddress) >> 160 != 0) {\r\n        revert NotAnEvmAddress(whFormatAddress);\r\n    }\r\n    return address(uint160(uint256(whFormatAddress)));\r\n}\r\n\r\nfunction addressToBytes32CCTP(address addr) pure returns (bytes32) {\r\n        return toWormholeFormat(addr);\r\n}"
			},
			"Nebula-bridge-contracts/lib.d.sol": {
				"content": "//SPDX-License-Identifier: Unlicensed\r\n\r\npragma solidity ^0.8.20;\r\n\r\nlibrary Structs {\r\n\r\n    error WrongFeeOrParams();\r\n\r\n    struct EthBridge{\r\n        uint16 _lzSrcCh;// ins\r\n        uint16 _lzDstChId; // outs\r\n        uint256 amount;\r\n        address dstReciver;\r\n        uint256 timeStamp;\r\n        bool delivered;\r\n    }\r\n\r\n    struct TokenBridge{\r\n        uint16 _wormSrcCh;// bridge ins\r\n        uint16 _wormDstChId; // bridge outs\r\n        address token;\r\n        uint256 amount;\r\n        address dstReciver;\r\n        uint256 timeStamp;\r\n        bool delivered;\r\n    }\r\n\r\n    struct LatestBridge{\r\n        bool isEth; // if isEth == true , then the bridge ethbridge data will be available , if false then tokenBridge\r\n        EthBridge ethbridge; // eth bridge data = destructure with ethBridge struct, is blank data if a token transfer\r\n        TokenBridge tokenbridge;\r\n        bytes[] additionalVaas; // if it is token bridge this data is available \r\n    } \r\n\r\n    struct UserData{\r\n        uint256 bridgeOut;\r\n        uint256 bridgeIn;\r\n        uint256 totalRef;\r\n        uint256 points;\r\n    }\r\n\r\n    struct Referals{\r\n        bool refered;\r\n        address referer;\r\n    }\r\n\r\n    struct User{\r\n        UserData data;\r\n        UserMaps maps;\r\n        Referals referalData;\r\n    }\r\n\r\n    struct UserMaps{\r\n        mapping(uint16=> uint256) outVolEth;\r\n        mapping(address=> mapping(uint16=> uint256)) outVolToken;\r\n        //wormhole maps\r\n        mapping(bytes32=>TokenBridge) tokenBridgeIns;\r\n        mapping(uint256 => mapping(uint16=> TokenBridge)) tokenBridgeOuts;\r\n        mapping(uint256=>mapping(uint16 =>bytes32)) hashes;\r\n        //lzMaps\r\n        mapping(uint256=>mapping(uint16 =>EthBridge)) ethBridgesOut;\r\n        mapping(uint256=>mapping(uint16 =>EthBridge)) ethBridgesIn;\r\n    }\r\n\r\n    struct BridgeData{\r\n        uint256 pointPerTx;\r\n        uint256 totalPoints;\r\n        bool isActive;\r\n        uint256 bridgeFeeEther;\r\n        uint256 percentFee;\r\n    }\r\n    // misc\r\n    struct TokenReceived {\r\n        bytes32 tokenHomeAddress;\r\n        uint16 tokenHomeChain;\r\n        address tokenAddress; // wrapped address if tokenHomeChain !== this chain, else tokenHomeAddress (in evm address format)\r\n        uint256 amount;\r\n        uint256 amountNormalized; // if decimals > 8, normalized to 8 decimal places\r\n    }\r\n}\r\n\r\nlibrary Inputs {\r\n    \r\n    // this struct is the input param of function bridgeErc20()\r\n\r\n    struct ERC20INPUT {\r\n        uint16 targetChain;\r\n        address recipient;\r\n        uint256 amt;\r\n        address token;\r\n        uint256 dstGas;\r\n        address referal;\r\n    }\r\n    // same as the above but for the eth bridge function\r\n    struct ETHINPUT{\r\n        uint16 toChainId; \r\n        address to; \r\n        uint256 amt;\r\n        uint256 dstGas;\r\n        bool useZro;\r\n        address zroPAddr;\r\n        address referal;\r\n    }\r\n}"
			},
			"Nebula-bridge-contracts/src/WormholeRelayerSDK.sol": {
				"content": "pragma solidity ^0.8.13;\r\n\r\nimport \"./interfaces/IWormholeReceiver.sol\";\r\nimport \"./interfaces/IWormholeRelayer.sol\";\r\nimport \"./Utils.sol\";\r\nimport {Base} from \"./Base.sol\";\r\nimport {TokenBase, TokenReceiver, TokenSender} from \"./TokenBase.sol\";\r\nimport {CCTPBase, CCTPReceiver, CCTPSender} from \"./CCTPBase.sol\";\r\nimport {CCTPAndTokenBase, CCTPAndTokenReceiver, CCTPAndTokenSender} from \"./CCTPAndTokenBase.sol\";\r\n\r\n"
			},
			"Nebula-bridge-contracts/src/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\r\n}\r\n"
			},
			"Nebula-bridge-contracts/src/interfaces/ITokenBridge.sol": {
				"content": "// contracts/Bridge.sol\r\n// SPDX-License-Identifier: Apache 2\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IWETH.sol\";\r\nimport \"./IWormhole.sol\";\r\n\r\ninterface ITokenBridge {\r\n    struct Transfer {\r\n        uint8 payloadID;\r\n        uint256 amount;\r\n        bytes32 tokenAddress;\r\n        uint16 tokenChain;\r\n        bytes32 to;\r\n        uint16 toChain;\r\n        uint256 fee;\r\n    }\r\n\r\n    struct TransferWithPayload {\r\n        uint8 payloadID;\r\n        uint256 amount;\r\n        bytes32 tokenAddress;\r\n        uint16 tokenChain;\r\n        bytes32 to;\r\n        uint16 toChain;\r\n        bytes32 fromAddress;\r\n        bytes payload;\r\n    }\r\n\r\n    struct AssetMeta {\r\n        uint8 payloadID;\r\n        bytes32 tokenAddress;\r\n        uint16 tokenChain;\r\n        uint8 decimals;\r\n        bytes32 symbol;\r\n        bytes32 name;\r\n    }\r\n\r\n    struct RegisterChain {\r\n        bytes32 module;\r\n        uint8 action;\r\n        uint16 chainId;\r\n        uint16 emitterChainID;\r\n        bytes32 emitterAddress;\r\n    }\r\n\r\n    struct UpgradeContract {\r\n        bytes32 module;\r\n        uint8 action;\r\n        uint16 chainId;\r\n        bytes32 newContract;\r\n    }\r\n\r\n    struct RecoverChainId {\r\n        bytes32 module;\r\n        uint8 action;\r\n        uint256 evmChainId;\r\n        uint16 newChainId;\r\n    }\r\n\r\n    event ContractUpgraded(address indexed oldContract, address indexed newContract);\r\n\r\n    function _parseTransferCommon(bytes memory encoded) external pure returns (Transfer memory transfer);\r\n\r\n    function attestToken(address tokenAddress, uint32 nonce) external payable returns (uint64 sequence);\r\n\r\n    function wrapAndTransferETH(uint16 recipientChain, bytes32 recipient, uint256 arbiterFee, uint32 nonce)\r\n        external\r\n        payable\r\n        returns (uint64 sequence);\r\n\r\n    function wrapAndTransferETHWithPayload(uint16 recipientChain, bytes32 recipient, uint32 nonce, bytes memory payload)\r\n        external\r\n        payable\r\n        returns (uint64 sequence);\r\n\r\n    function transferTokens(\r\n        address token,\r\n        uint256 amount,\r\n        uint16 recipientChain,\r\n        bytes32 recipient,\r\n        uint256 arbiterFee,\r\n        uint32 nonce\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    function transferTokensWithPayload(\r\n        address token,\r\n        uint256 amount,\r\n        uint16 recipientChain,\r\n        bytes32 recipient,\r\n        uint32 nonce,\r\n        bytes memory payload\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    function updateWrapped(bytes memory encodedVm) external returns (address token);\r\n\r\n    function createWrapped(bytes memory encodedVm) external returns (address token);\r\n\r\n    function completeTransferWithPayload(bytes memory encodedVm) external returns (bytes memory);\r\n\r\n    function completeTransferAndUnwrapETHWithPayload(bytes memory encodedVm) external returns (bytes memory);\r\n\r\n    function completeTransfer(bytes memory encodedVm) external;\r\n\r\n    function completeTransferAndUnwrapETH(bytes memory encodedVm) external;\r\n\r\n    function encodeAssetMeta(AssetMeta memory meta) external pure returns (bytes memory encoded);\r\n\r\n    function encodeTransfer(Transfer memory transfer) external pure returns (bytes memory encoded);\r\n\r\n    function encodeTransferWithPayload(TransferWithPayload memory transfer)\r\n        external\r\n        pure\r\n        returns (bytes memory encoded);\r\n\r\n    function parsePayloadID(bytes memory encoded) external pure returns (uint8 payloadID);\r\n\r\n    function parseAssetMeta(bytes memory encoded) external pure returns (AssetMeta memory meta);\r\n\r\n    function parseTransfer(bytes memory encoded) external pure returns (Transfer memory transfer);\r\n\r\n    function parseTransferWithPayload(bytes memory encoded)\r\n        external\r\n        pure\r\n        returns (TransferWithPayload memory transfer);\r\n\r\n    function governanceActionIsConsumed(bytes32 hash) external view returns (bool);\r\n\r\n    function isInitialized(address impl) external view returns (bool);\r\n\r\n    function isTransferCompleted(bytes32 hash) external view returns (bool);\r\n\r\n    function wormhole() external view returns (IWormhole);\r\n\r\n    function chainId() external view returns (uint16);\r\n\r\n    function evmChainId() external view returns (uint256);\r\n\r\n    function isFork() external view returns (bool);\r\n\r\n    function governanceChainId() external view returns (uint16);\r\n\r\n    function governanceContract() external view returns (bytes32);\r\n\r\n    function wrappedAsset(uint16 tokenChainId, bytes32 tokenAddress) external view returns (address);\r\n\r\n    function bridgeContracts(uint16 chainId_) external view returns (bytes32);\r\n\r\n    function tokenImplementation() external view returns (address);\r\n\r\n    function WETH() external view returns (IWETH);\r\n\r\n    function outstandingBridged(address token) external view returns (uint256);\r\n\r\n    function isWrappedAsset(address token) external view returns (bool);\r\n\r\n    function finality() external view returns (uint8);\r\n\r\n    function implementation() external view returns (address);\r\n\r\n    function initialize() external;\r\n\r\n    function registerChain(bytes memory encodedVM) external;\r\n\r\n    function upgrade(bytes memory encodedVM) external;\r\n\r\n    function submitRecoverChainId(bytes memory encodedVM) external;\r\n\r\n    function parseRegisterChain(bytes memory encoded) external pure returns (RegisterChain memory chain);\r\n\r\n    function parseUpgrade(bytes memory encoded) external pure returns (UpgradeContract memory chain);\r\n\r\n    function parseRecoverChainId(bytes memory encodedRecoverChainId)\r\n        external\r\n        pure\r\n        returns (RecoverChainId memory rci);\r\n}\r\n"
			},
			"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol": {
				"content": "// SPDX-License-Identifier: Apache 2\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title WormholeRelayer\r\n * @author\r\n * @notice This project allows developers to build cross-chain applications powered by Wormhole without needing to\r\n * write and run their own relaying infrastructure\r\n *\r\n * We implement the IWormholeRelayer interface that allows users to request a delivery provider to relay a payload (and/or additional messages)\r\n * to a chain and address of their choice.\r\n */\r\n\r\n/**\r\n * @notice VaaKey identifies a wormhole message\r\n *\r\n * @custom:member chainId Wormhole chain ID of the chain where this VAA was emitted from\r\n * @custom:member emitterAddress Address of the emitter of the VAA, in Wormhole bytes32 format\r\n * @custom:member sequence Sequence number of the VAA\r\n */\r\nstruct VaaKey {\r\n    uint16 chainId;\r\n    bytes32 emitterAddress;\r\n    uint64 sequence;\r\n}\r\n\r\n// 0-127 are reserved for standardized KeyTypes, 128-255 are for custom use\r\nuint8 constant VAA_KEY_TYPE = 1;\r\n\r\nstruct MessageKey {\r\n    uint8 keyType; // 0-127 are reserved for standardized KeyTypes, 128-255 are for custom use\r\n    bytes encodedKey;\r\n}\r\n\r\ninterface IWormholeRelayerBase {\r\n    event SendEvent(\r\n        uint64 indexed sequence,\r\n        uint256 deliveryQuote,\r\n        uint256 paymentForExtraReceiverValue\r\n    );\r\n\r\n    function getRegisteredWormholeRelayerContract(\r\n        uint16 chainId\r\n    ) external view returns (bytes32);\r\n\r\n    /**\r\n     * @notice Returns true if a delivery has been attempted for the given deliveryHash\r\n     * Note: invalid deliveries where the tx reverts are not considered attempted\r\n     */\r\n    function deliveryAttempted(\r\n        bytes32 deliveryHash\r\n    ) external view returns (bool attempted);\r\n\r\n    /**\r\n     * @notice block number at which a delivery was successfully executed\r\n     */\r\n    function deliverySuccessBlock(\r\n        bytes32 deliveryHash\r\n    ) external view returns (uint256 blockNumber);\r\n\r\n    /**\r\n     * @notice block number of the latest attempt to execute a delivery that failed\r\n     */\r\n    function deliveryFailureBlock(\r\n        bytes32 deliveryHash\r\n    ) external view returns (uint256 blockNumber);\r\n}\r\n\r\n/**\r\n * @title IWormholeRelayerSend\r\n * @notice The interface to request deliveries\r\n */\r\ninterface IWormholeRelayerSend is IWormholeRelayerBase {\r\n    /**\r\n     * @notice Publishes an instruction for the default delivery provider\r\n     * to relay a payload to the address `targetAddress` on chain `targetChain`\r\n     * with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\r\n     *\r\n     * `targetAddress` must implement the IWormholeReceiver interface\r\n     *\r\n     * This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\r\n     *\r\n     * Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendPayloadToEvm` function\r\n     * with `refundChain` and `refundAddress` as parameters\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\r\n     * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\r\n     * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param gasLimit gas limit with which to call `targetAddress`.\r\n     * @return sequence sequence number of published VAA containing delivery instructions\r\n     */\r\n    function sendPayloadToEvm(\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 gasLimit\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    /**\r\n     * @notice Publishes an instruction for the default delivery provider\r\n     * to relay a payload to the address `targetAddress` on chain `targetChain`\r\n     * with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\r\n     *\r\n     * Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\r\n     * `targetAddress` must implement the IWormholeReceiver interface\r\n     *\r\n     * This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\r\n     * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\r\n     * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\r\n     *        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\r\n     * @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\r\n     * @param refundAddress The address on `refundChain` to deliver any refund to\r\n     * @return sequence sequence number of published VAA containing delivery instructions\r\n     */\r\n    function sendPayloadToEvm(\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 gasLimit,\r\n        uint16 refundChain,\r\n        address refundAddress\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    /**\r\n     * @notice Publishes an instruction for the default delivery provider\r\n     * to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\r\n     * with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\r\n     *\r\n     * `targetAddress` must implement the IWormholeReceiver interface\r\n     *\r\n     * This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\r\n     *\r\n     * Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendVaasToEvm` function\r\n     * with `refundChain` and `refundAddress` as parameters\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\r\n     * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\r\n     * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param gasLimit gas limit with which to call `targetAddress`.\r\n     * @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\r\n     * @return sequence sequence number of published VAA containing delivery instructions\r\n     */\r\n    function sendVaasToEvm(\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 gasLimit,\r\n        VaaKey[] memory vaaKeys\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    /**\r\n     * @notice Publishes an instruction for the default delivery provider\r\n     * to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\r\n     * with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\r\n     *\r\n     * Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\r\n     * `targetAddress` must implement the IWormholeReceiver interface\r\n     *\r\n     * This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\r\n     * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\r\n     * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\r\n     *        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\r\n     * @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\r\n     * @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\r\n     * @param refundAddress The address on `refundChain` to deliver any refund to\r\n     * @return sequence sequence number of published VAA containing delivery instructions\r\n     */\r\n    function sendVaasToEvm(\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 gasLimit,\r\n        VaaKey[] memory vaaKeys,\r\n        uint16 refundChain,\r\n        address refundAddress\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    /**\r\n     * @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\r\n     * to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\r\n     * with gas limit `gasLimit` and `msg.value` equal to\r\n     * receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\r\n     *\r\n     * Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\r\n     * `targetAddress` must implement the IWormholeReceiver interface\r\n     *\r\n     * This function must be called with `msg.value` equal to\r\n     * quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\r\n     * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\r\n     * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\r\n     *        (in addition to the `receiverValue` specified)\r\n     * @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\r\n     *        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\r\n     * @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\r\n     * @param refundAddress The address on `refundChain` to deliver any refund to\r\n     * @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\r\n     * @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\r\n     * @param consistencyLevel Consistency level with which to publish the delivery instructions - see\r\n     *        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\r\n     * @return sequence sequence number of published VAA containing delivery instructions\r\n     */\r\n    function sendToEvm(\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 paymentForExtraReceiverValue,\r\n        uint256 gasLimit,\r\n        uint16 refundChain,\r\n        address refundAddress,\r\n        address deliveryProviderAddress,\r\n        VaaKey[] memory vaaKeys,\r\n        uint8 consistencyLevel\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    /**\r\n     * @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\r\n     * to relay a payload and external messages specified by `messageKeys` to the address `targetAddress` on chain `targetChain`\r\n     * with gas limit `gasLimit` and `msg.value` equal to\r\n     * receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\r\n     *\r\n     * Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\r\n     * `targetAddress` must implement the IWormholeReceiver interface\r\n     *\r\n     * This function must be called with `msg.value` equal to\r\n     * quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue\r\n     *\r\n     * Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected\r\n     * DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\r\n     * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\r\n     * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\r\n     *        (in addition to the `receiverValue` specified)\r\n     * @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\r\n     *        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\r\n     * @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\r\n     * @param refundAddress The address on `refundChain` to deliver any refund to\r\n     * @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\r\n     * @param messageKeys Additional messagess to pass in as parameter in call to `targetAddress`\r\n     * @param consistencyLevel Consistency level with which to publish the delivery instructions - see\r\n     *        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\r\n     * @return sequence sequence number of published VAA containing delivery instructions\r\n     */\r\n    function sendToEvm(\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 paymentForExtraReceiverValue,\r\n        uint256 gasLimit,\r\n        uint16 refundChain,\r\n        address refundAddress,\r\n        address deliveryProviderAddress,\r\n        MessageKey[] memory messageKeys,\r\n        uint8 consistencyLevel\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    /**\r\n     * @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\r\n     * to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\r\n     * with `msg.value` equal to\r\n     * receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\r\n     *\r\n     * Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\r\n     * `targetAddress` must implement the IWormholeReceiver interface\r\n     *\r\n     * This function must be called with `msg.value` equal to\r\n     * quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param targetAddress address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\r\n     * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\r\n     * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\r\n     *        (in addition to the `receiverValue` specified)\r\n     * @param encodedExecutionParameters encoded information on how to execute delivery that may impact pricing\r\n     *        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\r\n     * @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\r\n     * @param refundAddress The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\r\n     * @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\r\n     * @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\r\n     * @param consistencyLevel Consistency level with which to publish the delivery instructions - see\r\n     *        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\r\n     * @return sequence sequence number of published VAA containing delivery instructions\r\n     */\r\n    function send(\r\n        uint16 targetChain,\r\n        bytes32 targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 paymentForExtraReceiverValue,\r\n        bytes memory encodedExecutionParameters,\r\n        uint16 refundChain,\r\n        bytes32 refundAddress,\r\n        address deliveryProviderAddress,\r\n        VaaKey[] memory vaaKeys,\r\n        uint8 consistencyLevel\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    /**\r\n     * @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\r\n     * to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\r\n     * with `msg.value` equal to\r\n     * receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\r\n     *\r\n     * Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\r\n     * `targetAddress` must implement the IWormholeReceiver interface\r\n     *\r\n     * This function must be called with `msg.value` equal to\r\n     * quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue\r\n     *\r\n     * Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected\r\n     * DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param targetAddress address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\r\n     * @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\r\n     * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\r\n     *        (in addition to the `receiverValue` specified)\r\n     * @param encodedExecutionParameters encoded information on how to execute delivery that may impact pricing\r\n     *        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\r\n     * @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\r\n     * @param refundAddress The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\r\n     * @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\r\n     * @param messageKeys Additional messagess to pass in as parameter in call to `targetAddress`\r\n     * @param consistencyLevel Consistency level with which to publish the delivery instructions - see\r\n     *        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\r\n     * @return sequence sequence number of published VAA containing delivery instructions\r\n     */\r\n    function send(\r\n        uint16 targetChain,\r\n        bytes32 targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 paymentForExtraReceiverValue,\r\n        bytes memory encodedExecutionParameters,\r\n        uint16 refundChain,\r\n        bytes32 refundAddress,\r\n        address deliveryProviderAddress,\r\n        MessageKey[] memory messageKeys,\r\n        uint8 consistencyLevel\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    /**\r\n     * @notice Requests a previously published delivery instruction to be redelivered\r\n     * (e.g. with a different delivery provider)\r\n     *\r\n     * This function must be called with `msg.value` equal to\r\n     * quoteEVMDeliveryPrice(targetChain, newReceiverValue, newGasLimit, newDeliveryProviderAddress)\r\n     *\r\n     *  @notice *** This will only be able to succeed if the following is true **\r\n     *         - newGasLimit >= gas limit of the old instruction\r\n     *         - newReceiverValue >= receiver value of the old instruction\r\n     *         - newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`\r\n     *\r\n     * @param deliveryVaaKey VaaKey identifying the wormhole message containing the\r\n     *        previously published delivery instructions\r\n     * @param targetChain The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\r\n     * @param newReceiverValue new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param newGasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\r\n     *        `targetChainRefundPerGasUnused` rate quoted by the delivery provider, to the refund chain and address specified in the original request\r\n     * @param newDeliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\r\n     * @return sequence sequence number of published VAA containing redelivery instructions\r\n     *\r\n     * @notice *** This will only be able to succeed if the following is true **\r\n     *         - newGasLimit >= gas limit of the old instruction\r\n     *         - newReceiverValue >= receiver value of the old instruction\r\n     */\r\n    function resendToEvm(\r\n        VaaKey memory deliveryVaaKey,\r\n        uint16 targetChain,\r\n        uint256 newReceiverValue,\r\n        uint256 newGasLimit,\r\n        address newDeliveryProviderAddress\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    /**\r\n     * @notice Requests a previously published delivery instruction to be redelivered\r\n     *\r\n     *\r\n     * This function must be called with `msg.value` equal to\r\n     * quoteDeliveryPrice(targetChain, newReceiverValue, newEncodedExecutionParameters, newDeliveryProviderAddress)\r\n     *\r\n     * @param deliveryVaaKey VaaKey identifying the wormhole message containing the\r\n     *        previously published delivery instructions\r\n     * @param targetChain The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\r\n     * @param newReceiverValue new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param newEncodedExecutionParameters new encoded information on how to execute delivery that may impact pricing\r\n     *        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\r\n     * @param newDeliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\r\n     * @return sequence sequence number of published VAA containing redelivery instructions\r\n     *\r\n     *  @notice *** This will only be able to succeed if the following is true **\r\n     *         - (For EVM_V1) newGasLimit >= gas limit of the old instruction\r\n     *         - newReceiverValue >= receiver value of the old instruction\r\n     *         - (For EVM_V1) newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`\r\n     */\r\n    function resend(\r\n        VaaKey memory deliveryVaaKey,\r\n        uint16 targetChain,\r\n        uint256 newReceiverValue,\r\n        bytes memory newEncodedExecutionParameters,\r\n        address newDeliveryProviderAddress\r\n    ) external payable returns (uint64 sequence);\r\n\r\n    /**\r\n     * @notice Returns the price to request a relay to chain `targetChain`, using the default delivery provider\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param gasLimit gas limit with which to call `targetAddress`.\r\n     * @return nativePriceQuote Price, in units of current chain currency, that the delivery provider charges to perform the relay\r\n     * @return targetChainRefundPerGasUnused amount of target chain currency that will be refunded per unit of gas unused,\r\n     *         if a refundAddress is specified.\r\n     *         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a\r\n     *         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.\r\n     *         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain.\r\n     */\r\n    function quoteEVMDeliveryPrice(\r\n        uint16 targetChain,\r\n        uint256 receiverValue,\r\n        uint256 gasLimit\r\n    )\r\n        external\r\n        view\r\n        returns (\r\n            uint256 nativePriceQuote,\r\n            uint256 targetChainRefundPerGasUnused\r\n        );\r\n\r\n    /**\r\n     * @notice Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param gasLimit gas limit with which to call `targetAddress`.\r\n     * @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\r\n     * @return nativePriceQuote Price, in units of current chain currency, that the delivery provider charges to perform the relay\r\n     * @return targetChainRefundPerGasUnused amount of target chain currency that will be refunded per unit of gas unused,\r\n     *         if a refundAddress is specified\r\n     *         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a\r\n     *         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.\r\n     *         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain.\r\n     */\r\n    function quoteEVMDeliveryPrice(\r\n        uint16 targetChain,\r\n        uint256 receiverValue,\r\n        uint256 gasLimit,\r\n        address deliveryProviderAddress\r\n    )\r\n        external\r\n        view\r\n        returns (\r\n            uint256 nativePriceQuote,\r\n            uint256 targetChainRefundPerGasUnused\r\n        );\r\n\r\n    /**\r\n     * @notice Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\r\n     * @param encodedExecutionParameters encoded information on how to execute delivery that may impact pricing\r\n     *        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\r\n     * @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\r\n     * @return nativePriceQuote Price, in units of current chain currency, that the delivery provider charges to perform the relay\r\n     * @return encodedExecutionInfo encoded information on how the delivery will be executed\r\n     *        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` and `targetChainRefundPerGasUnused`\r\n     *             (which is the amount of target chain currency that will be refunded per unit of gas unused,\r\n     *              if a refundAddress is specified)\r\n     */\r\n    function quoteDeliveryPrice(\r\n        uint16 targetChain,\r\n        uint256 receiverValue,\r\n        bytes memory encodedExecutionParameters,\r\n        address deliveryProviderAddress\r\n    )\r\n        external\r\n        view\r\n        returns (uint256 nativePriceQuote, bytes memory encodedExecutionInfo);\r\n\r\n    /**\r\n     * @notice Returns the (extra) amount of target chain currency that `targetAddress`\r\n     * will be called with, if the `paymentForExtraReceiverValue` field is set to `currentChainAmount`\r\n     *\r\n     * @param targetChain in Wormhole Chain ID format\r\n     * @param currentChainAmount The value that `paymentForExtraReceiverValue` will be set to\r\n     * @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\r\n     * @return targetChainAmount The amount such that if `targetAddress` will be called with `msg.value` equal to\r\n     *         receiverValue + targetChainAmount\r\n     */\r\n    function quoteNativeForChain(\r\n        uint16 targetChain,\r\n        uint256 currentChainAmount,\r\n        address deliveryProviderAddress\r\n    ) external view returns (uint256 targetChainAmount);\r\n\r\n    /**\r\n     * @notice Returns the address of the current default delivery provider\r\n     * @return deliveryProvider The address of (the default delivery provider)'s contract on this source\r\n     *   chain. This must be a contract that implements IDeliveryProvider.\r\n     */\r\n    function getDefaultDeliveryProvider()\r\n        external\r\n        view\r\n        returns (address deliveryProvider);\r\n}\r\n\r\n/**\r\n * @title IWormholeRelayerDelivery\r\n * @notice The interface to execute deliveries. Only relevant for Delivery Providers\r\n */\r\ninterface IWormholeRelayerDelivery is IWormholeRelayerBase {\r\n    enum DeliveryStatus {\r\n        SUCCESS,\r\n        RECEIVER_FAILURE\r\n    }\r\n\r\n    enum RefundStatus {\r\n        REFUND_SENT,\r\n        REFUND_FAIL,\r\n        CROSS_CHAIN_REFUND_SENT,\r\n        CROSS_CHAIN_REFUND_FAIL_PROVIDER_NOT_SUPPORTED,\r\n        CROSS_CHAIN_REFUND_FAIL_NOT_ENOUGH,\r\n        NO_REFUND_REQUESTED\r\n    }\r\n\r\n    /**\r\n     * @custom:member recipientContract - The target contract address\r\n     * @custom:member sourceChain - The chain which this delivery was requested from (in wormhole\r\n     *     ChainID format)\r\n     * @custom:member sequence - The wormhole sequence number of the delivery VAA on the source chain\r\n     *     corresponding to this delivery request\r\n     * @custom:member deliveryVaaHash - The hash of the delivery VAA corresponding to this delivery\r\n     *     request\r\n     * @custom:member gasUsed - The amount of gas that was used to call your target contract\r\n     * @custom:member status:\r\n     *   - RECEIVER_FAILURE, if the target contract reverts\r\n     *   - SUCCESS, if the target contract doesn't revert\r\n     * @custom:member additionalStatusInfo:\r\n     *   - If status is SUCCESS, then this is empty.\r\n     *   - If status is RECEIVER_FAILURE, this is `RETURNDATA_TRUNCATION_THRESHOLD` bytes of the\r\n     *       return data (i.e. potentially truncated revert reason information).\r\n     * @custom:member refundStatus - Result of the refund. REFUND_SUCCESS or REFUND_FAIL are for\r\n     *     refunds where targetChain=refundChain; the others are for targetChain!=refundChain,\r\n     *     where a cross chain refund is necessary, or if the default code path is used where no refund is requested (NO_REFUND_REQUESTED)\r\n     * @custom:member overridesInfo:\r\n     *   - If not an override: empty bytes array\r\n     *   - Otherwise: An encoded `DeliveryOverride`\r\n     */\r\n    event Delivery(\r\n        address indexed recipientContract,\r\n        uint16 indexed sourceChain,\r\n        uint64 indexed sequence,\r\n        bytes32 deliveryVaaHash,\r\n        DeliveryStatus status,\r\n        uint256 gasUsed,\r\n        RefundStatus refundStatus,\r\n        bytes additionalStatusInfo,\r\n        bytes overridesInfo\r\n    );\r\n\r\n    /**\r\n     * @notice The delivery provider calls `deliver` to relay messages as described by one delivery instruction\r\n     *\r\n     * The delivery provider must pass in the specified (by VaaKeys[]) signed wormhole messages (VAAs) from the source chain\r\n     * as well as the signed wormhole message with the delivery instructions (the delivery VAA)\r\n     *\r\n     * The messages will be relayed to the target address (with the specified gas limit and receiver value) iff the following checks are met:\r\n     * - the delivery VAA has a valid signature\r\n     * - the delivery VAA's emitter is one of these WormholeRelayer contracts\r\n     * - the delivery provider passed in at least enough of this chain's currency as msg.value (enough meaning the maximum possible refund)\r\n     * - the instruction's target chain is this chain\r\n     * - the relayed signed VAAs match the descriptions in container.messages (the VAA hashes match, or the emitter address, sequence number pair matches, depending on the description given)\r\n     *\r\n     * @param encodedVMs - An array of signed wormhole messages (all from the same source chain\r\n     *     transaction)\r\n     * @param encodedDeliveryVAA - Signed wormhole message from the source chain's WormholeRelayer\r\n     *     contract with payload being the encoded delivery instruction container\r\n     * @param relayerRefundAddress - The address to which any refunds to the delivery provider\r\n     *     should be sent\r\n     * @param deliveryOverrides - Optional overrides field which must be either an empty bytes array or\r\n     *     an encoded DeliveryOverride struct\r\n     */\r\n    function deliver(\r\n        bytes[] memory encodedVMs,\r\n        bytes memory encodedDeliveryVAA,\r\n        address payable relayerRefundAddress,\r\n        bytes memory deliveryOverrides\r\n    ) external payable;\r\n}\r\n\r\ninterface IWormholeRelayer is IWormholeRelayerDelivery, IWormholeRelayerSend {}\r\n\r\n/*\r\n *  Errors thrown by IWormholeRelayer contract\r\n */\r\n\r\n// Bound chosen by the following formula: `memoryWord * 4 + selectorSize`.\r\n// This means that an error identifier plus four fixed size arguments should be available to developers.\r\n// In the case of a `require` revert with error message, this should provide 2 memory word's worth of data.\r\nuint256 constant RETURNDATA_TRUNCATION_THRESHOLD = 132;\r\n\r\n//When msg.value was not equal to `delivery provider's quoted delivery price` + `paymentForExtraReceiverValue`\r\nerror InvalidMsgValue(uint256 msgValue, uint256 totalFee);\r\n\r\nerror RequestedGasLimitTooLow();\r\n\r\nerror DeliveryProviderDoesNotSupportTargetChain(\r\n    address relayer,\r\n    uint16 chainId\r\n);\r\nerror DeliveryProviderCannotReceivePayment();\r\nerror DeliveryProviderDoesNotSupportMessageKeyType(uint8 keyType);\r\n\r\n//When calling `delivery()` a second time even though a delivery is already in progress\r\nerror ReentrantDelivery(address msgSender, address lockedBy);\r\n\r\nerror InvalidPayloadId(uint8 parsed, uint8 expected);\r\nerror InvalidPayloadLength(uint256 received, uint256 expected);\r\nerror InvalidVaaKeyType(uint8 parsed);\r\nerror TooManyMessageKeys(uint256 numMessageKeys);\r\n\r\nerror InvalidDeliveryVaa(string reason);\r\n//When the delivery VAA (signed wormhole message with delivery instructions) was not emitted by the\r\n//  registered WormholeRelayer contract\r\nerror InvalidEmitter(bytes32 emitter, bytes32 registered, uint16 chainId);\r\nerror MessageKeysLengthDoesNotMatchMessagesLength(uint256 keys, uint256 vaas);\r\nerror VaaKeysDoNotMatchVaas(uint8 index);\r\n//When someone tries to call an external function of the WormholeRelayer that is only intended to be\r\n//  called by the WormholeRelayer itself (to allow retroactive reverts for atomicity)\r\nerror RequesterNotWormholeRelayer();\r\n\r\n//When trying to relay a `DeliveryInstruction` to any other chain but the one it was specified for\r\nerror TargetChainIsNotThisChain(uint16 targetChain);\r\n//When a `DeliveryOverride` contains a gas limit that's less than the original\r\nerror InvalidOverrideGasLimit();\r\n//When a `DeliveryOverride` contains a receiver value that's less than the original\r\nerror InvalidOverrideReceiverValue();\r\n//When a `DeliveryOverride` contains a 'refund per unit of gas unused' that's less than the original\r\nerror InvalidOverrideRefundPerGasUnused();\r\n\r\n//When the delivery provider doesn't pass in sufficient funds (i.e. msg.value does not cover the\r\n// maximum possible refund to the user)\r\nerror InsufficientRelayerFunds(uint256 msgValue, uint256 minimum);\r\n\r\n//When a bytes32 field can't be converted into a 20 byte EVM address, because the 12 padding bytes\r\n//  are non-zero (duplicated from Utils.sol)\r\nerror NotAnEvmAddress(bytes32);\r\n"
			},
			"Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol": {
				"content": "// SPDX-License-Identifier: Apache 2\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @notice Interface for a contract which can receive Wormhole messages.\r\n */\r\ninterface IWormholeReceiver {\r\n    /**\r\n     * @notice When a `send` is performed with this contract as the target, this function will be\r\n     *     invoked by the WormholeRelayer contract\r\n     *\r\n     * NOTE: This function should be restricted such that only the Wormhole Relayer contract can call it.\r\n     *\r\n     * We also recommend that this function checks that `sourceChain` and `sourceAddress` are indeed who\r\n     *       you expect to have requested the calling of `send` on the source chain\r\n     *\r\n     * The invocation of this function corresponding to the `send` request will have msg.value equal\r\n     *   to the receiverValue specified in the send request.\r\n     *\r\n     * If the invocation of this function reverts or exceeds the gas limit\r\n     *   specified by the send requester, this delivery will result in a `ReceiverFailure`.\r\n     *\r\n     * @param payload - an arbitrary message which was included in the delivery by the\r\n     *     requester. This message's signature will already have been verified (as long as msg.sender is the Wormhole Relayer contract)\r\n     * @param additionalMessages - Additional messages which were requested to be included in this delivery.\r\n     *      Note: There are no contract-level guarantees that the messages in this array are what was requested\r\n     *      so **you should verify any sensitive information given here!**\r\n     *\r\n     *      For example, if a 'VaaKey' was specified on the source chain, then MAKE SURE the corresponding message here\r\n     *      has valid signatures (by calling `parseAndVerifyVM(message)` on the Wormhole core contract)\r\n     *\r\n     *      This field can be used to perform and relay TokenBridge or CCTP transfers, and there are example\r\n     *      usages of this at\r\n     *         https://github.com/wormhole-foundation/hello-token\r\n     *         https://github.com/wormhole-foundation/hello-cctp\r\n     *\r\n     * @param sourceAddress - the (wormhole format) address on the sending chain which requested\r\n     *     this delivery.\r\n     * @param sourceChain - the wormhole chain ID where this delivery was requested.\r\n     * @param deliveryHash - the VAA hash of the deliveryVAA.\r\n     *\r\n     */\r\n    function receiveWormholeMessages(\r\n        bytes memory payload,\r\n        bytes[] memory additionalMessages,\r\n        bytes32 sourceAddress,\r\n        uint16 sourceChain,\r\n        bytes32 deliveryHash\r\n    ) external payable;\r\n}\r\n"
			},
			"Nebula-bridge-contracts/src/interfaces/IWormhole.sol": {
				"content": "// contracts/Messages.sol\r\n// SPDX-License-Identifier: Apache 2\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface IWormhole {\r\n    struct GuardianSet {\r\n        address[] keys;\r\n        uint32 expirationTime;\r\n    }\r\n\r\n    struct Signature {\r\n        bytes32 r;\r\n        bytes32 s;\r\n        uint8 v;\r\n        uint8 guardianIndex;\r\n    }\r\n\r\n    struct VM {\r\n        uint8 version;\r\n        uint32 timestamp;\r\n        uint32 nonce;\r\n        uint16 emitterChainId;\r\n        bytes32 emitterAddress;\r\n        uint64 sequence;\r\n        uint8 consistencyLevel;\r\n        bytes payload;\r\n        uint32 guardianSetIndex;\r\n        Signature[] signatures;\r\n        bytes32 hash;\r\n    }\r\n\r\n    struct ContractUpgrade {\r\n        bytes32 module;\r\n        uint8 action;\r\n        uint16 chain;\r\n        address newContract;\r\n    }\r\n\r\n    struct GuardianSetUpgrade {\r\n        bytes32 module;\r\n        uint8 action;\r\n        uint16 chain;\r\n        GuardianSet newGuardianSet;\r\n        uint32 newGuardianSetIndex;\r\n    }\r\n\r\n    struct SetMessageFee {\r\n        bytes32 module;\r\n        uint8 action;\r\n        uint16 chain;\r\n        uint256 messageFee;\r\n    }\r\n\r\n    struct TransferFees {\r\n        bytes32 module;\r\n        uint8 action;\r\n        uint16 chain;\r\n        uint256 amount;\r\n        bytes32 recipient;\r\n    }\r\n\r\n    struct RecoverChainId {\r\n        bytes32 module;\r\n        uint8 action;\r\n        uint256 evmChainId;\r\n        uint16 newChainId;\r\n    }\r\n\r\n    event LogMessagePublished(\r\n        address indexed sender, uint64 sequence, uint32 nonce, bytes payload, uint8 consistencyLevel\r\n    );\r\n    event ContractUpgraded(address indexed oldContract, address indexed newContract);\r\n    event GuardianSetAdded(uint32 indexed index);\r\n\r\n    function publishMessage(uint32 nonce, bytes memory payload, uint8 consistencyLevel)\r\n        external\r\n        payable\r\n        returns (uint64 sequence);\r\n\r\n    function initialize() external;\r\n\r\n    function parseAndVerifyVM(bytes calldata encodedVM)\r\n        external\r\n        view\r\n        returns (VM memory vm, bool valid, string memory reason);\r\n\r\n    function verifyVM(VM memory vm) external view returns (bool valid, string memory reason);\r\n\r\n    function verifySignatures(bytes32 hash, Signature[] memory signatures, GuardianSet memory guardianSet)\r\n        external\r\n        pure\r\n        returns (bool valid, string memory reason);\r\n\r\n    function parseVM(bytes memory encodedVM) external pure returns (VM memory vm);\r\n\r\n    function quorum(uint256 numGuardians) external pure returns (uint256 numSignaturesRequiredForQuorum);\r\n\r\n    function getGuardianSet(uint32 index) external view returns (GuardianSet memory);\r\n\r\n    function getCurrentGuardianSetIndex() external view returns (uint32);\r\n\r\n    function getGuardianSetExpiry() external view returns (uint32);\r\n\r\n    function governanceActionIsConsumed(bytes32 hash) external view returns (bool);\r\n\r\n    function isInitialized(address impl) external view returns (bool);\r\n\r\n    function chainId() external view returns (uint16);\r\n\r\n    function isFork() external view returns (bool);\r\n\r\n    function governanceChainId() external view returns (uint16);\r\n\r\n    function governanceContract() external view returns (bytes32);\r\n\r\n    function messageFee() external view returns (uint256);\r\n\r\n    function evmChainId() external view returns (uint256);\r\n\r\n    function nextSequence(address emitter) external view returns (uint64);\r\n\r\n    function parseContractUpgrade(bytes memory encodedUpgrade) external pure returns (ContractUpgrade memory cu);\r\n\r\n    function parseGuardianSetUpgrade(bytes memory encodedUpgrade)\r\n        external\r\n        pure\r\n        returns (GuardianSetUpgrade memory gsu);\r\n\r\n    function parseSetMessageFee(bytes memory encodedSetMessageFee) external pure returns (SetMessageFee memory smf);\r\n\r\n    function parseTransferFees(bytes memory encodedTransferFees) external pure returns (TransferFees memory tf);\r\n\r\n    function parseRecoverChainId(bytes memory encodedRecoverChainId)\r\n        external\r\n        pure\r\n        returns (RecoverChainId memory rci);\r\n\r\n    function submitContractUpgrade(bytes memory _vm) external;\r\n\r\n    function submitSetMessageFee(bytes memory _vm) external;\r\n\r\n    function submitNewGuardianSet(bytes memory _vm) external;\r\n\r\n    function submitTransferFees(bytes memory _vm) external;\r\n\r\n    function submitRecoverChainId(bytes memory _vm) external;\r\n}\r\n"
			},
			"Nebula-bridge-contracts/src/interfaces/IWETH.sol": {
				"content": "// contracts/Bridge.sol\r\n// SPDX-License-Identifier: Apache 2\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\ninterface IWETH is IERC20 {\r\n    function deposit() external payable;\r\n    function withdraw(uint256 amount) external;\r\n}\r\n"
			},
			"Nebula-bridge-contracts/src/CCTPAndTokenBase.sol": {
				"content": "pragma solidity ^0.8.13;\r\n\r\nimport \"./interfaces/IWormholeReceiver.sol\";\r\nimport \"./interfaces/IWormholeRelayer.sol\";\r\nimport \"./interfaces/ITokenBridge.sol\";\r\nimport {IERC20} from \"./interfaces/IERC20.sol\";\r\nimport \"./interfaces/CCTPInterfaces/ITokenMessenger.sol\";\r\nimport \"./interfaces/CCTPInterfaces/IMessageTransmitter.sol\";\r\n\r\nimport \"./Utils.sol\";\r\nimport \"./TokenBase.sol\";\r\nimport \"./CCTPBase.sol\";\r\n\r\nabstract contract CCTPAndTokenBase is CCTPBase {\r\n    ITokenBridge public tokenBridge;\r\n\r\n    enum Transfer {\r\n        TOKEN_BRIDGE,\r\n        CCTP\r\n    }\r\n\r\n    function _initCCTP(\r\n        address _wormholeRelayer,\r\n        address _tokenBridge,\r\n        address _wormhole,\r\n        address _circleMessageTransmitter,\r\n        address _circleTokenMessenger,\r\n        address _USDC\r\n    )\r\n    internal\r\n    {\r\n        _initCCTPBase(\r\n            _wormholeRelayer,\r\n            _wormhole,\r\n            _circleMessageTransmitter,\r\n            _circleTokenMessenger,\r\n            _USDC\r\n        );\r\n        tokenBridge = ITokenBridge(_tokenBridge);\r\n    }\r\n}\r\n\r\nabstract contract CCTPAndTokenSender is CCTPAndTokenBase {\r\n    // CCTP Sender functions, taken from \"./CCTPBase.sol\"\r\n\r\n    uint8 internal constant CONSISTENCY_LEVEL_FINALIZED = 15;\r\n\r\n    using CCTPMessageLib for *;\r\n\r\n    mapping(uint16 => uint32) public chainIdToCCTPDomain;\r\n\r\n    /**\r\n     * Sets the CCTP Domain corresponding to chain 'chain' to be 'cctpDomain'\r\n     * So that transfers of USDC to chain 'chain' use the target CCTP domain 'cctpDomain'\r\n     *\r\n     * This action can only be performed by 'cctpConfigurationOwner', who is set to be the deployer\r\n     *\r\n     * Currently, cctp domains are:\r\n     * Ethereum: Wormhole chain id 2, cctp domain 0\r\n     * Avalanche: Wormhole chain id 6, cctp domain 1\r\n     * Optimism: Wormhole chain id 24, cctp domain 2\r\n     * Arbitrum: Wormhole chain id 23, cctp domain 3\r\n     * Base: Wormhole chain id 30, cctp domain 6\r\n     *\r\n     * These can be set via:\r\n     * setCCTPDomain(2, 0);\r\n     * setCCTPDomain(6, 1);\r\n     * setCCTPDomain(24, 2);\r\n     * setCCTPDomain(23, 3);\r\n     * setCCTPDomain(30, 6);\r\n     */\r\n    function setCCTPDomain(uint16 chain, uint32 cctpDomain) public {\r\n        require(\r\n            msg.sender == cctpConfigurationOwner,\r\n            \"Not allowed to set CCTP Domain\"\r\n        );\r\n        chainIdToCCTPDomain[chain] = cctpDomain;\r\n    }\r\n\r\n    function getCCTPDomain(uint16 chain) internal view returns (uint32) {\r\n        return chainIdToCCTPDomain[chain];\r\n    }\r\n\r\n    /**\r\n     * transferUSDC wraps common boilerplate for sending tokens to another chain using IWormholeRelayer\r\n     * - approves the Circle TokenMessenger contract to spend 'amount' of USDC\r\n     * - calls Circle's 'depositForBurnWithCaller'\r\n     * - returns key for inclusion in WormholeRelayer `additionalVaas` argument\r\n     *\r\n     * Note: this requires that only the targetAddress can redeem transfers.\r\n     *\r\n     */\r\n\r\n    function transferUSDC(\r\n        uint256 amount,\r\n        uint16 targetChain,\r\n        address targetAddress\r\n    ) internal returns (MessageKey memory) {\r\n        IERC20(USDC).approve(address(circleTokenMessenger), amount);\r\n        bytes32 targetAddressBytes32 = addressToBytes32CCTP(targetAddress);\r\n        uint64 nonce = circleTokenMessenger.depositForBurnWithCaller(\r\n            amount,\r\n            getCCTPDomain(targetChain),\r\n            targetAddressBytes32,\r\n            USDC,\r\n            targetAddressBytes32\r\n        );\r\n        return\r\n            MessageKey(\r\n                CCTPMessageLib.CCTP_KEY_TYPE,\r\n                abi.encodePacked(getCCTPDomain(wormhole.chainId()), nonce)\r\n            );\r\n    }\r\n\r\n    // Publishes a CCTP transfer of 'amount' of USDC\r\n    // and requests a delivery of the transfer along with 'payload' to 'targetAddress' on 'targetChain'\r\n    //\r\n    // The second step is done by publishing a wormhole message representing a request\r\n    // to call 'receiveWormholeMessages' on the address 'targetAddress' on chain 'targetChain'\r\n    // with the payload 'abi.encode(Transfer.CCTP, amount, payload)'\r\n    // (we encode a Transfer enum to distinguish this from a TokenBridge transfer)\r\n    // (and we encode the amount so it can be checked on the target chain)\r\n    function sendUSDCWithPayloadToEvm(\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 gasLimit,\r\n        uint256 amount\r\n    ) internal returns (uint64 sequence) {\r\n        MessageKey[] memory messageKeys = new MessageKey[](1);\r\n        messageKeys[0] = transferUSDC(amount, targetChain, targetAddress);\r\n\r\n        bytes memory userPayload = abi.encode(Transfer.CCTP, amount, payload);\r\n        address defaultDeliveryProvider = wormholeRelayer\r\n            .getDefaultDeliveryProvider();\r\n\r\n        (uint256 cost, ) = wormholeRelayer.quoteEVMDeliveryPrice(\r\n            targetChain,\r\n            receiverValue,\r\n            gasLimit\r\n        );\r\n\r\n        sequence = wormholeRelayer.sendToEvm{value: cost}(\r\n            targetChain,\r\n            targetAddress,\r\n            userPayload,\r\n            receiverValue,\r\n            0,\r\n            gasLimit,\r\n            targetChain,\r\n            address(0x0),\r\n            defaultDeliveryProvider,\r\n            messageKeys,\r\n            CONSISTENCY_LEVEL_FINALIZED\r\n        );\r\n    }\r\n\r\n    // TokenBridge Sender functions, taken from \"./TokenBase.sol\"\r\n\r\n    /**\r\n     * transferTokens wraps common boilerplate for sending tokens to another chain using IWormholeRelayer\r\n     * - approves tokenBridge to spend 'amount' of 'token'\r\n     * - emits token transfer VAA\r\n     * - returns VAA key for inclusion in WormholeRelayer `additionalVaas` argument\r\n     *\r\n     * Note: this function uses transferTokensWithPayload instead of transferTokens since the former requires that only the targetAddress\r\n     *       can redeem transfers. Otherwise it's possible for another address to redeem the transfer before the targetContract is invoked by\r\n     *       the offchain relayer and the target contract would have to be hardened against this.\r\n     *\r\n     */\r\n    function transferTokens(\r\n        address token,\r\n        uint256 amount,\r\n        uint16 targetChain,\r\n        address targetAddress\r\n    ) internal returns (VaaKey memory) {\r\n        return\r\n            transferTokens(\r\n                token,\r\n                amount,\r\n                targetChain,\r\n                targetAddress,\r\n                bytes(\"\")\r\n            );\r\n    }\r\n\r\n    /**\r\n     * transferTokens wraps common boilerplate for sending tokens to another chain using IWormholeRelayer.\r\n     * A payload can be included in the transfer vaa. By including a payload here instead of the deliveryVaa,\r\n     * fewer trust assumptions are placed on the WormholeRelayer contract.\r\n     *\r\n     * - approves tokenBridge to spend 'amount' of 'token'\r\n     * - emits token transfer VAA\r\n     * - returns VAA key for inclusion in WormholeRelayer `additionalVaas` argument\r\n     *\r\n     * Note: this function uses transferTokensWithPayload instead of transferTokens since the former requires that only the targetAddress\r\n     *       can redeem transfers. Otherwise it's possible for another address to redeem the transfer before the targetContract is invoked by\r\n     *       the offchain relayer and the target contract would have to be hardened against this.\r\n     */\r\n    function transferTokens(\r\n        address token,\r\n        uint256 amount,\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload\r\n    ) internal returns (VaaKey memory) {\r\n        IERC20(token).approve(address(tokenBridge), amount);\r\n        uint64 sequence = tokenBridge.transferTokensWithPayload{\r\n            value: wormhole.messageFee()\r\n        }(\r\n            token,\r\n            amount,\r\n            targetChain,\r\n            toWormholeFormat(targetAddress),\r\n            0,\r\n            payload\r\n        );\r\n        return\r\n            VaaKey({\r\n                emitterAddress: toWormholeFormat(address(tokenBridge)),\r\n                chainId: wormhole.chainId(),\r\n                sequence: sequence\r\n            });\r\n    }\r\n\r\n    // Publishes a wormhole message representing a 'TokenBridge' transfer of 'amount' of 'token'\r\n    // and requests a delivery of the transfer along with 'payload' to 'targetAddress' on 'targetChain'\r\n    //\r\n    // The second step is done by publishing a wormhole message representing a request\r\n    // to call 'receiveWormholeMessages' on the address 'targetAddress' on chain 'targetChain'\r\n    // with the payload 'abi.encode(Transfer.TOKEN_BRIDGE, payload)'\r\n    // (we encode a Transfer enum to distinguish this from a CCTP transfer)\r\n    function sendTokenWithPayloadToEvm(\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 gasLimit,\r\n        address token,\r\n        uint256 amount\r\n    ) internal returns (uint64) {\r\n        VaaKey[] memory vaaKeys = new VaaKey[](1);\r\n        vaaKeys[0] = transferTokens(token, amount, targetChain, targetAddress);\r\n\r\n        (uint256 cost, ) = wormholeRelayer.quoteEVMDeliveryPrice(\r\n            targetChain,\r\n            receiverValue,\r\n            gasLimit\r\n        );\r\n        return\r\n            wormholeRelayer.sendVaasToEvm{value: cost}(\r\n                targetChain,\r\n                targetAddress,\r\n                abi.encode(Transfer.TOKEN_BRIDGE, payload),\r\n                receiverValue,\r\n                gasLimit,\r\n                vaaKeys\r\n            );\r\n    }\r\n\r\n    function sendTokenWithPayloadToEvm(\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 gasLimit,\r\n        address token,\r\n        uint256 amount,\r\n        uint16 refundChain,\r\n        address refundAddress\r\n    ) internal returns (uint64) {\r\n        VaaKey[] memory vaaKeys = new VaaKey[](1);\r\n        vaaKeys[0] = transferTokens(token, amount, targetChain, targetAddress);\r\n\r\n        (uint256 cost, ) = wormholeRelayer.quoteEVMDeliveryPrice(\r\n            targetChain,\r\n            receiverValue,\r\n            gasLimit\r\n        );\r\n        return\r\n            wormholeRelayer.sendVaasToEvm{value: cost}(\r\n                targetChain,\r\n                targetAddress,\r\n                abi.encode(Transfer.TOKEN_BRIDGE, payload),\r\n                receiverValue,\r\n                gasLimit,\r\n                vaaKeys,\r\n                refundChain,\r\n                refundAddress\r\n            );\r\n    }\r\n}\r\n\r\nabstract contract CCTPAndTokenReceiver is CCTPAndTokenBase {\r\n    function redeemUSDC(\r\n        bytes memory cctpMessage\r\n    ) internal returns (uint256 amount) {\r\n        (bytes memory message, bytes memory signature) = abi.decode(\r\n            cctpMessage,\r\n            (bytes, bytes)\r\n        );\r\n        uint256 beforeBalance = IERC20(USDC).balanceOf(address(this));\r\n        circleMessageTransmitter.receiveMessage(message, signature);\r\n        return IERC20(USDC).balanceOf(address(this)) - beforeBalance;\r\n    }\r\n\r\n    struct TokenReceived {\r\n        bytes32 tokenHomeAddress;\r\n        uint16 tokenHomeChain;\r\n        address tokenAddress; // wrapped address if tokenHomeChain !== this chain, else tokenHomeAddress (in evm address format)\r\n        uint256 amount;\r\n        uint256 amountNormalized; // if decimals > 8, normalized to 8 decimal places\r\n    }\r\n\r\n    function getDecimals(\r\n        address tokenAddress\r\n    ) internal view returns (uint8 decimals) {\r\n        // query decimals\r\n        (, bytes memory queriedDecimals) = address(tokenAddress).staticcall(\r\n            abi.encodeWithSignature(\"decimals()\")\r\n        );\r\n        decimals = abi.decode(queriedDecimals, (uint8));\r\n    }\r\n\r\n    function getTokenAddressOnThisChain(\r\n        uint16 tokenHomeChain,\r\n        bytes32 tokenHomeAddress\r\n    ) internal view returns (address tokenAddressOnThisChain) {\r\n        return\r\n            tokenHomeChain == wormhole.chainId()\r\n                ? fromWormholeFormat(tokenHomeAddress)\r\n                : tokenBridge.wrappedAsset(tokenHomeChain, tokenHomeAddress);\r\n    }\r\n\r\n    function receiveWormholeMessages(\r\n        bytes memory payload,\r\n        bytes[] memory additionalMessages,\r\n        bytes32 sourceAddress,\r\n        uint16 sourceChain,\r\n        bytes32 deliveryHash\r\n    ) external payable {\r\n        Transfer transferType = abi.decode(payload, (Transfer));\r\n        if (transferType == Transfer.TOKEN_BRIDGE) {\r\n            TokenReceived[] memory receivedTokens = new TokenReceived[](\r\n                additionalMessages.length\r\n            );\r\n\r\n            for (uint256 i = 0; i < additionalMessages.length; ++i) {\r\n                IWormhole.VM memory parsed = wormhole.parseVM(\r\n                    additionalMessages[i]\r\n                );\r\n                require(\r\n                    parsed.emitterAddress ==\r\n                        tokenBridge.bridgeContracts(parsed.emitterChainId),\r\n                    \"Not a Token Bridge VAA\"\r\n                );\r\n                ITokenBridge.TransferWithPayload memory transfer = tokenBridge\r\n                    .parseTransferWithPayload(parsed.payload);\r\n                require(\r\n                    transfer.to == toWormholeFormat(address(this)) &&\r\n                        transfer.toChain == wormhole.chainId(),\r\n                    \"Token was not sent to this address\"\r\n                );\r\n\r\n                tokenBridge.completeTransferWithPayload(additionalMessages[i]);\r\n\r\n                address thisChainTokenAddress = getTokenAddressOnThisChain(\r\n                    transfer.tokenChain,\r\n                    transfer.tokenAddress\r\n                );\r\n                uint8 decimals = getDecimals(thisChainTokenAddress);\r\n                uint256 denormalizedAmount = transfer.amount;\r\n                if (decimals > 8)\r\n                    denormalizedAmount *= uint256(10) ** (decimals - 8);\r\n\r\n                receivedTokens[i] = TokenReceived({\r\n                    tokenHomeAddress: transfer.tokenAddress,\r\n                    tokenHomeChain: transfer.tokenChain,\r\n                    tokenAddress: thisChainTokenAddress,\r\n                    amount: denormalizedAmount,\r\n                    amountNormalized: transfer.amount\r\n                });\r\n            }\r\n\r\n            (, bytes memory userPayload) = abi.decode(\r\n                payload,\r\n                (Transfer, bytes)\r\n            );\r\n\r\n            // call into overriden method\r\n            receivePayloadAndTokens(\r\n                userPayload,\r\n                receivedTokens,\r\n                sourceAddress,\r\n                sourceChain,\r\n                deliveryHash\r\n            );\r\n        } else if (transferType == Transfer.CCTP) {\r\n            // Currently, 'sendUSDCWithPayloadToEVM' only sends one CCTP transfer\r\n            // That can be modified if the integrator desires to send multiple CCTP transfers\r\n            // in which case the following code would have to be modified to support\r\n            // redeeming these multiple transfers and checking that their 'amount's are accurate\r\n            require(\r\n                additionalMessages.length <= 1,\r\n                \"CCTP: At most one Message is supported\"\r\n            );\r\n\r\n            uint256 amountUSDCReceived;\r\n            if (additionalMessages.length == 1) {\r\n                amountUSDCReceived = redeemUSDC(additionalMessages[0]);\r\n            }\r\n\r\n            (, uint256 amount, bytes memory userPayload) = abi.decode(\r\n                payload,\r\n                (Transfer, uint256, bytes)\r\n            );\r\n\r\n            // Check that the correct amount was received\r\n            // It is important to verify that the 'USDC' sent in by the relayer is the same amount\r\n            // that the sender sent in on the source chain\r\n            require(amount == amountUSDCReceived, \"Wrong amount received\");\r\n\r\n            receivePayloadAndUSDC(\r\n                userPayload,\r\n                amountUSDCReceived,\r\n                sourceAddress,\r\n                sourceChain,\r\n                deliveryHash\r\n            );\r\n        } else {\r\n            revert(\"Invalid transfer type\");\r\n        }\r\n    }\r\n\r\n    // Implement this function to handle in-bound deliveries that include a CCTP transfer\r\n    function receivePayloadAndUSDC(\r\n        bytes memory payload,\r\n        uint256 amountUSDCReceived,\r\n        bytes32 sourceAddress,\r\n        uint16 sourceChain,\r\n        bytes32 deliveryHash\r\n    ) internal virtual {}\r\n\r\n    // Implement this function to handle in-bound deliveries that include a TokenBridge transfer\r\n    function receivePayloadAndTokens(\r\n        bytes memory payload,\r\n        TokenReceived[] memory receivedTokens,\r\n        bytes32 sourceAddress,\r\n        uint16 sourceChain,\r\n        bytes32 deliveryHash\r\n    ) internal virtual {}\r\n}\r\n"
			},
			"Nebula-bridge-contracts/src/CCTPBase.sol": {
				"content": "pragma solidity ^0.8.13;\r\n\r\nimport \"./interfaces/IWormholeReceiver.sol\";\r\nimport \"./interfaces/IWormholeRelayer.sol\";\r\nimport {IERC20} from \"./interfaces/IERC20.sol\";\r\nimport \"./interfaces/CCTPInterfaces/ITokenMessenger.sol\";\r\nimport \"./interfaces/CCTPInterfaces/IMessageTransmitter.sol\";\r\n\r\nimport \"./Utils.sol\";\r\nimport \"./Base.sol\";\r\n\r\nlibrary CCTPMessageLib {\r\n    // The second standardized key type is a CCTP Key\r\n    // representing a CCTP transfer of USDC\r\n    // (on the IWormholeRelayer interface)\r\n\r\n    // Note - the default delivery provider only will relay CCTP transfers that were sent\r\n    // in the same transaction that this message was emitted!\r\n    // (This will always be the case if 'CCTPSender' is used)\r\n\r\n    uint8 constant CCTP_KEY_TYPE = 2;\r\n\r\n    // encoded using abi.encodePacked(domain, nonce)\r\n    struct CCTPKey {\r\n        uint32 domain;\r\n        uint64 nonce;\r\n    }\r\n\r\n    // encoded using abi.encode(message, signature)\r\n    struct CCTPMessage {\r\n        bytes message;\r\n        bytes signature;\r\n    }\r\n}\r\n\r\nabstract contract CCTPBase is Base {\r\n    ITokenMessenger circleTokenMessenger;\r\n    IMessageTransmitter circleMessageTransmitter;\r\n    address USDC;\r\n    address cctpConfigurationOwner;\r\n\r\n    function _initCCTPBase(\r\n        address _wormholeRelayer,\r\n        address _wormhole,\r\n        address _circleMessageTransmitter,\r\n        address _circleTokenMessenger,\r\n        address _USDC\r\n    ) internal{\r\n        _initBase(_wormholeRelayer , _wormhole);\r\n        circleTokenMessenger = ITokenMessenger(_circleTokenMessenger);\r\n        circleMessageTransmitter = IMessageTransmitter(\r\n            _circleMessageTransmitter\r\n        );\r\n        USDC = _USDC;\r\n        cctpConfigurationOwner = msg.sender;\r\n    }\r\n}\r\n\r\nabstract contract CCTPSender is CCTPBase {\r\n    uint8 internal constant CONSISTENCY_LEVEL_FINALIZED = 15;\r\n\r\n    using CCTPMessageLib for *;\r\n\r\n    mapping(uint16 => uint32) public chainIdToCCTPDomain;\r\n\r\n    /**\r\n     * Sets the CCTP Domain corresponding to chain 'chain' to be 'cctpDomain'\r\n     * So that transfers of USDC to chain 'chain' use the target CCTP domain 'cctpDomain'\r\n     *\r\n     * This action can only be performed by 'cctpConfigurationOwner', who is set to be the deployer\r\n     *\r\n     * Currently, cctp domains are:\r\n     * Ethereum: Wormhole chain id 2, cctp domain 0\r\n     * Avalanche: Wormhole chain id 6, cctp domain 1\r\n     * Optimism: Wormhole chain id 24, cctp domain 2\r\n     * Arbitrum: Wormhole chain id 23, cctp domain 3\r\n     * Base: Wormhole chain id 30, cctp domain 6\r\n     *\r\n     * These can be set via:\r\n     * setCCTPDomain(2, 0);\r\n     * setCCTPDomain(6, 1);\r\n     * setCCTPDomain(24, 2);\r\n     * setCCTPDomain(23, 3);\r\n     * setCCTPDomain(30, 6);\r\n     */\r\n    function setCCTPDomain(uint16 chain, uint32 cctpDomain) public {\r\n        require(\r\n            msg.sender == cctpConfigurationOwner,\r\n            \"Not allowed to set CCTP Domain\"\r\n        );\r\n        chainIdToCCTPDomain[chain] = cctpDomain;\r\n    }\r\n\r\n    function getCCTPDomain(uint16 chain) internal view returns (uint32) {\r\n        return chainIdToCCTPDomain[chain];\r\n    }\r\n\r\n    /**\r\n     * transferUSDC wraps common boilerplate for sending tokens to another chain using IWormholeRelayer\r\n     * - approves the Circle TokenMessenger contract to spend 'amount' of USDC\r\n     * - calls Circle's 'depositForBurnWithCaller'\r\n     * - returns key for inclusion in WormholeRelayer `additionalVaas` argument\r\n     *\r\n     * Note: this requires that only the targetAddress can redeem transfers.\r\n     *\r\n     */\r\n\r\n    function transferUSDC(\r\n        uint256 amount,\r\n        uint16 targetChain,\r\n        address targetAddress\r\n    ) internal returns (MessageKey memory) {\r\n        IERC20(USDC).approve(address(circleTokenMessenger), amount);\r\n        bytes32 targetAddressBytes32 = addressToBytes32CCTP(targetAddress);\r\n        uint64 nonce = circleTokenMessenger.depositForBurnWithCaller(\r\n            amount,\r\n            getCCTPDomain(targetChain),\r\n            targetAddressBytes32,\r\n            USDC,\r\n            targetAddressBytes32\r\n        );\r\n        return\r\n            MessageKey(\r\n                CCTPMessageLib.CCTP_KEY_TYPE,\r\n                abi.encodePacked(getCCTPDomain(wormhole.chainId()), nonce)\r\n            );\r\n    }\r\n\r\n    // Publishes a CCTP transfer of 'amount' of USDC\r\n    // and requests a delivery of the transfer along with 'payload' to 'targetAddress' on 'targetChain'\r\n    //\r\n    // The second step is done by publishing a wormhole message representing a request\r\n    // to call 'receiveWormholeMessages' on the address 'targetAddress' on chain 'targetChain'\r\n    // with the payload 'abi.encode(amount, payload)'\r\n    // (and we encode the amount so it can be checked on the target chain)\r\n    function sendUSDCWithPayloadToEvm(\r\n        uint16 targetChain,\r\n        address targetAddress,\r\n        bytes memory payload,\r\n        uint256 receiverValue,\r\n        uint256 gasLimit,\r\n        uint256 amount\r\n    ) internal returns (uint64 sequence) {\r\n        MessageKey[] memory messageKeys = new MessageKey[](1);\r\n        messageKeys[0] = transferUSDC(amount, targetChain, targetAddress);\r\n\r\n        bytes memory userPayload = abi.encode(amount, payload);\r\n        address defaultDeliveryProvider = wormholeRelayer\r\n            .getDefaultDeliveryProvider();\r\n\r\n        (uint256 cost, ) = wormholeRelayer.quoteEVMDeliveryPrice(\r\n            targetChain,\r\n            receiverValue,\r\n            gasLimit\r\n        );\r\n\r\n        sequence = wormholeRelayer.sendToEvm{value: cost}(\r\n            targetChain,\r\n            targetAddress,\r\n            userPayload,\r\n            receiverValue,\r\n            0,\r\n            gasLimit,\r\n            targetChain,\r\n            address(0x0),\r\n            defaultDeliveryProvider,\r\n            messageKeys,\r\n            CONSISTENCY_LEVEL_FINALIZED\r\n        );\r\n    }\r\n}\r\n\r\nabstract contract CCTPReceiver is CCTPBase {\r\n    function redeemUSDC(\r\n        bytes memory cctpMessage\r\n    ) internal returns (uint256 amount) {\r\n        (bytes memory message, bytes memory signature) = abi.decode(\r\n            cctpMessage,\r\n            (bytes, bytes)\r\n        );\r\n        uint256 beforeBalance = IERC20(USDC).balanceOf(address(this));\r\n        circleMessageTransmitter.receiveMessage(message, signature);\r\n        return IERC20(USDC).balanceOf(address(this)) - beforeBalance;\r\n    }\r\n\r\n    function receiveWormholeMessages(\r\n        bytes memory payload,\r\n        bytes[] memory additionalMessages,\r\n        bytes32 sourceAddress,\r\n        uint16 sourceChain,\r\n        bytes32 deliveryHash\r\n    ) external payable {\r\n        // Currently, 'sendUSDCWithPayloadToEVM' only sends one CCTP transfer\r\n        // That can be modified if the integrator desires to send multiple CCTP transfers\r\n        // in which case the following code would have to be modified to support\r\n        // redeeming these multiple transfers and checking that their 'amount's are accurate\r\n        require(\r\n            additionalMessages.length <= 1,\r\n            \"CCTP: At most one Message is supported\"\r\n        );\r\n\r\n        uint256 amountUSDCReceived;\r\n        if (additionalMessages.length == 1) {\r\n            amountUSDCReceived = redeemUSDC(additionalMessages[0]);\r\n        }\r\n\r\n        (uint256 amount, bytes memory userPayload) = abi.decode(\r\n            payload,\r\n            (uint256, bytes)\r\n        );\r\n\r\n        // Check that the correct amount was received\r\n        // It is important to verify that the 'USDC' sent in by the relayer is the same amount\r\n        // that the sender sent in on the source chain\r\n        require(amount == amountUSDCReceived, \"Wrong amount received\");\r\n\r\n        receivePayloadAndUSDC(\r\n            userPayload,\r\n            amountUSDCReceived,\r\n            sourceAddress,\r\n            sourceChain,\r\n            deliveryHash\r\n        );\r\n    }\r\n\r\n    // Implement this function to handle in-bound deliveries that include a CCTP transfer\r\n    function receivePayloadAndUSDC(\r\n        bytes memory payload,\r\n        uint256 amountUSDCReceived,\r\n        bytes32 sourceAddress,\r\n        uint16 sourceChain,\r\n        bytes32 deliveryHash\r\n    ) internal virtual {}\r\n}\r\n"
			},
			"Nebula-bridge-contracts/src/Base.sol": {
				"content": "pragma solidity ^0.8.13;\r\n\r\nimport \"./interfaces/IWormholeReceiver.sol\";\r\nimport \"./interfaces/IWormholeRelayer.sol\";\r\nimport \"./interfaces/IWormhole.sol\";\r\nimport \"./Utils.sol\";\r\n\r\nabstract contract Base {\r\n    IWormholeRelayer public wormholeRelayer;\r\n    IWormhole public wormhole;\r\n\r\n    address registrationOwner;\r\n    mapping(uint16 => bytes32) registeredSenders;\r\n\r\n    function _initBase(address _wormholeRelayer,address _wormhole) internal{\r\n        wormholeRelayer = IWormholeRelayer(_wormholeRelayer);\r\n        wormhole = IWormhole(_wormhole);\r\n        registrationOwner = msg.sender;\r\n    }\r\n\r\n    modifier onlyWormholeRelayer() {\r\n        require(\r\n            msg.sender == address(wormholeRelayer),\r\n            \"Msg.sender is not Wormhole Relayer\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    modifier isRegisteredSender(uint16 sourceChain, bytes32 sourceAddress) {\r\n        require(\r\n            registeredSenders[sourceChain] == sourceAddress,\r\n            \"Not registered sender\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * Sets the registered address for 'sourceChain' to 'sourceAddress'\r\n     * So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid\r\n     *\r\n     * Assumes only one sender per chain is valid\r\n     * Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\r\n     */\r\n    function setRegisteredSender(\r\n        uint16 sourceChain,\r\n        bytes32 sourceAddress\r\n    ) public {\r\n        require(\r\n            msg.sender == registrationOwner,\r\n            \"Not allowed to set registered sender\"\r\n        );\r\n        registeredSenders[sourceChain] = sourceAddress;\r\n    }\r\n}\r\n"
			},
			"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol": {
				"content": "/*\r\n * Copyright (c) 2022, Circle Internet Financial Limited.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IRelayer.sol\";\r\nimport \"./IReceiver.sol\";\r\n\r\n/**\r\n * @title IMessageTransmitter\r\n * @notice Interface for message transmitters, which both relay and receive messages.\r\n */\r\ninterface IMessageTransmitter is IRelayer, IReceiver {\r\n\r\n}\r\n"
			},
			"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol": {
				"content": "\r\npragma solidity ^0.8.0;\r\n\r\ninterface ITokenMessenger {\r\n   /**\r\n     * @notice Deposits and burns tokens from sender to be minted on destination domain. The mint\r\n     * on the destination domain must be called by `destinationCaller`.\r\n     * WARNING: if the `destinationCaller` does not represent a valid address as bytes32, then it will not be possible\r\n     * to broadcast the message on the destination domain. This is an advanced feature, and the standard\r\n     * depositForBurn() should be preferred for use cases where a specific destination caller is not required.\r\n     * Emits a `DepositForBurn` event.\r\n     * @dev reverts if:\r\n     * - given destinationCaller is zero address\r\n     * - given burnToken is not supported\r\n     * - given destinationDomain has no TokenMessenger registered\r\n     * - transferFrom() reverts. For example, if sender's burnToken balance or approved allowance\r\n     * to this contract is less than `amount`.\r\n     * - burn() reverts. For example, if `amount` is 0.\r\n     * - MessageTransmitter returns false or reverts.\r\n     * @param amount amount of tokens to burn\r\n     * @param destinationDomain destination domain\r\n     * @param mintRecipient address of mint recipient on destination domain\r\n     * @param burnToken address of contract to burn deposited tokens, on local domain\r\n     * @param destinationCaller caller on the destination domain, as bytes32\r\n     * @return nonce unique nonce reserved by message\r\n     */\r\n    function depositForBurnWithCaller(\r\n        uint256 amount,\r\n        uint32 destinationDomain,\r\n        bytes32 mintRecipient,\r\n        address burnToken,\r\n        bytes32 destinationCaller\r\n    ) external returns (uint64 nonce);\r\n}\r\n"
			},
			"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol": {
				"content": "/*\r\n * Copyright (c) 2022, Circle Internet Financial Limited.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title IReceiver\r\n * @notice Receives messages on destination chain and forwards them to IMessageDestinationHandler\r\n */\r\ninterface IReceiver {\r\n    /**\r\n     * @notice Receives an incoming message, validating the header and passing\r\n     * the body to application-specific handler.\r\n     * @param message The message raw bytes\r\n     * @param signature The message signature\r\n     * @return success bool, true if successful\r\n     */\r\n    function receiveMessage(bytes calldata message, bytes calldata signature)\r\n        external\r\n        returns (bool success);\r\n}\r\n"
			},
			"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol": {
				"content": "/*\r\n * Copyright (c) 2022, Circle Internet Financial Limited.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title IRelayer\r\n * @notice Sends messages from source domain to destination domain\r\n */\r\ninterface IRelayer {\r\n    /**\r\n     * @notice Sends an outgoing message from the source domain.\r\n     * @dev Increment nonce, format the message, and emit `MessageSent` event with message information.\r\n     * @param destinationDomain Domain of destination chain\r\n     * @param recipient Address of message recipient on destination domain as bytes32\r\n     * @param messageBody Raw bytes content of message\r\n     * @return nonce reserved by message\r\n     */\r\n    function sendMessage(\r\n        uint32 destinationDomain,\r\n        bytes32 recipient,\r\n        bytes calldata messageBody\r\n    ) external returns (uint64);\r\n\r\n    /**\r\n     * @notice Sends an outgoing message from the source domain, with a specified caller on the\r\n     * destination domain.\r\n     * @dev Increment nonce, format the message, and emit `MessageSent` event with message information.\r\n     * WARNING: if the `destinationCaller` does not represent a valid address as bytes32, then it will not be possible\r\n     * to broadcast the message on the destination domain. This is an advanced feature, and the standard\r\n     * sendMessage() should be preferred for use cases where a specific destination caller is not required.\r\n     * @param destinationDomain Domain of destination chain\r\n     * @param recipient Address of message recipient on destination domain as bytes32\r\n     * @param destinationCaller caller on the destination domain, as bytes32\r\n     * @param messageBody Raw bytes content of message\r\n     * @return nonce reserved by message\r\n     */\r\n    function sendMessageWithCaller(\r\n        uint32 destinationDomain,\r\n        bytes32 recipient,\r\n        bytes32 destinationCaller,\r\n        bytes calldata messageBody\r\n    ) external returns (uint64);\r\n\r\n    /**\r\n     * @notice Replace a message with a new message body and/or destination caller.\r\n     * @dev The `originalAttestation` must be a valid attestation of `originalMessage`.\r\n     * @param originalMessage original message to replace\r\n     * @param originalAttestation attestation of `originalMessage`\r\n     * @param newMessageBody new message body of replaced message\r\n     * @param newDestinationCaller the new destination caller\r\n     */\r\n    function replaceMessage(\r\n        bytes calldata originalMessage,\r\n        bytes calldata originalAttestation,\r\n        bytes calldata newMessageBody,\r\n        bytes32 newDestinationCaller\r\n    ) external;\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Nebula-bridge-contracts/lib.d.sol": {
				"Inputs": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Nebula-bridge-contracts/lib.d.sol\":2352:2889  library Inputs {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Nebula-bridge-contracts/lib.d.sol\":2352:2889  library Inputs {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c0a7b6bdff84af1a26e7ce6cc6a339395136e1ae13397333258a59f4f248c17164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c0a7b6bdff84af1a26e7ce6cc6a339395136e1ae13397333258a59f4f248c17164736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xA7 0xB6 0xBD SELFDESTRUCT DUP5 0xAF BYTE 0x26 0xE7 0xCE PUSH13 0xC6A339395136E1AE1339733325 DUP11 MSIZE DELEGATECALL CALLCODE BASEFEE 0xC1 PUSH18 0x64736F6C6343000814003300000000000000 ",
							"sourceMap": "2352:537:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;2352:537:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c0a7b6bdff84af1a26e7ce6cc6a339395136e1ae13397333258a59f4f248c17164736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xA7 0xB6 0xBD SELFDESTRUCT DUP5 0xAF BYTE 0x26 0xE7 0xCE PUSH13 0xC6A339395136E1AE1339733325 DUP11 MSIZE DELEGATECALL CALLCODE BASEFEE 0xC1 PUSH18 0x64736F6C6343000814003300000000000000 ",
							"sourceMap": "2352:537:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2352,
									"end": 2889,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c0a7b6bdff84af1a26e7ce6cc6a339395136e1ae13397333258a59f4f248c17164736f6c63430008140033",
									".code": [
										{
											"begin": 2352,
											"end": 2889,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 2352,
											"end": 2889,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2352,
											"end": 2889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2352,
											"end": 2889,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2352,
											"end": 2889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2352,
											"end": 2889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2352,
											"end": 2889,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Nebula-bridge-contracts/lib.d.sol",
								"Nebula-bridge-contracts/src/Base.sol",
								"Nebula-bridge-contracts/src/CCTPAndTokenBase.sol",
								"Nebula-bridge-contracts/src/CCTPBase.sol",
								"Nebula-bridge-contracts/src/TokenBase.sol",
								"Nebula-bridge-contracts/src/Utils.sol",
								"Nebula-bridge-contracts/src/WormholeRelayerSDK.sol",
								"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol",
								"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol",
								"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol",
								"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol",
								"Nebula-bridge-contracts/src/interfaces/IERC20.sol",
								"Nebula-bridge-contracts/src/interfaces/ITokenBridge.sol",
								"Nebula-bridge-contracts/src/interfaces/IWETH.sol",
								"Nebula-bridge-contracts/src/interfaces/IWormhole.sol",
								"Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol",
								"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/lib.d.sol\":\"Inputs\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/lib.d.sol\":{\"keccak256\":\"0x2875da2b3be594eb327b762fb8e8580e50c9b1d2850065e38c5ad688d960bdfa\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://d074d6b0e3e77088e6d0bfc6957b4d6f8b86d94990be1da9aabbabb2785535db\",\"dweb:/ipfs/QmNa5Fk1mSnYpZhtmB65cM9gGQDCw8eyadAQpPKAQh96Aj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Structs": {
					"abi": [
						{
							"inputs": [],
							"name": "WrongFeeOrParams",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Nebula-bridge-contracts/lib.d.sol\":69:2348  library Structs {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Nebula-bridge-contracts/lib.d.sol\":69:2348  library Structs {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202a92052afbf210be8eeb3f38daf1d57dc70f94f040153259638d14d8f515dded64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202a92052afbf210be8eeb3f38daf1d57dc70f94f040153259638d14d8f515dded64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A SWAP3 SDIV 0x2A 0xFB CALLCODE LT 0xBE DUP15 0xEB EXTCODEHASH CODESIZE 0xDA CALL 0xD5 PUSH30 0xC70F94F040153259638D14D8F515DDED64736F6C63430008140033000000 ",
							"sourceMap": "69:2279:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;69:2279:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202a92052afbf210be8eeb3f38daf1d57dc70f94f040153259638d14d8f515dded64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A SWAP3 SDIV 0x2A 0xFB CALLCODE LT 0xBE DUP15 0xEB EXTCODEHASH CODESIZE 0xDA CALL 0xD5 PUSH30 0xC70F94F040153259638D14D8F515DDED64736F6C63430008140033000000 ",
							"sourceMap": "69:2279:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 69,
									"end": 2348,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202a92052afbf210be8eeb3f38daf1d57dc70f94f040153259638d14d8f515dded64736f6c63430008140033",
									".code": [
										{
											"begin": 69,
											"end": 2348,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 69,
											"end": 2348,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 69,
											"end": 2348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 69,
											"end": 2348,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 69,
											"end": 2348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69,
											"end": 2348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69,
											"end": 2348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69,
											"end": 2348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69,
											"end": 2348,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Nebula-bridge-contracts/lib.d.sol",
								"Nebula-bridge-contracts/src/Base.sol",
								"Nebula-bridge-contracts/src/CCTPAndTokenBase.sol",
								"Nebula-bridge-contracts/src/CCTPBase.sol",
								"Nebula-bridge-contracts/src/TokenBase.sol",
								"Nebula-bridge-contracts/src/Utils.sol",
								"Nebula-bridge-contracts/src/WormholeRelayerSDK.sol",
								"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol",
								"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol",
								"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol",
								"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol",
								"Nebula-bridge-contracts/src/interfaces/IERC20.sol",
								"Nebula-bridge-contracts/src/interfaces/ITokenBridge.sol",
								"Nebula-bridge-contracts/src/interfaces/IWETH.sol",
								"Nebula-bridge-contracts/src/interfaces/IWormhole.sol",
								"Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol",
								"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WrongFeeOrParams\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/lib.d.sol\":\"Structs\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/lib.d.sol\":{\"keccak256\":\"0x2875da2b3be594eb327b762fb8e8580e50c9b1d2850065e38c5ad688d960bdfa\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://d074d6b0e3e77088e6d0bfc6957b4d6f8b86d94990be1da9aabbabb2785535db\",\"dweb:/ipfs/QmNa5Fk1mSnYpZhtmB65cM9gGQDCw8eyadAQpPKAQh96Aj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Nebula-bridge-contracts/src/Base.sol": {
				"Base": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/Base.sol\":\"Base\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"Nebula-bridge-contracts/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"Nebula-bridge-contracts/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 171,
								"contract": "Nebula-bridge-contracts/src/Base.sol:Base",
								"label": "wormholeRelayer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWormholeRelayer)3382"
							},
							{
								"astId": 174,
								"contract": "Nebula-bridge-contracts/src/Base.sol:Base",
								"label": "wormhole",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWormhole)2948"
							},
							{
								"astId": 176,
								"contract": "Nebula-bridge-contracts/src/Base.sol:Base",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 180,
								"contract": "Nebula-bridge-contracts/src/Base.sol:Base",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_bytes32)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IWormhole)2948": {
								"encoding": "inplace",
								"label": "contract IWormhole",
								"numberOfBytes": "20"
							},
							"t_contract(IWormholeRelayer)3382": {
								"encoding": "inplace",
								"label": "contract IWormholeRelayer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				}
			},
			"Nebula-bridge-contracts/src/CCTPAndTokenBase.sol": {
				"CCTPAndTokenBase": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridge",
							"outputs": [
								{
									"internalType": "contract ITokenBridge",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"tokenBridge()": "c6328a46",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridge\",\"outputs\":[{\"internalType\":\"contract ITokenBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/CCTPAndTokenBase.sol\":\"CCTPAndTokenBase\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/lib.d.sol\":{\"keccak256\":\"0x2875da2b3be594eb327b762fb8e8580e50c9b1d2850065e38c5ad688d960bdfa\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://d074d6b0e3e77088e6d0bfc6957b4d6f8b86d94990be1da9aabbabb2785535db\",\"dweb:/ipfs/QmNa5Fk1mSnYpZhtmB65cM9gGQDCw8eyadAQpPKAQh96Aj\"]},\"Nebula-bridge-contracts/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"Nebula-bridge-contracts/src/CCTPAndTokenBase.sol\":{\"keccak256\":\"0x4c2b579e45cd567796c6639d4a1b7332e196343b2b0b351d4b2f1b7eb9a5de15\",\"urls\":[\"bzz-raw://ead29a9e0ccf4f0559c6aacf2dff6654b33e2a897c96b44c8a601d51a102e3b6\",\"dweb:/ipfs/QmQqiw27bAZUMZG2uMhSUnfxp9SVRpi25VGGnkTqw6MYEj\"]},\"Nebula-bridge-contracts/src/CCTPBase.sol\":{\"keccak256\":\"0xb0cb70d96d3c57421feca6842eab200246abcfcd1da1d53003449c9f517b9b36\",\"urls\":[\"bzz-raw://b12d2fa5425eaf7bfb6d5c7c2f949dbd50c11939f4636a64cd1b440ab4010999\",\"dweb:/ipfs/QmZZoGiQPRTCZtmjxsTzcd55wCkiriPiBPFU911XP3536i\"]},\"Nebula-bridge-contracts/src/TokenBase.sol\":{\"keccak256\":\"0x777830411b4b60c069cf4903158ef1997726180bc27a3fe2c07c38801c7d4003\",\"urls\":[\"bzz-raw://d75ad38857586f62b5c306a9882c145ae15c8fcffbd5f5ec7c40a677ddf58a7a\",\"dweb:/ipfs/QmVLnywxNvVibokZyCPn3n356drrQW7JgyEeuc9xtgtoQu\"]},\"Nebula-bridge-contracts/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"Nebula-bridge-contracts/src/WormholeRelayerSDK.sol\":{\"keccak256\":\"0x39b2a67c047941692c560b01198cfa5e24d326c11c23ae6b420571849ae80d0c\",\"urls\":[\"bzz-raw://37d655ea5d15012a32f05f08151d5cb597065b5af6102060c2f7836b32356e25\",\"dweb:/ipfs/QmYNenC57JECfqSmjnXa59yxkmPjTmSi6fh53XC343d3ru\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]},\"Nebula-bridge-contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"Nebula-bridge-contracts/src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0xad665028667c70a3663044b335e3a1d388da3018bf4720853adb9fa8f49a9342\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://d86e90b3ee0c951fe3169df0af0d1071fb073d506923ecfee4e51f3eef941919\",\"dweb:/ipfs/Qmdu9AjEp1JaD6KEwe5S5pxgnzii5QXFR2peApBNkhNTes\"]},\"Nebula-bridge-contracts/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xbb3a2b248ef78c421dd137e75236af605d4618acca294e8930a9ba1aed769c9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://e5402ba174843110d8ac66b1f7cc90d4dbc2d50996ed15165a64b093b33dfcd8\",\"dweb:/ipfs/QmfRtStHfFaQjSs5wocQmQEdosd6a5QmTP6rbB6ETqgmb4\"]},\"Nebula-bridge-contracts/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 171,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenBase",
								"label": "wormholeRelayer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWormholeRelayer)3382"
							},
							{
								"astId": 174,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenBase",
								"label": "wormhole",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWormhole)2948"
							},
							{
								"astId": 176,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenBase",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 180,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenBase",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_bytes32)"
							},
							{
								"astId": 1173,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenBase",
								"label": "circleTokenMessenger",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ITokenMessenger)2140"
							},
							{
								"astId": 1176,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenBase",
								"label": "circleMessageTransmitter",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IMessageTransmitter)2065"
							},
							{
								"astId": 1178,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenBase",
								"label": "USDC",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1180,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenBase",
								"label": "cctpConfigurationOwner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 278,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenBase",
								"label": "tokenBridge",
								"offset": 0,
								"slot": "8",
								"type": "t_contract(ITokenBridge)2618"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IMessageTransmitter)2065": {
								"encoding": "inplace",
								"label": "contract IMessageTransmitter",
								"numberOfBytes": "20"
							},
							"t_contract(ITokenBridge)2618": {
								"encoding": "inplace",
								"label": "contract ITokenBridge",
								"numberOfBytes": "20"
							},
							"t_contract(ITokenMessenger)2140": {
								"encoding": "inplace",
								"label": "contract ITokenMessenger",
								"numberOfBytes": "20"
							},
							"t_contract(IWormhole)2948": {
								"encoding": "inplace",
								"label": "contract IWormhole",
								"numberOfBytes": "20"
							},
							"t_contract(IWormholeRelayer)3382": {
								"encoding": "inplace",
								"label": "contract IWormholeRelayer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				},
				"CCTPAndTokenReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "NotAnEvmAddress",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "bytes[]",
									"name": "additionalMessages",
									"type": "bytes[]"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								},
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "receiveWormholeMessages",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridge",
							"outputs": [
								{
									"internalType": "contract ITokenBridge",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": "529dca32",
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"tokenBridge()": "c6328a46",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"NotAnEvmAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"additionalMessages\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"receiveWormholeMessages\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridge\",\"outputs\":[{\"internalType\":\"contract ITokenBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/CCTPAndTokenBase.sol\":\"CCTPAndTokenReceiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/lib.d.sol\":{\"keccak256\":\"0x2875da2b3be594eb327b762fb8e8580e50c9b1d2850065e38c5ad688d960bdfa\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://d074d6b0e3e77088e6d0bfc6957b4d6f8b86d94990be1da9aabbabb2785535db\",\"dweb:/ipfs/QmNa5Fk1mSnYpZhtmB65cM9gGQDCw8eyadAQpPKAQh96Aj\"]},\"Nebula-bridge-contracts/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"Nebula-bridge-contracts/src/CCTPAndTokenBase.sol\":{\"keccak256\":\"0x4c2b579e45cd567796c6639d4a1b7332e196343b2b0b351d4b2f1b7eb9a5de15\",\"urls\":[\"bzz-raw://ead29a9e0ccf4f0559c6aacf2dff6654b33e2a897c96b44c8a601d51a102e3b6\",\"dweb:/ipfs/QmQqiw27bAZUMZG2uMhSUnfxp9SVRpi25VGGnkTqw6MYEj\"]},\"Nebula-bridge-contracts/src/CCTPBase.sol\":{\"keccak256\":\"0xb0cb70d96d3c57421feca6842eab200246abcfcd1da1d53003449c9f517b9b36\",\"urls\":[\"bzz-raw://b12d2fa5425eaf7bfb6d5c7c2f949dbd50c11939f4636a64cd1b440ab4010999\",\"dweb:/ipfs/QmZZoGiQPRTCZtmjxsTzcd55wCkiriPiBPFU911XP3536i\"]},\"Nebula-bridge-contracts/src/TokenBase.sol\":{\"keccak256\":\"0x777830411b4b60c069cf4903158ef1997726180bc27a3fe2c07c38801c7d4003\",\"urls\":[\"bzz-raw://d75ad38857586f62b5c306a9882c145ae15c8fcffbd5f5ec7c40a677ddf58a7a\",\"dweb:/ipfs/QmVLnywxNvVibokZyCPn3n356drrQW7JgyEeuc9xtgtoQu\"]},\"Nebula-bridge-contracts/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"Nebula-bridge-contracts/src/WormholeRelayerSDK.sol\":{\"keccak256\":\"0x39b2a67c047941692c560b01198cfa5e24d326c11c23ae6b420571849ae80d0c\",\"urls\":[\"bzz-raw://37d655ea5d15012a32f05f08151d5cb597065b5af6102060c2f7836b32356e25\",\"dweb:/ipfs/QmYNenC57JECfqSmjnXa59yxkmPjTmSi6fh53XC343d3ru\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]},\"Nebula-bridge-contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"Nebula-bridge-contracts/src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0xad665028667c70a3663044b335e3a1d388da3018bf4720853adb9fa8f49a9342\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://d86e90b3ee0c951fe3169df0af0d1071fb073d506923ecfee4e51f3eef941919\",\"dweb:/ipfs/Qmdu9AjEp1JaD6KEwe5S5pxgnzii5QXFR2peApBNkhNTes\"]},\"Nebula-bridge-contracts/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xbb3a2b248ef78c421dd137e75236af605d4618acca294e8930a9ba1aed769c9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://e5402ba174843110d8ac66b1f7cc90d4dbc2d50996ed15165a64b093b33dfcd8\",\"dweb:/ipfs/QmfRtStHfFaQjSs5wocQmQEdosd6a5QmTP6rbB6ETqgmb4\"]},\"Nebula-bridge-contracts/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 171,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenReceiver",
								"label": "wormholeRelayer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWormholeRelayer)3382"
							},
							{
								"astId": 174,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenReceiver",
								"label": "wormhole",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWormhole)2948"
							},
							{
								"astId": 176,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenReceiver",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 180,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenReceiver",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_bytes32)"
							},
							{
								"astId": 1173,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenReceiver",
								"label": "circleTokenMessenger",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ITokenMessenger)2140"
							},
							{
								"astId": 1176,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenReceiver",
								"label": "circleMessageTransmitter",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IMessageTransmitter)2065"
							},
							{
								"astId": 1178,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenReceiver",
								"label": "USDC",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1180,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenReceiver",
								"label": "cctpConfigurationOwner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 278,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenReceiver",
								"label": "tokenBridge",
								"offset": 0,
								"slot": "8",
								"type": "t_contract(ITokenBridge)2618"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IMessageTransmitter)2065": {
								"encoding": "inplace",
								"label": "contract IMessageTransmitter",
								"numberOfBytes": "20"
							},
							"t_contract(ITokenBridge)2618": {
								"encoding": "inplace",
								"label": "contract ITokenBridge",
								"numberOfBytes": "20"
							},
							"t_contract(ITokenMessenger)2140": {
								"encoding": "inplace",
								"label": "contract ITokenMessenger",
								"numberOfBytes": "20"
							},
							"t_contract(IWormhole)2948": {
								"encoding": "inplace",
								"label": "contract IWormhole",
								"numberOfBytes": "20"
							},
							"t_contract(IWormholeRelayer)3382": {
								"encoding": "inplace",
								"label": "contract IWormholeRelayer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				},
				"CCTPAndTokenSender": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"name": "chainIdToCCTPDomain",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "chain",
									"type": "uint16"
								},
								{
									"internalType": "uint32",
									"name": "cctpDomain",
									"type": "uint32"
								}
							],
							"name": "setCCTPDomain",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridge",
							"outputs": [
								{
									"internalType": "contract ITokenBridge",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"chainIdToCCTPDomain(uint16)": "3a57cd63",
							"setCCTPDomain(uint16,uint32)": "c6a4fd1c",
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"tokenBridge()": "c6328a46",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"chainIdToCCTPDomain\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chain\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"cctpDomain\",\"type\":\"uint32\"}],\"name\":\"setCCTPDomain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridge\",\"outputs\":[{\"internalType\":\"contract ITokenBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setCCTPDomain(uint16,uint32)\":{\"notice\":\"Sets the CCTP Domain corresponding to chain 'chain' to be 'cctpDomain' So that transfers of USDC to chain 'chain' use the target CCTP domain 'cctpDomain' This action can only be performed by 'cctpConfigurationOwner', who is set to be the deployer Currently, cctp domains are: Ethereum: Wormhole chain id 2, cctp domain 0 Avalanche: Wormhole chain id 6, cctp domain 1 Optimism: Wormhole chain id 24, cctp domain 2 Arbitrum: Wormhole chain id 23, cctp domain 3 Base: Wormhole chain id 30, cctp domain 6 These can be set via: setCCTPDomain(2, 0); setCCTPDomain(6, 1); setCCTPDomain(24, 2); setCCTPDomain(23, 3); setCCTPDomain(30, 6);\"},\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/CCTPAndTokenBase.sol\":\"CCTPAndTokenSender\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/lib.d.sol\":{\"keccak256\":\"0x2875da2b3be594eb327b762fb8e8580e50c9b1d2850065e38c5ad688d960bdfa\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://d074d6b0e3e77088e6d0bfc6957b4d6f8b86d94990be1da9aabbabb2785535db\",\"dweb:/ipfs/QmNa5Fk1mSnYpZhtmB65cM9gGQDCw8eyadAQpPKAQh96Aj\"]},\"Nebula-bridge-contracts/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"Nebula-bridge-contracts/src/CCTPAndTokenBase.sol\":{\"keccak256\":\"0x4c2b579e45cd567796c6639d4a1b7332e196343b2b0b351d4b2f1b7eb9a5de15\",\"urls\":[\"bzz-raw://ead29a9e0ccf4f0559c6aacf2dff6654b33e2a897c96b44c8a601d51a102e3b6\",\"dweb:/ipfs/QmQqiw27bAZUMZG2uMhSUnfxp9SVRpi25VGGnkTqw6MYEj\"]},\"Nebula-bridge-contracts/src/CCTPBase.sol\":{\"keccak256\":\"0xb0cb70d96d3c57421feca6842eab200246abcfcd1da1d53003449c9f517b9b36\",\"urls\":[\"bzz-raw://b12d2fa5425eaf7bfb6d5c7c2f949dbd50c11939f4636a64cd1b440ab4010999\",\"dweb:/ipfs/QmZZoGiQPRTCZtmjxsTzcd55wCkiriPiBPFU911XP3536i\"]},\"Nebula-bridge-contracts/src/TokenBase.sol\":{\"keccak256\":\"0x777830411b4b60c069cf4903158ef1997726180bc27a3fe2c07c38801c7d4003\",\"urls\":[\"bzz-raw://d75ad38857586f62b5c306a9882c145ae15c8fcffbd5f5ec7c40a677ddf58a7a\",\"dweb:/ipfs/QmVLnywxNvVibokZyCPn3n356drrQW7JgyEeuc9xtgtoQu\"]},\"Nebula-bridge-contracts/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"Nebula-bridge-contracts/src/WormholeRelayerSDK.sol\":{\"keccak256\":\"0x39b2a67c047941692c560b01198cfa5e24d326c11c23ae6b420571849ae80d0c\",\"urls\":[\"bzz-raw://37d655ea5d15012a32f05f08151d5cb597065b5af6102060c2f7836b32356e25\",\"dweb:/ipfs/QmYNenC57JECfqSmjnXa59yxkmPjTmSi6fh53XC343d3ru\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]},\"Nebula-bridge-contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"Nebula-bridge-contracts/src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0xad665028667c70a3663044b335e3a1d388da3018bf4720853adb9fa8f49a9342\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://d86e90b3ee0c951fe3169df0af0d1071fb073d506923ecfee4e51f3eef941919\",\"dweb:/ipfs/Qmdu9AjEp1JaD6KEwe5S5pxgnzii5QXFR2peApBNkhNTes\"]},\"Nebula-bridge-contracts/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xbb3a2b248ef78c421dd137e75236af605d4618acca294e8930a9ba1aed769c9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://e5402ba174843110d8ac66b1f7cc90d4dbc2d50996ed15165a64b093b33dfcd8\",\"dweb:/ipfs/QmfRtStHfFaQjSs5wocQmQEdosd6a5QmTP6rbB6ETqgmb4\"]},\"Nebula-bridge-contracts/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 171,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenSender",
								"label": "wormholeRelayer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWormholeRelayer)3382"
							},
							{
								"astId": 174,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenSender",
								"label": "wormhole",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWormhole)2948"
							},
							{
								"astId": 176,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenSender",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 180,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenSender",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_bytes32)"
							},
							{
								"astId": 1173,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenSender",
								"label": "circleTokenMessenger",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ITokenMessenger)2140"
							},
							{
								"astId": 1176,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenSender",
								"label": "circleMessageTransmitter",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IMessageTransmitter)2065"
							},
							{
								"astId": 1178,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenSender",
								"label": "USDC",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1180,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenSender",
								"label": "cctpConfigurationOwner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 278,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenSender",
								"label": "tokenBridge",
								"offset": 0,
								"slot": "8",
								"type": "t_contract(ITokenBridge)2618"
							},
							{
								"astId": 323,
								"contract": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol:CCTPAndTokenSender",
								"label": "chainIdToCCTPDomain",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint16,t_uint32)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IMessageTransmitter)2065": {
								"encoding": "inplace",
								"label": "contract IMessageTransmitter",
								"numberOfBytes": "20"
							},
							"t_contract(ITokenBridge)2618": {
								"encoding": "inplace",
								"label": "contract ITokenBridge",
								"numberOfBytes": "20"
							},
							"t_contract(ITokenMessenger)2140": {
								"encoding": "inplace",
								"label": "contract ITokenMessenger",
								"numberOfBytes": "20"
							},
							"t_contract(IWormhole)2948": {
								"encoding": "inplace",
								"label": "contract IWormhole",
								"numberOfBytes": "20"
							},
							"t_contract(IWormholeRelayer)3382": {
								"encoding": "inplace",
								"label": "contract IWormholeRelayer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_mapping(t_uint16,t_uint32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setCCTPDomain(uint16,uint32)": {
								"notice": "Sets the CCTP Domain corresponding to chain 'chain' to be 'cctpDomain' So that transfers of USDC to chain 'chain' use the target CCTP domain 'cctpDomain' This action can only be performed by 'cctpConfigurationOwner', who is set to be the deployer Currently, cctp domains are: Ethereum: Wormhole chain id 2, cctp domain 0 Avalanche: Wormhole chain id 6, cctp domain 1 Optimism: Wormhole chain id 24, cctp domain 2 Arbitrum: Wormhole chain id 23, cctp domain 3 Base: Wormhole chain id 30, cctp domain 6 These can be set via: setCCTPDomain(2, 0); setCCTPDomain(6, 1); setCCTPDomain(24, 2); setCCTPDomain(23, 3); setCCTPDomain(30, 6);"
							},
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				}
			},
			"Nebula-bridge-contracts/src/CCTPBase.sol": {
				"CCTPBase": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/CCTPBase.sol\":\"CCTPBase\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"Nebula-bridge-contracts/src/CCTPBase.sol\":{\"keccak256\":\"0xb0cb70d96d3c57421feca6842eab200246abcfcd1da1d53003449c9f517b9b36\",\"urls\":[\"bzz-raw://b12d2fa5425eaf7bfb6d5c7c2f949dbd50c11939f4636a64cd1b440ab4010999\",\"dweb:/ipfs/QmZZoGiQPRTCZtmjxsTzcd55wCkiriPiBPFU911XP3536i\"]},\"Nebula-bridge-contracts/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]},\"Nebula-bridge-contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"Nebula-bridge-contracts/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 171,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPBase",
								"label": "wormholeRelayer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWormholeRelayer)3382"
							},
							{
								"astId": 174,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPBase",
								"label": "wormhole",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWormhole)2948"
							},
							{
								"astId": 176,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPBase",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 180,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPBase",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_bytes32)"
							},
							{
								"astId": 1173,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPBase",
								"label": "circleTokenMessenger",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ITokenMessenger)2140"
							},
							{
								"astId": 1176,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPBase",
								"label": "circleMessageTransmitter",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IMessageTransmitter)2065"
							},
							{
								"astId": 1178,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPBase",
								"label": "USDC",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1180,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPBase",
								"label": "cctpConfigurationOwner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IMessageTransmitter)2065": {
								"encoding": "inplace",
								"label": "contract IMessageTransmitter",
								"numberOfBytes": "20"
							},
							"t_contract(ITokenMessenger)2140": {
								"encoding": "inplace",
								"label": "contract ITokenMessenger",
								"numberOfBytes": "20"
							},
							"t_contract(IWormhole)2948": {
								"encoding": "inplace",
								"label": "contract IWormhole",
								"numberOfBytes": "20"
							},
							"t_contract(IWormholeRelayer)3382": {
								"encoding": "inplace",
								"label": "contract IWormholeRelayer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				},
				"CCTPMessageLib": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Nebula-bridge-contracts/src/CCTPBase.sol\":339:1040  library CCTPMessageLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Nebula-bridge-contracts/src/CCTPBase.sol\":339:1040  library CCTPMessageLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ffabc11611453befdf112a9228d56137a956eb5fc48a219c08775205e288637a64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ffabc11611453befdf112a9228d56137a956eb5fc48a219c08775205e288637a64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xAB 0xC1 AND GT GASLIMIT EXTCODESIZE 0xEF 0xDF GT 0x2A SWAP3 0x28 0xD5 PUSH2 0x37A9 JUMP 0xEB PUSH0 0xC4 DUP11 0x21 SWAP13 ADDMOD PUSH24 0x5205E288637A64736F6C6343000814003300000000000000 ",
							"sourceMap": "339:701:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;339:701:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ffabc11611453befdf112a9228d56137a956eb5fc48a219c08775205e288637a64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xAB 0xC1 AND GT GASLIMIT EXTCODESIZE 0xEF 0xDF GT 0x2A SWAP3 0x28 0xD5 PUSH2 0x37A9 JUMP 0xEB PUSH0 0xC4 DUP11 0x21 SWAP13 ADDMOD PUSH24 0x5205E288637A64736F6C6343000814003300000000000000 ",
							"sourceMap": "339:701:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 339,
									"end": 1040,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ffabc11611453befdf112a9228d56137a956eb5fc48a219c08775205e288637a64736f6c63430008140033",
									".code": [
										{
											"begin": 339,
											"end": 1040,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 339,
											"end": 1040,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 339,
											"end": 1040,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 339,
											"end": 1040,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 339,
											"end": 1040,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 1040,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 339,
											"end": 1040,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 1040,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 339,
											"end": 1040,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"Nebula-bridge-contracts/lib.d.sol",
								"Nebula-bridge-contracts/src/Base.sol",
								"Nebula-bridge-contracts/src/CCTPAndTokenBase.sol",
								"Nebula-bridge-contracts/src/CCTPBase.sol",
								"Nebula-bridge-contracts/src/TokenBase.sol",
								"Nebula-bridge-contracts/src/Utils.sol",
								"Nebula-bridge-contracts/src/WormholeRelayerSDK.sol",
								"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol",
								"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol",
								"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol",
								"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol",
								"Nebula-bridge-contracts/src/interfaces/IERC20.sol",
								"Nebula-bridge-contracts/src/interfaces/ITokenBridge.sol",
								"Nebula-bridge-contracts/src/interfaces/IWETH.sol",
								"Nebula-bridge-contracts/src/interfaces/IWormhole.sol",
								"Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol",
								"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/CCTPBase.sol\":\"CCTPMessageLib\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"Nebula-bridge-contracts/src/CCTPBase.sol\":{\"keccak256\":\"0xb0cb70d96d3c57421feca6842eab200246abcfcd1da1d53003449c9f517b9b36\",\"urls\":[\"bzz-raw://b12d2fa5425eaf7bfb6d5c7c2f949dbd50c11939f4636a64cd1b440ab4010999\",\"dweb:/ipfs/QmZZoGiQPRTCZtmjxsTzcd55wCkiriPiBPFU911XP3536i\"]},\"Nebula-bridge-contracts/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]},\"Nebula-bridge-contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"Nebula-bridge-contracts/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"CCTPReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "bytes[]",
									"name": "additionalMessages",
									"type": "bytes[]"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								},
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "receiveWormholeMessages",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": "529dca32",
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"additionalMessages\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"receiveWormholeMessages\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/CCTPBase.sol\":\"CCTPReceiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"Nebula-bridge-contracts/src/CCTPBase.sol\":{\"keccak256\":\"0xb0cb70d96d3c57421feca6842eab200246abcfcd1da1d53003449c9f517b9b36\",\"urls\":[\"bzz-raw://b12d2fa5425eaf7bfb6d5c7c2f949dbd50c11939f4636a64cd1b440ab4010999\",\"dweb:/ipfs/QmZZoGiQPRTCZtmjxsTzcd55wCkiriPiBPFU911XP3536i\"]},\"Nebula-bridge-contracts/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]},\"Nebula-bridge-contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"Nebula-bridge-contracts/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 171,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPReceiver",
								"label": "wormholeRelayer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWormholeRelayer)3382"
							},
							{
								"astId": 174,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPReceiver",
								"label": "wormhole",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWormhole)2948"
							},
							{
								"astId": 176,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPReceiver",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 180,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPReceiver",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_bytes32)"
							},
							{
								"astId": 1173,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPReceiver",
								"label": "circleTokenMessenger",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ITokenMessenger)2140"
							},
							{
								"astId": 1176,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPReceiver",
								"label": "circleMessageTransmitter",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IMessageTransmitter)2065"
							},
							{
								"astId": 1178,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPReceiver",
								"label": "USDC",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1180,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPReceiver",
								"label": "cctpConfigurationOwner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IMessageTransmitter)2065": {
								"encoding": "inplace",
								"label": "contract IMessageTransmitter",
								"numberOfBytes": "20"
							},
							"t_contract(ITokenMessenger)2140": {
								"encoding": "inplace",
								"label": "contract ITokenMessenger",
								"numberOfBytes": "20"
							},
							"t_contract(IWormhole)2948": {
								"encoding": "inplace",
								"label": "contract IWormhole",
								"numberOfBytes": "20"
							},
							"t_contract(IWormholeRelayer)3382": {
								"encoding": "inplace",
								"label": "contract IWormholeRelayer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				},
				"CCTPSender": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"name": "chainIdToCCTPDomain",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "chain",
									"type": "uint16"
								},
								{
									"internalType": "uint32",
									"name": "cctpDomain",
									"type": "uint32"
								}
							],
							"name": "setCCTPDomain",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"chainIdToCCTPDomain(uint16)": "3a57cd63",
							"setCCTPDomain(uint16,uint32)": "c6a4fd1c",
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"chainIdToCCTPDomain\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chain\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"cctpDomain\",\"type\":\"uint32\"}],\"name\":\"setCCTPDomain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setCCTPDomain(uint16,uint32)\":{\"notice\":\"Sets the CCTP Domain corresponding to chain 'chain' to be 'cctpDomain' So that transfers of USDC to chain 'chain' use the target CCTP domain 'cctpDomain' This action can only be performed by 'cctpConfigurationOwner', who is set to be the deployer Currently, cctp domains are: Ethereum: Wormhole chain id 2, cctp domain 0 Avalanche: Wormhole chain id 6, cctp domain 1 Optimism: Wormhole chain id 24, cctp domain 2 Arbitrum: Wormhole chain id 23, cctp domain 3 Base: Wormhole chain id 30, cctp domain 6 These can be set via: setCCTPDomain(2, 0); setCCTPDomain(6, 1); setCCTPDomain(24, 2); setCCTPDomain(23, 3); setCCTPDomain(30, 6);\"},\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/CCTPBase.sol\":\"CCTPSender\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"Nebula-bridge-contracts/src/CCTPBase.sol\":{\"keccak256\":\"0xb0cb70d96d3c57421feca6842eab200246abcfcd1da1d53003449c9f517b9b36\",\"urls\":[\"bzz-raw://b12d2fa5425eaf7bfb6d5c7c2f949dbd50c11939f4636a64cd1b440ab4010999\",\"dweb:/ipfs/QmZZoGiQPRTCZtmjxsTzcd55wCkiriPiBPFU911XP3536i\"]},\"Nebula-bridge-contracts/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]},\"Nebula-bridge-contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"Nebula-bridge-contracts/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 171,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPSender",
								"label": "wormholeRelayer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWormholeRelayer)3382"
							},
							{
								"astId": 174,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPSender",
								"label": "wormhole",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWormhole)2948"
							},
							{
								"astId": 176,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPSender",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 180,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPSender",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_bytes32)"
							},
							{
								"astId": 1173,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPSender",
								"label": "circleTokenMessenger",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ITokenMessenger)2140"
							},
							{
								"astId": 1176,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPSender",
								"label": "circleMessageTransmitter",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IMessageTransmitter)2065"
							},
							{
								"astId": 1178,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPSender",
								"label": "USDC",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1180,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPSender",
								"label": "cctpConfigurationOwner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1232,
								"contract": "Nebula-bridge-contracts/src/CCTPBase.sol:CCTPSender",
								"label": "chainIdToCCTPDomain",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint16,t_uint32)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IMessageTransmitter)2065": {
								"encoding": "inplace",
								"label": "contract IMessageTransmitter",
								"numberOfBytes": "20"
							},
							"t_contract(ITokenMessenger)2140": {
								"encoding": "inplace",
								"label": "contract ITokenMessenger",
								"numberOfBytes": "20"
							},
							"t_contract(IWormhole)2948": {
								"encoding": "inplace",
								"label": "contract IWormhole",
								"numberOfBytes": "20"
							},
							"t_contract(IWormholeRelayer)3382": {
								"encoding": "inplace",
								"label": "contract IWormholeRelayer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_mapping(t_uint16,t_uint32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => uint32)",
								"numberOfBytes": "32",
								"value": "t_uint32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setCCTPDomain(uint16,uint32)": {
								"notice": "Sets the CCTP Domain corresponding to chain 'chain' to be 'cctpDomain' So that transfers of USDC to chain 'chain' use the target CCTP domain 'cctpDomain' This action can only be performed by 'cctpConfigurationOwner', who is set to be the deployer Currently, cctp domains are: Ethereum: Wormhole chain id 2, cctp domain 0 Avalanche: Wormhole chain id 6, cctp domain 1 Optimism: Wormhole chain id 24, cctp domain 2 Arbitrum: Wormhole chain id 23, cctp domain 3 Base: Wormhole chain id 30, cctp domain 6 These can be set via: setCCTPDomain(2, 0); setCCTPDomain(6, 1); setCCTPDomain(24, 2); setCCTPDomain(23, 3); setCCTPDomain(30, 6);"
							},
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				}
			},
			"Nebula-bridge-contracts/src/TokenBase.sol": {
				"TokenBase": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridge",
							"outputs": [
								{
									"internalType": "contract ITokenBridge",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"tokenBridge()": "c6328a46",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridge\",\"outputs\":[{\"internalType\":\"contract ITokenBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/TokenBase.sol\":\"TokenBase\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/lib.d.sol\":{\"keccak256\":\"0x2875da2b3be594eb327b762fb8e8580e50c9b1d2850065e38c5ad688d960bdfa\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://d074d6b0e3e77088e6d0bfc6957b4d6f8b86d94990be1da9aabbabb2785535db\",\"dweb:/ipfs/QmNa5Fk1mSnYpZhtmB65cM9gGQDCw8eyadAQpPKAQh96Aj\"]},\"Nebula-bridge-contracts/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"Nebula-bridge-contracts/src/CCTPAndTokenBase.sol\":{\"keccak256\":\"0x4c2b579e45cd567796c6639d4a1b7332e196343b2b0b351d4b2f1b7eb9a5de15\",\"urls\":[\"bzz-raw://ead29a9e0ccf4f0559c6aacf2dff6654b33e2a897c96b44c8a601d51a102e3b6\",\"dweb:/ipfs/QmQqiw27bAZUMZG2uMhSUnfxp9SVRpi25VGGnkTqw6MYEj\"]},\"Nebula-bridge-contracts/src/CCTPBase.sol\":{\"keccak256\":\"0xb0cb70d96d3c57421feca6842eab200246abcfcd1da1d53003449c9f517b9b36\",\"urls\":[\"bzz-raw://b12d2fa5425eaf7bfb6d5c7c2f949dbd50c11939f4636a64cd1b440ab4010999\",\"dweb:/ipfs/QmZZoGiQPRTCZtmjxsTzcd55wCkiriPiBPFU911XP3536i\"]},\"Nebula-bridge-contracts/src/TokenBase.sol\":{\"keccak256\":\"0x777830411b4b60c069cf4903158ef1997726180bc27a3fe2c07c38801c7d4003\",\"urls\":[\"bzz-raw://d75ad38857586f62b5c306a9882c145ae15c8fcffbd5f5ec7c40a677ddf58a7a\",\"dweb:/ipfs/QmVLnywxNvVibokZyCPn3n356drrQW7JgyEeuc9xtgtoQu\"]},\"Nebula-bridge-contracts/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"Nebula-bridge-contracts/src/WormholeRelayerSDK.sol\":{\"keccak256\":\"0x39b2a67c047941692c560b01198cfa5e24d326c11c23ae6b420571849ae80d0c\",\"urls\":[\"bzz-raw://37d655ea5d15012a32f05f08151d5cb597065b5af6102060c2f7836b32356e25\",\"dweb:/ipfs/QmYNenC57JECfqSmjnXa59yxkmPjTmSi6fh53XC343d3ru\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]},\"Nebula-bridge-contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"Nebula-bridge-contracts/src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0xad665028667c70a3663044b335e3a1d388da3018bf4720853adb9fa8f49a9342\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://d86e90b3ee0c951fe3169df0af0d1071fb073d506923ecfee4e51f3eef941919\",\"dweb:/ipfs/Qmdu9AjEp1JaD6KEwe5S5pxgnzii5QXFR2peApBNkhNTes\"]},\"Nebula-bridge-contracts/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xbb3a2b248ef78c421dd137e75236af605d4618acca294e8930a9ba1aed769c9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://e5402ba174843110d8ac66b1f7cc90d4dbc2d50996ed15165a64b093b33dfcd8\",\"dweb:/ipfs/QmfRtStHfFaQjSs5wocQmQEdosd6a5QmTP6rbB6ETqgmb4\"]},\"Nebula-bridge-contracts/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 171,
								"contract": "Nebula-bridge-contracts/src/TokenBase.sol:TokenBase",
								"label": "wormholeRelayer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWormholeRelayer)3382"
							},
							{
								"astId": 174,
								"contract": "Nebula-bridge-contracts/src/TokenBase.sol:TokenBase",
								"label": "wormhole",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWormhole)2948"
							},
							{
								"astId": 176,
								"contract": "Nebula-bridge-contracts/src/TokenBase.sol:TokenBase",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 180,
								"contract": "Nebula-bridge-contracts/src/TokenBase.sol:TokenBase",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_bytes32)"
							},
							{
								"astId": 1566,
								"contract": "Nebula-bridge-contracts/src/TokenBase.sol:TokenBase",
								"label": "tokenBridge",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ITokenBridge)2618"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(ITokenBridge)2618": {
								"encoding": "inplace",
								"label": "contract ITokenBridge",
								"numberOfBytes": "20"
							},
							"t_contract(IWormhole)2948": {
								"encoding": "inplace",
								"label": "contract IWormhole",
								"numberOfBytes": "20"
							},
							"t_contract(IWormholeRelayer)3382": {
								"encoding": "inplace",
								"label": "contract IWormholeRelayer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				},
				"TokenReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "NotAnEvmAddress",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "bytes[]",
									"name": "additionalVaas",
									"type": "bytes[]"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								},
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "receiveWormholeMessages",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridge",
							"outputs": [
								{
									"internalType": "contract ITokenBridge",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": "529dca32",
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"tokenBridge()": "c6328a46",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"NotAnEvmAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"additionalVaas\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"receiveWormholeMessages\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridge\",\"outputs\":[{\"internalType\":\"contract ITokenBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/TokenBase.sol\":\"TokenReceiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/lib.d.sol\":{\"keccak256\":\"0x2875da2b3be594eb327b762fb8e8580e50c9b1d2850065e38c5ad688d960bdfa\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://d074d6b0e3e77088e6d0bfc6957b4d6f8b86d94990be1da9aabbabb2785535db\",\"dweb:/ipfs/QmNa5Fk1mSnYpZhtmB65cM9gGQDCw8eyadAQpPKAQh96Aj\"]},\"Nebula-bridge-contracts/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"Nebula-bridge-contracts/src/CCTPAndTokenBase.sol\":{\"keccak256\":\"0x4c2b579e45cd567796c6639d4a1b7332e196343b2b0b351d4b2f1b7eb9a5de15\",\"urls\":[\"bzz-raw://ead29a9e0ccf4f0559c6aacf2dff6654b33e2a897c96b44c8a601d51a102e3b6\",\"dweb:/ipfs/QmQqiw27bAZUMZG2uMhSUnfxp9SVRpi25VGGnkTqw6MYEj\"]},\"Nebula-bridge-contracts/src/CCTPBase.sol\":{\"keccak256\":\"0xb0cb70d96d3c57421feca6842eab200246abcfcd1da1d53003449c9f517b9b36\",\"urls\":[\"bzz-raw://b12d2fa5425eaf7bfb6d5c7c2f949dbd50c11939f4636a64cd1b440ab4010999\",\"dweb:/ipfs/QmZZoGiQPRTCZtmjxsTzcd55wCkiriPiBPFU911XP3536i\"]},\"Nebula-bridge-contracts/src/TokenBase.sol\":{\"keccak256\":\"0x777830411b4b60c069cf4903158ef1997726180bc27a3fe2c07c38801c7d4003\",\"urls\":[\"bzz-raw://d75ad38857586f62b5c306a9882c145ae15c8fcffbd5f5ec7c40a677ddf58a7a\",\"dweb:/ipfs/QmVLnywxNvVibokZyCPn3n356drrQW7JgyEeuc9xtgtoQu\"]},\"Nebula-bridge-contracts/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"Nebula-bridge-contracts/src/WormholeRelayerSDK.sol\":{\"keccak256\":\"0x39b2a67c047941692c560b01198cfa5e24d326c11c23ae6b420571849ae80d0c\",\"urls\":[\"bzz-raw://37d655ea5d15012a32f05f08151d5cb597065b5af6102060c2f7836b32356e25\",\"dweb:/ipfs/QmYNenC57JECfqSmjnXa59yxkmPjTmSi6fh53XC343d3ru\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]},\"Nebula-bridge-contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"Nebula-bridge-contracts/src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0xad665028667c70a3663044b335e3a1d388da3018bf4720853adb9fa8f49a9342\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://d86e90b3ee0c951fe3169df0af0d1071fb073d506923ecfee4e51f3eef941919\",\"dweb:/ipfs/Qmdu9AjEp1JaD6KEwe5S5pxgnzii5QXFR2peApBNkhNTes\"]},\"Nebula-bridge-contracts/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xbb3a2b248ef78c421dd137e75236af605d4618acca294e8930a9ba1aed769c9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://e5402ba174843110d8ac66b1f7cc90d4dbc2d50996ed15165a64b093b33dfcd8\",\"dweb:/ipfs/QmfRtStHfFaQjSs5wocQmQEdosd6a5QmTP6rbB6ETqgmb4\"]},\"Nebula-bridge-contracts/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 171,
								"contract": "Nebula-bridge-contracts/src/TokenBase.sol:TokenReceiver",
								"label": "wormholeRelayer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWormholeRelayer)3382"
							},
							{
								"astId": 174,
								"contract": "Nebula-bridge-contracts/src/TokenBase.sol:TokenReceiver",
								"label": "wormhole",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWormhole)2948"
							},
							{
								"astId": 176,
								"contract": "Nebula-bridge-contracts/src/TokenBase.sol:TokenReceiver",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 180,
								"contract": "Nebula-bridge-contracts/src/TokenBase.sol:TokenReceiver",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_bytes32)"
							},
							{
								"astId": 1566,
								"contract": "Nebula-bridge-contracts/src/TokenBase.sol:TokenReceiver",
								"label": "tokenBridge",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ITokenBridge)2618"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(ITokenBridge)2618": {
								"encoding": "inplace",
								"label": "contract ITokenBridge",
								"numberOfBytes": "20"
							},
							"t_contract(IWormhole)2948": {
								"encoding": "inplace",
								"label": "contract IWormhole",
								"numberOfBytes": "20"
							},
							"t_contract(IWormholeRelayer)3382": {
								"encoding": "inplace",
								"label": "contract IWormholeRelayer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				},
				"TokenSender": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								}
							],
							"name": "setRegisteredSender",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenBridge",
							"outputs": [
								{
									"internalType": "contract ITokenBridge",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormholeRelayer",
							"outputs": [
								{
									"internalType": "contract IWormholeRelayer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"setRegisteredSender(uint16,bytes32)": "dd12d68b",
							"tokenBridge()": "c6328a46",
							"wormhole()": "84acd1bb",
							"wormholeRelayer()": "da25b725"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"}],\"name\":\"setRegisteredSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBridge\",\"outputs\":[{\"internalType\":\"contract ITokenBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormholeRelayer\",\"outputs\":[{\"internalType\":\"contract IWormholeRelayer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setRegisteredSender(uint16,bytes32)\":{\"notice\":\"Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/TokenBase.sol\":\"TokenSender\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/lib.d.sol\":{\"keccak256\":\"0x2875da2b3be594eb327b762fb8e8580e50c9b1d2850065e38c5ad688d960bdfa\",\"license\":\"Unlicensed\",\"urls\":[\"bzz-raw://d074d6b0e3e77088e6d0bfc6957b4d6f8b86d94990be1da9aabbabb2785535db\",\"dweb:/ipfs/QmNa5Fk1mSnYpZhtmB65cM9gGQDCw8eyadAQpPKAQh96Aj\"]},\"Nebula-bridge-contracts/src/Base.sol\":{\"keccak256\":\"0x249d3dcd47a4f9183fa6aff8f1c75956cf54c217481177725ff2fd93f49c59c3\",\"urls\":[\"bzz-raw://aa0ceb0ac96ace95d5bbfc369577baec10d02ba33b514d10b868b8f48c2e0b0a\",\"dweb:/ipfs/QmWPeQGpcu7SvzHmEnLybwJ6pGwzARKDpQYxVRbopRHK1o\"]},\"Nebula-bridge-contracts/src/CCTPAndTokenBase.sol\":{\"keccak256\":\"0x4c2b579e45cd567796c6639d4a1b7332e196343b2b0b351d4b2f1b7eb9a5de15\",\"urls\":[\"bzz-raw://ead29a9e0ccf4f0559c6aacf2dff6654b33e2a897c96b44c8a601d51a102e3b6\",\"dweb:/ipfs/QmQqiw27bAZUMZG2uMhSUnfxp9SVRpi25VGGnkTqw6MYEj\"]},\"Nebula-bridge-contracts/src/CCTPBase.sol\":{\"keccak256\":\"0xb0cb70d96d3c57421feca6842eab200246abcfcd1da1d53003449c9f517b9b36\",\"urls\":[\"bzz-raw://b12d2fa5425eaf7bfb6d5c7c2f949dbd50c11939f4636a64cd1b440ab4010999\",\"dweb:/ipfs/QmZZoGiQPRTCZtmjxsTzcd55wCkiriPiBPFU911XP3536i\"]},\"Nebula-bridge-contracts/src/TokenBase.sol\":{\"keccak256\":\"0x777830411b4b60c069cf4903158ef1997726180bc27a3fe2c07c38801c7d4003\",\"urls\":[\"bzz-raw://d75ad38857586f62b5c306a9882c145ae15c8fcffbd5f5ec7c40a677ddf58a7a\",\"dweb:/ipfs/QmVLnywxNvVibokZyCPn3n356drrQW7JgyEeuc9xtgtoQu\"]},\"Nebula-bridge-contracts/src/Utils.sol\":{\"keccak256\":\"0x2cfbe9804905a7ed86586add8316eed5b56421ed9d06637638448c19d85a9b0c\",\"urls\":[\"bzz-raw://abf5bf5f020206721a087d5c184fe7184d1f6709f98aca9fd8222e5c73a5d659\",\"dweb:/ipfs/QmdjQPtSXYgvEWRb74C5Tg56961PbmkvRo2NdUFPqLTdBB\"]},\"Nebula-bridge-contracts/src/WormholeRelayerSDK.sol\":{\"keccak256\":\"0x39b2a67c047941692c560b01198cfa5e24d326c11c23ae6b420571849ae80d0c\",\"urls\":[\"bzz-raw://37d655ea5d15012a32f05f08151d5cb597065b5af6102060c2f7836b32356e25\",\"dweb:/ipfs/QmYNenC57JECfqSmjnXa59yxkmPjTmSi6fh53XC343d3ru\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]},\"Nebula-bridge-contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"Nebula-bridge-contracts/src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0xad665028667c70a3663044b335e3a1d388da3018bf4720853adb9fa8f49a9342\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://d86e90b3ee0c951fe3169df0af0d1071fb073d506923ecfee4e51f3eef941919\",\"dweb:/ipfs/Qmdu9AjEp1JaD6KEwe5S5pxgnzii5QXFR2peApBNkhNTes\"]},\"Nebula-bridge-contracts/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xbb3a2b248ef78c421dd137e75236af605d4618acca294e8930a9ba1aed769c9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://e5402ba174843110d8ac66b1f7cc90d4dbc2d50996ed15165a64b093b33dfcd8\",\"dweb:/ipfs/QmfRtStHfFaQjSs5wocQmQEdosd6a5QmTP6rbB6ETqgmb4\"]},\"Nebula-bridge-contracts/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]},\"Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]},\"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 171,
								"contract": "Nebula-bridge-contracts/src/TokenBase.sol:TokenSender",
								"label": "wormholeRelayer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWormholeRelayer)3382"
							},
							{
								"astId": 174,
								"contract": "Nebula-bridge-contracts/src/TokenBase.sol:TokenSender",
								"label": "wormhole",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWormhole)2948"
							},
							{
								"astId": 176,
								"contract": "Nebula-bridge-contracts/src/TokenBase.sol:TokenSender",
								"label": "registrationOwner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 180,
								"contract": "Nebula-bridge-contracts/src/TokenBase.sol:TokenSender",
								"label": "registeredSenders",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint16,t_bytes32)"
							},
							{
								"astId": 1566,
								"contract": "Nebula-bridge-contracts/src/TokenBase.sol:TokenSender",
								"label": "tokenBridge",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ITokenBridge)2618"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(ITokenBridge)2618": {
								"encoding": "inplace",
								"label": "contract ITokenBridge",
								"numberOfBytes": "20"
							},
							"t_contract(IWormhole)2948": {
								"encoding": "inplace",
								"label": "contract IWormhole",
								"numberOfBytes": "20"
							},
							"t_contract(IWormholeRelayer)3382": {
								"encoding": "inplace",
								"label": "contract IWormholeRelayer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint16,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint16",
								"label": "mapping(uint16 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setRegisteredSender(uint16,bytes32)": {
								"notice": "Sets the registered address for 'sourceChain' to 'sourceAddress' So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid Assumes only one sender per chain is valid Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
							}
						},
						"version": 1
					}
				}
			},
			"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol": {
				"IMessageTransmitter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "message",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "receiveMessage",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "originalMessage",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "originalAttestation",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "newMessageBody",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "newDestinationCaller",
									"type": "bytes32"
								}
							],
							"name": "replaceMessage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "destinationDomain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "messageBody",
									"type": "bytes"
								}
							],
							"name": "sendMessage",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "destinationDomain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "destinationCaller",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "messageBody",
									"type": "bytes"
								}
							],
							"name": "sendMessageWithCaller",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"receiveMessage(bytes,bytes)": {
								"params": {
									"message": "The message raw bytes",
									"signature": "The message signature"
								},
								"returns": {
									"success": "bool, true if successful"
								}
							},
							"replaceMessage(bytes,bytes,bytes,bytes32)": {
								"details": "The `originalAttestation` must be a valid attestation of `originalMessage`.",
								"params": {
									"newDestinationCaller": "the new destination caller",
									"newMessageBody": "new message body of replaced message",
									"originalAttestation": "attestation of `originalMessage`",
									"originalMessage": "original message to replace"
								}
							},
							"sendMessage(uint32,bytes32,bytes)": {
								"details": "Increment nonce, format the message, and emit `MessageSent` event with message information.",
								"params": {
									"destinationDomain": "Domain of destination chain",
									"messageBody": "Raw bytes content of message",
									"recipient": "Address of message recipient on destination domain as bytes32"
								},
								"returns": {
									"_0": "nonce reserved by message"
								}
							},
							"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)": {
								"details": "Increment nonce, format the message, and emit `MessageSent` event with message information. WARNING: if the `destinationCaller` does not represent a valid address as bytes32, then it will not be possible to broadcast the message on the destination domain. This is an advanced feature, and the standard sendMessage() should be preferred for use cases where a specific destination caller is not required.",
								"params": {
									"destinationCaller": "caller on the destination domain, as bytes32",
									"destinationDomain": "Domain of destination chain",
									"messageBody": "Raw bytes content of message",
									"recipient": "Address of message recipient on destination domain as bytes32"
								},
								"returns": {
									"_0": "nonce reserved by message"
								}
							}
						},
						"title": "IMessageTransmitter",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"receiveMessage(bytes,bytes)": "57ecfd28",
							"replaceMessage(bytes,bytes,bytes,bytes32)": "b857b774",
							"sendMessage(uint32,bytes32,bytes)": "0ba469bc",
							"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)": "f7259a75"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"receiveMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"originalMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"originalAttestation\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"newMessageBody\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"newDestinationCaller\",\"type\":\"bytes32\"}],\"name\":\"replaceMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"name\":\"sendMessage\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"destinationCaller\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"name\":\"sendMessageWithCaller\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveMessage(bytes,bytes)\":{\"params\":{\"message\":\"The message raw bytes\",\"signature\":\"The message signature\"},\"returns\":{\"success\":\"bool, true if successful\"}},\"replaceMessage(bytes,bytes,bytes,bytes32)\":{\"details\":\"The `originalAttestation` must be a valid attestation of `originalMessage`.\",\"params\":{\"newDestinationCaller\":\"the new destination caller\",\"newMessageBody\":\"new message body of replaced message\",\"originalAttestation\":\"attestation of `originalMessage`\",\"originalMessage\":\"original message to replace\"}},\"sendMessage(uint32,bytes32,bytes)\":{\"details\":\"Increment nonce, format the message, and emit `MessageSent` event with message information.\",\"params\":{\"destinationDomain\":\"Domain of destination chain\",\"messageBody\":\"Raw bytes content of message\",\"recipient\":\"Address of message recipient on destination domain as bytes32\"},\"returns\":{\"_0\":\"nonce reserved by message\"}},\"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)\":{\"details\":\"Increment nonce, format the message, and emit `MessageSent` event with message information. WARNING: if the `destinationCaller` does not represent a valid address as bytes32, then it will not be possible to broadcast the message on the destination domain. This is an advanced feature, and the standard sendMessage() should be preferred for use cases where a specific destination caller is not required.\",\"params\":{\"destinationCaller\":\"caller on the destination domain, as bytes32\",\"destinationDomain\":\"Domain of destination chain\",\"messageBody\":\"Raw bytes content of message\",\"recipient\":\"Address of message recipient on destination domain as bytes32\"},\"returns\":{\"_0\":\"nonce reserved by message\"}}},\"title\":\"IMessageTransmitter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiveMessage(bytes,bytes)\":{\"notice\":\"Receives an incoming message, validating the header and passing the body to application-specific handler.\"},\"replaceMessage(bytes,bytes,bytes,bytes32)\":{\"notice\":\"Replace a message with a new message body and/or destination caller.\"},\"sendMessage(uint32,bytes32,bytes)\":{\"notice\":\"Sends an outgoing message from the source domain.\"},\"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)\":{\"notice\":\"Sends an outgoing message from the source domain, with a specified caller on the destination domain.\"}},\"notice\":\"Interface for message transmitters, which both relay and receive messages.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":\"IMessageTransmitter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\":{\"keccak256\":\"0xc1551a0378325853216cc7e5f3ab22954cb0b411b83221a66e92a36c19442c47\",\"urls\":[\"bzz-raw://ff2d7c07ee8da54cdadbac59fcfe959b5409918ff1ed9ff068f35c728d581dc1\",\"dweb:/ipfs/QmYuDBQxHYbwAbUQcGT6kRqTnSfatcAhXEWBXJfm3ghBsg\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]},\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"receiveMessage(bytes,bytes)": {
								"notice": "Receives an incoming message, validating the header and passing the body to application-specific handler."
							},
							"replaceMessage(bytes,bytes,bytes,bytes32)": {
								"notice": "Replace a message with a new message body and/or destination caller."
							},
							"sendMessage(uint32,bytes32,bytes)": {
								"notice": "Sends an outgoing message from the source domain."
							},
							"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)": {
								"notice": "Sends an outgoing message from the source domain, with a specified caller on the destination domain."
							}
						},
						"notice": "Interface for message transmitters, which both relay and receive messages.",
						"version": 1
					}
				}
			},
			"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol": {
				"IReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "message",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "receiveMessage",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"receiveMessage(bytes,bytes)": {
								"params": {
									"message": "The message raw bytes",
									"signature": "The message signature"
								},
								"returns": {
									"success": "bool, true if successful"
								}
							}
						},
						"title": "IReceiver",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"receiveMessage(bytes,bytes)": "57ecfd28"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"receiveMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveMessage(bytes,bytes)\":{\"params\":{\"message\":\"The message raw bytes\",\"signature\":\"The message signature\"},\"returns\":{\"success\":\"bool, true if successful\"}}},\"title\":\"IReceiver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiveMessage(bytes,bytes)\":{\"notice\":\"Receives an incoming message, validating the header and passing the body to application-specific handler.\"}},\"notice\":\"Receives messages on destination chain and forwards them to IMessageDestinationHandler\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol\":\"IReceiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol\":{\"keccak256\":\"0xc0e1ae6b294cd6f6b2ce6185f4856a54c3f8b66f07cc0944b923db44efa8b286\",\"urls\":[\"bzz-raw://ac7be5f0311f28a5e830f806bcf69e566e72b18491c5ad126464ceb9fd31dc55\",\"dweb:/ipfs/QmaKSBuABhRzF3t51yHKb9jVzzia9Y5gNFfS4u4reSMkLD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"receiveMessage(bytes,bytes)": {
								"notice": "Receives an incoming message, validating the header and passing the body to application-specific handler."
							}
						},
						"notice": "Receives messages on destination chain and forwards them to IMessageDestinationHandler",
						"version": 1
					}
				}
			},
			"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol": {
				"IRelayer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "originalMessage",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "originalAttestation",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "newMessageBody",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "newDestinationCaller",
									"type": "bytes32"
								}
							],
							"name": "replaceMessage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "destinationDomain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "messageBody",
									"type": "bytes"
								}
							],
							"name": "sendMessage",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "destinationDomain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "destinationCaller",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "messageBody",
									"type": "bytes"
								}
							],
							"name": "sendMessageWithCaller",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"replaceMessage(bytes,bytes,bytes,bytes32)": {
								"details": "The `originalAttestation` must be a valid attestation of `originalMessage`.",
								"params": {
									"newDestinationCaller": "the new destination caller",
									"newMessageBody": "new message body of replaced message",
									"originalAttestation": "attestation of `originalMessage`",
									"originalMessage": "original message to replace"
								}
							},
							"sendMessage(uint32,bytes32,bytes)": {
								"details": "Increment nonce, format the message, and emit `MessageSent` event with message information.",
								"params": {
									"destinationDomain": "Domain of destination chain",
									"messageBody": "Raw bytes content of message",
									"recipient": "Address of message recipient on destination domain as bytes32"
								},
								"returns": {
									"_0": "nonce reserved by message"
								}
							},
							"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)": {
								"details": "Increment nonce, format the message, and emit `MessageSent` event with message information. WARNING: if the `destinationCaller` does not represent a valid address as bytes32, then it will not be possible to broadcast the message on the destination domain. This is an advanced feature, and the standard sendMessage() should be preferred for use cases where a specific destination caller is not required.",
								"params": {
									"destinationCaller": "caller on the destination domain, as bytes32",
									"destinationDomain": "Domain of destination chain",
									"messageBody": "Raw bytes content of message",
									"recipient": "Address of message recipient on destination domain as bytes32"
								},
								"returns": {
									"_0": "nonce reserved by message"
								}
							}
						},
						"title": "IRelayer",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"replaceMessage(bytes,bytes,bytes,bytes32)": "b857b774",
							"sendMessage(uint32,bytes32,bytes)": "0ba469bc",
							"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)": "f7259a75"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"originalMessage\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"originalAttestation\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"newMessageBody\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"newDestinationCaller\",\"type\":\"bytes32\"}],\"name\":\"replaceMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"name\":\"sendMessage\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"destinationCaller\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"name\":\"sendMessageWithCaller\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"replaceMessage(bytes,bytes,bytes,bytes32)\":{\"details\":\"The `originalAttestation` must be a valid attestation of `originalMessage`.\",\"params\":{\"newDestinationCaller\":\"the new destination caller\",\"newMessageBody\":\"new message body of replaced message\",\"originalAttestation\":\"attestation of `originalMessage`\",\"originalMessage\":\"original message to replace\"}},\"sendMessage(uint32,bytes32,bytes)\":{\"details\":\"Increment nonce, format the message, and emit `MessageSent` event with message information.\",\"params\":{\"destinationDomain\":\"Domain of destination chain\",\"messageBody\":\"Raw bytes content of message\",\"recipient\":\"Address of message recipient on destination domain as bytes32\"},\"returns\":{\"_0\":\"nonce reserved by message\"}},\"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)\":{\"details\":\"Increment nonce, format the message, and emit `MessageSent` event with message information. WARNING: if the `destinationCaller` does not represent a valid address as bytes32, then it will not be possible to broadcast the message on the destination domain. This is an advanced feature, and the standard sendMessage() should be preferred for use cases where a specific destination caller is not required.\",\"params\":{\"destinationCaller\":\"caller on the destination domain, as bytes32\",\"destinationDomain\":\"Domain of destination chain\",\"messageBody\":\"Raw bytes content of message\",\"recipient\":\"Address of message recipient on destination domain as bytes32\"},\"returns\":{\"_0\":\"nonce reserved by message\"}}},\"title\":\"IRelayer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"replaceMessage(bytes,bytes,bytes,bytes32)\":{\"notice\":\"Replace a message with a new message body and/or destination caller.\"},\"sendMessage(uint32,bytes32,bytes)\":{\"notice\":\"Sends an outgoing message from the source domain.\"},\"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)\":{\"notice\":\"Sends an outgoing message from the source domain, with a specified caller on the destination domain.\"}},\"notice\":\"Sends messages from source domain to destination domain\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol\":\"IRelayer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol\":{\"keccak256\":\"0x5772f5f420a80b366754817089d56e12b504535deeedfad4e7403f3ca508ead0\",\"urls\":[\"bzz-raw://d9aaa08e6fdfd5253000ef7644f5fb7e9ed7a18ebb0989731bf828b4b5b44a1e\",\"dweb:/ipfs/QmNvipZ7DM8XvmYRfr8nD9MyvoqAdQDQjM9wiqfZnDbWtN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"replaceMessage(bytes,bytes,bytes,bytes32)": {
								"notice": "Replace a message with a new message body and/or destination caller."
							},
							"sendMessage(uint32,bytes32,bytes)": {
								"notice": "Sends an outgoing message from the source domain."
							},
							"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)": {
								"notice": "Sends an outgoing message from the source domain, with a specified caller on the destination domain."
							}
						},
						"notice": "Sends messages from source domain to destination domain",
						"version": 1
					}
				}
			},
			"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol": {
				"ITokenMessenger": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "destinationDomain",
									"type": "uint32"
								},
								{
									"internalType": "bytes32",
									"name": "mintRecipient",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "burnToken",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "destinationCaller",
									"type": "bytes32"
								}
							],
							"name": "depositForBurnWithCaller",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "nonce",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"depositForBurnWithCaller(uint256,uint32,bytes32,address,bytes32)": {
								"details": "reverts if: - given destinationCaller is zero address - given burnToken is not supported - given destinationDomain has no TokenMessenger registered - transferFrom() reverts. For example, if sender's burnToken balance or approved allowance to this contract is less than `amount`. - burn() reverts. For example, if `amount` is 0. - MessageTransmitter returns false or reverts.",
								"params": {
									"amount": "amount of tokens to burn",
									"burnToken": "address of contract to burn deposited tokens, on local domain",
									"destinationCaller": "caller on the destination domain, as bytes32",
									"destinationDomain": "destination domain",
									"mintRecipient": "address of mint recipient on destination domain"
								},
								"returns": {
									"nonce": "unique nonce reserved by message"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"depositForBurnWithCaller(uint256,uint32,bytes32,address,bytes32)": "f856ddb6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"mintRecipient\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"burnToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"destinationCaller\",\"type\":\"bytes32\"}],\"name\":\"depositForBurnWithCaller\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"depositForBurnWithCaller(uint256,uint32,bytes32,address,bytes32)\":{\"details\":\"reverts if: - given destinationCaller is zero address - given burnToken is not supported - given destinationDomain has no TokenMessenger registered - transferFrom() reverts. For example, if sender's burnToken balance or approved allowance to this contract is less than `amount`. - burn() reverts. For example, if `amount` is 0. - MessageTransmitter returns false or reverts.\",\"params\":{\"amount\":\"amount of tokens to burn\",\"burnToken\":\"address of contract to burn deposited tokens, on local domain\",\"destinationCaller\":\"caller on the destination domain, as bytes32\",\"destinationDomain\":\"destination domain\",\"mintRecipient\":\"address of mint recipient on destination domain\"},\"returns\":{\"nonce\":\"unique nonce reserved by message\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"depositForBurnWithCaller(uint256,uint32,bytes32,address,bytes32)\":{\"notice\":\"Deposits and burns tokens from sender to be minted on destination domain. The mint on the destination domain must be called by `destinationCaller`. WARNING: if the `destinationCaller` does not represent a valid address as bytes32, then it will not be possible to broadcast the message on the destination domain. This is an advanced feature, and the standard depositForBurn() should be preferred for use cases where a specific destination caller is not required. Emits a `DepositForBurn` event.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":\"ITokenMessenger\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\":{\"keccak256\":\"0x2ab7696fa8b684863a088ded6251035a87a288737f6621730991a38dc303236c\",\"urls\":[\"bzz-raw://c47386479f378b8da3eb6c5254dd31b6657986c0fb668d27512a9cd8403cf562\",\"dweb:/ipfs/QmUWQ95zVef9LHUfG4iurtjurVfW2TdQB7m41NopaQNNgY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"depositForBurnWithCaller(uint256,uint32,bytes32,address,bytes32)": {
								"notice": "Deposits and burns tokens from sender to be minted on destination domain. The mint on the destination domain must be called by `destinationCaller`. WARNING: if the `destinationCaller` does not represent a valid address as bytes32, then it will not be possible to broadcast the message on the destination domain. This is an advanced feature, and the standard depositForBurn() should be preferred for use cases where a specific destination caller is not required. Emits a `DepositForBurn` event."
							}
						},
						"version": 1
					}
				}
			},
			"Nebula-bridge-contracts/src/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Nebula-bridge-contracts/src/interfaces/ITokenBridge.sol": {
				"ITokenBridge": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newContract",
									"type": "address"
								}
							],
							"name": "ContractUpgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "contract IWETH",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "_parseTransferCommon",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "to",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "toChain",
											"type": "uint16"
										},
										{
											"internalType": "uint256",
											"name": "fee",
											"type": "uint256"
										}
									],
									"internalType": "struct ITokenBridge.Transfer",
									"name": "transfer",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								}
							],
							"name": "attestToken",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "chainId_",
									"type": "uint16"
								}
							],
							"name": "bridgeContracts",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "chainId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "completeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "completeTransferAndUnwrapETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "completeTransferAndUnwrapETHWithPayload",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "completeTransferWithPayload",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "createWrapped",
							"outputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "symbol",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "name",
											"type": "bytes32"
										}
									],
									"internalType": "struct ITokenBridge.AssetMeta",
									"name": "meta",
									"type": "tuple"
								}
							],
							"name": "encodeAssetMeta",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "to",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "toChain",
											"type": "uint16"
										},
										{
											"internalType": "uint256",
											"name": "fee",
											"type": "uint256"
										}
									],
									"internalType": "struct ITokenBridge.Transfer",
									"name": "transfer",
									"type": "tuple"
								}
							],
							"name": "encodeTransfer",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "to",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "toChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "fromAddress",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "payload",
											"type": "bytes"
										}
									],
									"internalType": "struct ITokenBridge.TransferWithPayload",
									"name": "transfer",
									"type": "tuple"
								}
							],
							"name": "encodeTransferWithPayload",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "evmChainId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finality",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								}
							],
							"name": "governanceActionIsConsumed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceChainId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceContract",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isFork",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "impl",
									"type": "address"
								}
							],
							"name": "isInitialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								}
							],
							"name": "isTransferCompleted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "isWrappedAsset",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "outstandingBridged",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parseAssetMeta",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "uint8",
											"name": "decimals",
											"type": "uint8"
										},
										{
											"internalType": "bytes32",
											"name": "symbol",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "name",
											"type": "bytes32"
										}
									],
									"internalType": "struct ITokenBridge.AssetMeta",
									"name": "meta",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parsePayloadID",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "payloadID",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedRecoverChainId",
									"type": "bytes"
								}
							],
							"name": "parseRecoverChainId",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "evmChainId",
											"type": "uint256"
										},
										{
											"internalType": "uint16",
											"name": "newChainId",
											"type": "uint16"
										}
									],
									"internalType": "struct ITokenBridge.RecoverChainId",
									"name": "rci",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parseRegisterChain",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "uint16",
											"name": "emitterChainID",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										}
									],
									"internalType": "struct ITokenBridge.RegisterChain",
									"name": "chain",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parseTransfer",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "to",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "toChain",
											"type": "uint16"
										},
										{
											"internalType": "uint256",
											"name": "fee",
											"type": "uint256"
										}
									],
									"internalType": "struct ITokenBridge.Transfer",
									"name": "transfer",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parseTransferWithPayload",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "payloadID",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "tokenAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "tokenChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "to",
											"type": "bytes32"
										},
										{
											"internalType": "uint16",
											"name": "toChain",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "fromAddress",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "payload",
											"type": "bytes"
										}
									],
									"internalType": "struct ITokenBridge.TransferWithPayload",
									"name": "transfer",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encoded",
									"type": "bytes"
								}
							],
							"name": "parseUpgrade",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "newContract",
											"type": "bytes32"
										}
									],
									"internalType": "struct ITokenBridge.UpgradeContract",
									"name": "chain",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVM",
									"type": "bytes"
								}
							],
							"name": "registerChain",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVM",
									"type": "bytes"
								}
							],
							"name": "submitRecoverChainId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenImplementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "recipientChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "arbiterFee",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								}
							],
							"name": "transferTokens",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "recipientChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								}
							],
							"name": "transferTokensWithPayload",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVm",
									"type": "bytes"
								}
							],
							"name": "updateWrapped",
							"outputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVM",
									"type": "bytes"
								}
							],
							"name": "upgrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wormhole",
							"outputs": [
								{
									"internalType": "contract IWormhole",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "recipientChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "arbiterFee",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								}
							],
							"name": "wrapAndTransferETH",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "recipientChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "recipient",
									"type": "bytes32"
								},
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								}
							],
							"name": "wrapAndTransferETHWithPayload",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "tokenChainId",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "tokenAddress",
									"type": "bytes32"
								}
							],
							"name": "wrappedAsset",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"_parseTransferCommon(bytes)": "e89bc401",
							"attestToken(address,uint32)": "c48fa115",
							"bridgeContracts(uint16)": "ad66a5f1",
							"chainId()": "9a8a0592",
							"completeTransfer(bytes)": "c6878519",
							"completeTransferAndUnwrapETH(bytes)": "ff200cde",
							"completeTransferAndUnwrapETHWithPayload(bytes)": "1c8475e4",
							"completeTransferWithPayload(bytes)": "c3f511c1",
							"createWrapped(bytes)": "e8059810",
							"encodeAssetMeta((uint8,bytes32,uint16,uint8,bytes32,bytes32))": "b046223b",
							"encodeTransfer((uint8,uint256,bytes32,uint16,bytes32,uint16,uint256))": "5f854266",
							"encodeTransferWithPayload((uint8,uint256,bytes32,uint16,bytes32,uint16,bytes32,bytes))": "d56e2e24",
							"evmChainId()": "64d42b17",
							"finality()": "739fc8d1",
							"governanceActionIsConsumed(bytes32)": "2c3c02a4",
							"governanceChainId()": "fbe3c2cd",
							"governanceContract()": "b172b222",
							"implementation()": "5c60da1b",
							"initialize()": "8129fc1c",
							"isFork()": "e039f224",
							"isInitialized(address)": "d60b347f",
							"isTransferCompleted(bytes32)": "aa4efa5b",
							"isWrappedAsset(address)": "1a2be4da",
							"outstandingBridged(address)": "b96c7e4d",
							"parseAssetMeta(bytes)": "07dfd8fb",
							"parsePayloadID(bytes)": "0f509008",
							"parseRecoverChainId(bytes)": "cb4cfea8",
							"parseRegisterChain(bytes)": "01f53255",
							"parseTransfer(bytes)": "2b511375",
							"parseTransferWithPayload(bytes)": "ea63738d",
							"parseUpgrade(bytes)": "fbeeacd9",
							"registerChain(bytes)": "a5799f93",
							"submitRecoverChainId(bytes)": "178149e7",
							"tokenImplementation()": "2f3a3d5d",
							"transferTokens(address,uint256,uint16,bytes32,uint256,uint32)": "0f5287b0",
							"transferTokensWithPayload(address,uint256,uint16,bytes32,uint32,bytes)": "c5a5ebda",
							"updateWrapped(bytes)": "f768441f",
							"upgrade(bytes)": "25394645",
							"wormhole()": "84acd1bb",
							"wrapAndTransferETH(uint16,bytes32,uint256,uint32)": "9981509f",
							"wrapAndTransferETHWithPayload(uint16,bytes32,uint32,bytes)": "bee9cdfc",
							"wrappedAsset(uint16,bytes32)": "1ff1e286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractUpgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"contract IWETH\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"_parseTransferCommon\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"toChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBridge.Transfer\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"attestToken\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId_\",\"type\":\"uint16\"}],\"name\":\"bridgeContracts\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"completeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"completeTransferAndUnwrapETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"completeTransferAndUnwrapETHWithPayload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"completeTransferWithPayload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"createWrapped\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"symbol\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"internalType\":\"struct ITokenBridge.AssetMeta\",\"name\":\"meta\",\"type\":\"tuple\"}],\"name\":\"encodeAssetMeta\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"toChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBridge.Transfer\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"name\":\"encodeTransfer\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"toChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"fromAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct ITokenBridge.TransferWithPayload\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"name\":\"encodeTransferWithPayload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"evmChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finality\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"governanceActionIsConsumed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFork\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"isTransferCompleted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isWrappedAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"outstandingBridged\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parseAssetMeta\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"symbol\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"}],\"internalType\":\"struct ITokenBridge.AssetMeta\",\"name\":\"meta\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parsePayloadID\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedRecoverChainId\",\"type\":\"bytes\"}],\"name\":\"parseRecoverChainId\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"evmChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"newChainId\",\"type\":\"uint16\"}],\"internalType\":\"struct ITokenBridge.RecoverChainId\",\"name\":\"rci\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parseRegisterChain\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"emitterChainID\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"}],\"internalType\":\"struct ITokenBridge.RegisterChain\",\"name\":\"chain\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parseTransfer\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"toChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"internalType\":\"struct ITokenBridge.Transfer\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parseTransferWithPayload\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"toChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"fromAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct ITokenBridge.TransferWithPayload\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parseUpgrade\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"newContract\",\"type\":\"bytes32\"}],\"internalType\":\"struct ITokenBridge.UpgradeContract\",\"name\":\"chain\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"registerChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"submitRecoverChainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"arbiterFee\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"transferTokens\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"transferTokensWithPayload\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"updateWrapped\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wormhole\",\"outputs\":[{\"internalType\":\"contract IWormhole\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"arbiterFee\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"}],\"name\":\"wrapAndTransferETH\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"wrapAndTransferETHWithPayload\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"tokenChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"}],\"name\":\"wrappedAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/interfaces/ITokenBridge.sol\":\"ITokenBridge\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"Nebula-bridge-contracts/src/interfaces/ITokenBridge.sol\":{\"keccak256\":\"0xad665028667c70a3663044b335e3a1d388da3018bf4720853adb9fa8f49a9342\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://d86e90b3ee0c951fe3169df0af0d1071fb073d506923ecfee4e51f3eef941919\",\"dweb:/ipfs/Qmdu9AjEp1JaD6KEwe5S5pxgnzii5QXFR2peApBNkhNTes\"]},\"Nebula-bridge-contracts/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xbb3a2b248ef78c421dd137e75236af605d4618acca294e8930a9ba1aed769c9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://e5402ba174843110d8ac66b1f7cc90d4dbc2d50996ed15165a64b093b33dfcd8\",\"dweb:/ipfs/QmfRtStHfFaQjSs5wocQmQEdosd6a5QmTP6rbB6ETqgmb4\"]},\"Nebula-bridge-contracts/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Nebula-bridge-contracts/src/interfaces/IWETH.sol": {
				"IWETH": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"deposit()": "d0e30db0",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/interfaces/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x206e252911fb60d0d6a54fb657b64344c33fa237ddb8553aa668a24d1856a7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb73e8c2fd4ab43f4ed672a19fd7629fc169034dc461524bebd67d9fe9bb000\",\"dweb:/ipfs/Qmd9wCoy5gDduquSq7po6uNFx9W28zS5drXXErDnN24aNZ\"]},\"Nebula-bridge-contracts/src/interfaces/IWETH.sol\":{\"keccak256\":\"0xbb3a2b248ef78c421dd137e75236af605d4618acca294e8930a9ba1aed769c9e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://e5402ba174843110d8ac66b1f7cc90d4dbc2d50996ed15165a64b093b33dfcd8\",\"dweb:/ipfs/QmfRtStHfFaQjSs5wocQmQEdosd6a5QmTP6rbB6ETqgmb4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Nebula-bridge-contracts/src/interfaces/IWormhole.sol": {
				"IWormhole": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newContract",
									"type": "address"
								}
							],
							"name": "ContractUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint32",
									"name": "index",
									"type": "uint32"
								}
							],
							"name": "GuardianSetAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "LogMessagePublished",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "chainId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "evmChainId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentGuardianSetIndex",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "index",
									"type": "uint32"
								}
							],
							"name": "getGuardianSet",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address[]",
											"name": "keys",
											"type": "address[]"
										},
										{
											"internalType": "uint32",
											"name": "expirationTime",
											"type": "uint32"
										}
									],
									"internalType": "struct IWormhole.GuardianSet",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getGuardianSetExpiry",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								}
							],
							"name": "governanceActionIsConsumed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceChainId",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceContract",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isFork",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "impl",
									"type": "address"
								}
							],
							"name": "isInitialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "messageFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "emitter",
									"type": "address"
								}
							],
							"name": "nextSequence",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVM",
									"type": "bytes"
								}
							],
							"name": "parseAndVerifyVM",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "version",
											"type": "uint8"
										},
										{
											"internalType": "uint32",
											"name": "timestamp",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "nonce",
											"type": "uint32"
										},
										{
											"internalType": "uint16",
											"name": "emitterChainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										},
										{
											"internalType": "uint8",
											"name": "consistencyLevel",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "payload",
											"type": "bytes"
										},
										{
											"internalType": "uint32",
											"name": "guardianSetIndex",
											"type": "uint32"
										},
										{
											"components": [
												{
													"internalType": "bytes32",
													"name": "r",
													"type": "bytes32"
												},
												{
													"internalType": "bytes32",
													"name": "s",
													"type": "bytes32"
												},
												{
													"internalType": "uint8",
													"name": "v",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "guardianIndex",
													"type": "uint8"
												}
											],
											"internalType": "struct IWormhole.Signature[]",
											"name": "signatures",
											"type": "tuple[]"
										},
										{
											"internalType": "bytes32",
											"name": "hash",
											"type": "bytes32"
										}
									],
									"internalType": "struct IWormhole.VM",
									"name": "vm",
									"type": "tuple"
								},
								{
									"internalType": "bool",
									"name": "valid",
									"type": "bool"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedUpgrade",
									"type": "bytes"
								}
							],
							"name": "parseContractUpgrade",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint16",
											"name": "chain",
											"type": "uint16"
										},
										{
											"internalType": "address",
											"name": "newContract",
											"type": "address"
										}
									],
									"internalType": "struct IWormhole.ContractUpgrade",
									"name": "cu",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedUpgrade",
									"type": "bytes"
								}
							],
							"name": "parseGuardianSetUpgrade",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint16",
											"name": "chain",
											"type": "uint16"
										},
										{
											"components": [
												{
													"internalType": "address[]",
													"name": "keys",
													"type": "address[]"
												},
												{
													"internalType": "uint32",
													"name": "expirationTime",
													"type": "uint32"
												}
											],
											"internalType": "struct IWormhole.GuardianSet",
											"name": "newGuardianSet",
											"type": "tuple"
										},
										{
											"internalType": "uint32",
											"name": "newGuardianSetIndex",
											"type": "uint32"
										}
									],
									"internalType": "struct IWormhole.GuardianSetUpgrade",
									"name": "gsu",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedRecoverChainId",
									"type": "bytes"
								}
							],
							"name": "parseRecoverChainId",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "evmChainId",
											"type": "uint256"
										},
										{
											"internalType": "uint16",
											"name": "newChainId",
											"type": "uint16"
										}
									],
									"internalType": "struct IWormhole.RecoverChainId",
									"name": "rci",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedSetMessageFee",
									"type": "bytes"
								}
							],
							"name": "parseSetMessageFee",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint16",
											"name": "chain",
											"type": "uint16"
										},
										{
											"internalType": "uint256",
											"name": "messageFee",
											"type": "uint256"
										}
									],
									"internalType": "struct IWormhole.SetMessageFee",
									"name": "smf",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedTransferFees",
									"type": "bytes"
								}
							],
							"name": "parseTransferFees",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "module",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "uint16",
											"name": "chain",
											"type": "uint16"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "recipient",
											"type": "bytes32"
										}
									],
									"internalType": "struct IWormhole.TransferFees",
									"name": "tf",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "encodedVM",
									"type": "bytes"
								}
							],
							"name": "parseVM",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "version",
											"type": "uint8"
										},
										{
											"internalType": "uint32",
											"name": "timestamp",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "nonce",
											"type": "uint32"
										},
										{
											"internalType": "uint16",
											"name": "emitterChainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										},
										{
											"internalType": "uint8",
											"name": "consistencyLevel",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "payload",
											"type": "bytes"
										},
										{
											"internalType": "uint32",
											"name": "guardianSetIndex",
											"type": "uint32"
										},
										{
											"components": [
												{
													"internalType": "bytes32",
													"name": "r",
													"type": "bytes32"
												},
												{
													"internalType": "bytes32",
													"name": "s",
													"type": "bytes32"
												},
												{
													"internalType": "uint8",
													"name": "v",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "guardianIndex",
													"type": "uint8"
												}
											],
											"internalType": "struct IWormhole.Signature[]",
											"name": "signatures",
											"type": "tuple[]"
										},
										{
											"internalType": "bytes32",
											"name": "hash",
											"type": "bytes32"
										}
									],
									"internalType": "struct IWormhole.VM",
									"name": "vm",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "nonce",
									"type": "uint32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "publishMessage",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numGuardians",
									"type": "uint256"
								}
							],
							"name": "quorum",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "numSignaturesRequiredForQuorum",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_vm",
									"type": "bytes"
								}
							],
							"name": "submitContractUpgrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_vm",
									"type": "bytes"
								}
							],
							"name": "submitNewGuardianSet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_vm",
									"type": "bytes"
								}
							],
							"name": "submitRecoverChainId",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_vm",
									"type": "bytes"
								}
							],
							"name": "submitSetMessageFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_vm",
									"type": "bytes"
								}
							],
							"name": "submitTransferFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								},
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "r",
											"type": "bytes32"
										},
										{
											"internalType": "bytes32",
											"name": "s",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "v",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "guardianIndex",
											"type": "uint8"
										}
									],
									"internalType": "struct IWormhole.Signature[]",
									"name": "signatures",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "address[]",
											"name": "keys",
											"type": "address[]"
										},
										{
											"internalType": "uint32",
											"name": "expirationTime",
											"type": "uint32"
										}
									],
									"internalType": "struct IWormhole.GuardianSet",
									"name": "guardianSet",
									"type": "tuple"
								}
							],
							"name": "verifySignatures",
							"outputs": [
								{
									"internalType": "bool",
									"name": "valid",
									"type": "bool"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "version",
											"type": "uint8"
										},
										{
											"internalType": "uint32",
											"name": "timestamp",
											"type": "uint32"
										},
										{
											"internalType": "uint32",
											"name": "nonce",
											"type": "uint32"
										},
										{
											"internalType": "uint16",
											"name": "emitterChainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										},
										{
											"internalType": "uint8",
											"name": "consistencyLevel",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "payload",
											"type": "bytes"
										},
										{
											"internalType": "uint32",
											"name": "guardianSetIndex",
											"type": "uint32"
										},
										{
											"components": [
												{
													"internalType": "bytes32",
													"name": "r",
													"type": "bytes32"
												},
												{
													"internalType": "bytes32",
													"name": "s",
													"type": "bytes32"
												},
												{
													"internalType": "uint8",
													"name": "v",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "guardianIndex",
													"type": "uint8"
												}
											],
											"internalType": "struct IWormhole.Signature[]",
											"name": "signatures",
											"type": "tuple[]"
										},
										{
											"internalType": "bytes32",
											"name": "hash",
											"type": "bytes32"
										}
									],
									"internalType": "struct IWormhole.VM",
									"name": "vm",
									"type": "tuple"
								}
							],
							"name": "verifyVM",
							"outputs": [
								{
									"internalType": "bool",
									"name": "valid",
									"type": "bool"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"chainId()": "9a8a0592",
							"evmChainId()": "64d42b17",
							"getCurrentGuardianSetIndex()": "1cfe7951",
							"getGuardianSet(uint32)": "f951975a",
							"getGuardianSetExpiry()": "eb8d3f12",
							"governanceActionIsConsumed(bytes32)": "2c3c02a4",
							"governanceChainId()": "fbe3c2cd",
							"governanceContract()": "b172b222",
							"initialize()": "8129fc1c",
							"isFork()": "e039f224",
							"isInitialized(address)": "d60b347f",
							"messageFee()": "1a90a219",
							"nextSequence(address)": "4cf842b5",
							"parseAndVerifyVM(bytes)": "c0fd8bde",
							"parseContractUpgrade(bytes)": "4fdc60fa",
							"parseGuardianSetUpgrade(bytes)": "04ca84cf",
							"parseRecoverChainId(bytes)": "cb4cfea8",
							"parseSetMessageFee(bytes)": "515f3247",
							"parseTransferFees(bytes)": "0319e59c",
							"parseVM(bytes)": "a9e11893",
							"publishMessage(uint32,bytes,uint8)": "b19a437e",
							"quorum(uint256)": "f8ce560a",
							"submitContractUpgrade(bytes)": "5cb8cae2",
							"submitNewGuardianSet(bytes)": "6606b4e0",
							"submitRecoverChainId(bytes)": "178149e7",
							"submitSetMessageFee(bytes)": "f42bc641",
							"submitTransferFees(bytes)": "93df337e",
							"verifySignatures(bytes32,(bytes32,bytes32,uint8,uint8)[],(address[],uint32))": "a0cce1b3",
							"verifyVM((uint8,uint32,uint32,uint16,bytes32,uint64,uint8,bytes,uint32,(bytes32,bytes32,uint8,uint8)[],bytes32))": "875be02a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"GuardianSetAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"LogMessagePublished\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"evmChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentGuardianSetIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"getGuardianSet\",\"outputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"keys\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"expirationTime\",\"type\":\"uint32\"}],\"internalType\":\"struct IWormhole.GuardianSet\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGuardianSetExpiry\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"governanceActionIsConsumed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFork\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"nextSequence\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"parseAndVerifyVM\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"emitterChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"guardianSetIndex\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"guardianIndex\",\"type\":\"uint8\"}],\"internalType\":\"struct IWormhole.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IWormhole.VM\",\"name\":\"vm\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedUpgrade\",\"type\":\"bytes\"}],\"name\":\"parseContractUpgrade\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"internalType\":\"struct IWormhole.ContractUpgrade\",\"name\":\"cu\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedUpgrade\",\"type\":\"bytes\"}],\"name\":\"parseGuardianSetUpgrade\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chain\",\"type\":\"uint16\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"keys\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"expirationTime\",\"type\":\"uint32\"}],\"internalType\":\"struct IWormhole.GuardianSet\",\"name\":\"newGuardianSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"newGuardianSetIndex\",\"type\":\"uint32\"}],\"internalType\":\"struct IWormhole.GuardianSetUpgrade\",\"name\":\"gsu\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedRecoverChainId\",\"type\":\"bytes\"}],\"name\":\"parseRecoverChainId\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"evmChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"newChainId\",\"type\":\"uint16\"}],\"internalType\":\"struct IWormhole.RecoverChainId\",\"name\":\"rci\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedSetMessageFee\",\"type\":\"bytes\"}],\"name\":\"parseSetMessageFee\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"messageFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IWormhole.SetMessageFee\",\"name\":\"smf\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedTransferFees\",\"type\":\"bytes\"}],\"name\":\"parseTransferFees\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"}],\"internalType\":\"struct IWormhole.TransferFees\",\"name\":\"tf\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"parseVM\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"emitterChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"guardianSetIndex\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"guardianIndex\",\"type\":\"uint8\"}],\"internalType\":\"struct IWormhole.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IWormhole.VM\",\"name\":\"vm\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"publishMessage\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numGuardians\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"numSignaturesRequiredForQuorum\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vm\",\"type\":\"bytes\"}],\"name\":\"submitContractUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vm\",\"type\":\"bytes\"}],\"name\":\"submitNewGuardianSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vm\",\"type\":\"bytes\"}],\"name\":\"submitRecoverChainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vm\",\"type\":\"bytes\"}],\"name\":\"submitSetMessageFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vm\",\"type\":\"bytes\"}],\"name\":\"submitTransferFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"guardianIndex\",\"type\":\"uint8\"}],\"internalType\":\"struct IWormhole.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"keys\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"expirationTime\",\"type\":\"uint32\"}],\"internalType\":\"struct IWormhole.GuardianSet\",\"name\":\"guardianSet\",\"type\":\"tuple\"}],\"name\":\"verifySignatures\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"emitterChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"guardianSetIndex\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"guardianIndex\",\"type\":\"uint8\"}],\"internalType\":\"struct IWormhole.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct IWormhole.VM\",\"name\":\"vm\",\"type\":\"tuple\"}],\"name\":\"verifyVM\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/interfaces/IWormhole.sol\":\"IWormhole\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/src/interfaces/IWormhole.sol\":{\"keccak256\":\"0x9256fa479ecc3f4dc17b2860230ce6d658858262bee1dbabd654208381227d0d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://521d895f44fe73b39cff8183d6e8a6a23e8cc3336fc3e1874ad798b9803b390b\",\"dweb:/ipfs/Qmdcw3Af8FcwgXUEWFcvwFKZ3B4d2dzWosUorrSLAnfN2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol": {
				"IWormholeReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "bytes[]",
									"name": "additionalMessages",
									"type": "bytes[]"
								},
								{
									"internalType": "bytes32",
									"name": "sourceAddress",
									"type": "bytes32"
								},
								{
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "receiveWormholeMessages",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": {
								"params": {
									"additionalMessages": "- Additional messages which were requested to be included in this delivery.      Note: There are no contract-level guarantees that the messages in this array are what was requested      so **you should verify any sensitive information given here!**      For example, if a 'VaaKey' was specified on the source chain, then MAKE SURE the corresponding message here      has valid signatures (by calling `parseAndVerifyVM(message)` on the Wormhole core contract)      This field can be used to perform and relay TokenBridge or CCTP transfers, and there are example      usages of this at         https://github.com/wormhole-foundation/hello-token         https://github.com/wormhole-foundation/hello-cctp",
									"deliveryHash": "- the VAA hash of the deliveryVAA.",
									"payload": "- an arbitrary message which was included in the delivery by the     requester. This message's signature will already have been verified (as long as msg.sender is the Wormhole Relayer contract)",
									"sourceAddress": "- the (wormhole format) address on the sending chain which requested     this delivery.",
									"sourceChain": "- the wormhole chain ID where this delivery was requested."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": "529dca32"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"additionalMessages\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"sourceAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"receiveWormholeMessages\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)\":{\"params\":{\"additionalMessages\":\"- Additional messages which were requested to be included in this delivery.      Note: There are no contract-level guarantees that the messages in this array are what was requested      so **you should verify any sensitive information given here!**      For example, if a 'VaaKey' was specified on the source chain, then MAKE SURE the corresponding message here      has valid signatures (by calling `parseAndVerifyVM(message)` on the Wormhole core contract)      This field can be used to perform and relay TokenBridge or CCTP transfers, and there are example      usages of this at         https://github.com/wormhole-foundation/hello-token         https://github.com/wormhole-foundation/hello-cctp\",\"deliveryHash\":\"- the VAA hash of the deliveryVAA.\",\"payload\":\"- an arbitrary message which was included in the delivery by the     requester. This message's signature will already have been verified (as long as msg.sender is the Wormhole Relayer contract)\",\"sourceAddress\":\"- the (wormhole format) address on the sending chain which requested     this delivery.\",\"sourceChain\":\"- the wormhole chain ID where this delivery was requested.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)\":{\"notice\":\"When a `send` is performed with this contract as the target, this function will be     invoked by the WormholeRelayer contract NOTE: This function should be restricted such that only the Wormhole Relayer contract can call it. We also recommend that this function checks that `sourceChain` and `sourceAddress` are indeed who       you expect to have requested the calling of `send` on the source chain The invocation of this function corresponding to the `send` request will have msg.value equal   to the receiverValue specified in the send request. If the invocation of this function reverts or exceeds the gas limit   specified by the send requester, this delivery will result in a `ReceiverFailure`.\"}},\"notice\":\"Interface for a contract which can receive Wormhole messages.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol\":\"IWormholeReceiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol\":{\"keccak256\":\"0x5e492d502a4be6633cab7c4d0f65c1c90fef2f05a4fd591de896ef3c6d7794cf\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://509831b21b066d67c75423cad68420946970f44581e540afa11b6678c68f7d17\",\"dweb:/ipfs/QmaWTnPcSVPq9c44V1ZdsBX8P1a6qjJst3Vy7oNcuAgBs6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"receiveWormholeMessages(bytes,bytes[],bytes32,uint16,bytes32)": {
								"notice": "When a `send` is performed with this contract as the target, this function will be     invoked by the WormholeRelayer contract NOTE: This function should be restricted such that only the Wormhole Relayer contract can call it. We also recommend that this function checks that `sourceChain` and `sourceAddress` are indeed who       you expect to have requested the calling of `send` on the source chain The invocation of this function corresponding to the `send` request will have msg.value equal   to the receiverValue specified in the send request. If the invocation of this function reverts or exceeds the gas limit   specified by the send requester, this delivery will result in a `ReceiverFailure`."
							}
						},
						"notice": "Interface for a contract which can receive Wormhole messages.",
						"version": 1
					}
				}
			},
			"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol": {
				"IWormholeRelayer": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "deliveryVaaHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "enum IWormholeRelayerDelivery.DeliveryStatus",
									"name": "status",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "gasUsed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum IWormholeRelayerDelivery.RefundStatus",
									"name": "refundStatus",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "additionalStatusInfo",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "overridesInfo",
									"type": "bytes"
								}
							],
							"name": "Delivery",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "deliveryQuote",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								}
							],
							"name": "SendEvent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "encodedVMs",
									"type": "bytes[]"
								},
								{
									"internalType": "bytes",
									"name": "encodedDeliveryVAA",
									"type": "bytes"
								},
								{
									"internalType": "address payable",
									"name": "relayerRefundAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "deliveryOverrides",
									"type": "bytes"
								}
							],
							"name": "deliver",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryAttempted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "attempted",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryFailureBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliverySuccessBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDefaultDeliveryProvider",
							"outputs": [
								{
									"internalType": "address",
									"name": "deliveryProvider",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "chainId",
									"type": "uint16"
								}
							],
							"name": "getRegisteredWormholeRelayerContract",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "quoteDeliveryPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativePriceQuote",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionInfo",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "quoteEVMDeliveryPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativePriceQuote",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "targetChainRefundPerGasUnused",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								}
							],
							"name": "quoteEVMDeliveryPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativePriceQuote",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "targetChainRefundPerGasUnused",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "currentChainAmount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "quoteNativeForChain",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "targetChainAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey",
									"name": "deliveryVaaKey",
									"type": "tuple"
								},
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "newReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "newEncodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "newDeliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "resend",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey",
									"name": "deliveryVaaKey",
									"type": "tuple"
								},
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "newReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newGasLimit",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "newDeliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "resendToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "targetAddress",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "refundAddress",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "send",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "targetAddress",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "refundAddress",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "keyType",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "encodedKey",
											"type": "bytes"
										}
									],
									"internalType": "struct MessageKey[]",
									"name": "messageKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "send",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								}
							],
							"name": "sendPayloadToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								}
							],
							"name": "sendPayloadToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "sendToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "keyType",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "encodedKey",
											"type": "bytes"
										}
									],
									"internalType": "struct MessageKey[]",
									"name": "messageKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "sendToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								}
							],
							"name": "sendVaasToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								}
							],
							"name": "sendVaasToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Delivery(address,uint16,uint64,bytes32,uint8,uint256,uint8,bytes,bytes)": {
								"custom:member": "recipientContract - The target contract addresssourceChain - The chain which this delivery was requested from (in wormhole     ChainID format)sequence - The wormhole sequence number of the delivery VAA on the source chain     corresponding to this delivery requestdeliveryVaaHash - The hash of the delivery VAA corresponding to this delivery     requestgasUsed - The amount of gas that was used to call your target contractstatus:   - RECEIVER_FAILURE, if the target contract reverts   - SUCCESS, if the target contract doesn't revertadditionalStatusInfo:   - If status is SUCCESS, then this is empty.   - If status is RECEIVER_FAILURE, this is `RETURNDATA_TRUNCATION_THRESHOLD` bytes of the       return data (i.e. potentially truncated revert reason information).refundStatus - Result of the refund. REFUND_SUCCESS or REFUND_FAIL are for     refunds where targetChain=refundChain; the others are for targetChain!=refundChain,     where a cross chain refund is necessary, or if the default code path is used where no refund is requested (NO_REFUND_REQUESTED)overridesInfo:   - If not an override: empty bytes array   - Otherwise: An encoded `DeliveryOverride`"
							}
						},
						"kind": "dev",
						"methods": {
							"deliver(bytes[],bytes,address,bytes)": {
								"params": {
									"deliveryOverrides": "- Optional overrides field which must be either an empty bytes array or     an encoded DeliveryOverride struct",
									"encodedDeliveryVAA": "- Signed wormhole message from the source chain's WormholeRelayer     contract with payload being the encoded delivery instruction container",
									"encodedVMs": "- An array of signed wormhole messages (all from the same source chain     transaction)",
									"relayerRefundAddress": "- The address to which any refunds to the delivery provider     should be sent"
								}
							},
							"getDefaultDeliveryProvider()": {
								"returns": {
									"deliveryProvider": "The address of (the default delivery provider)'s contract on this source   chain. This must be a contract that implements IDeliveryProvider."
								}
							},
							"quoteDeliveryPrice(uint16,uint256,bytes,address)": {
								"params": {
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"encodedExecutionParameters": "encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"encodedExecutionInfo": "encoded information on how the delivery will be executed        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` and `targetChainRefundPerGasUnused`             (which is the amount of target chain currency that will be refunded per unit of gas unused,              if a refundAddress is specified)",
									"nativePriceQuote": "Price, in units of current chain currency, that the delivery provider charges to perform the relay"
								}
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"nativePriceQuote": "Price, in units of current chain currency, that the delivery provider charges to perform the relay",
									"targetChainRefundPerGasUnused": "amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified.         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain."
								}
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)": {
								"params": {
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"nativePriceQuote": "Price, in units of current chain currency, that the delivery provider charges to perform the relay",
									"targetChainRefundPerGasUnused": "amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain."
								}
							},
							"quoteNativeForChain(uint16,uint256,address)": {
								"params": {
									"currentChainAmount": "The value that `paymentForExtraReceiverValue` will be set to",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"targetChainAmount": "The amount such that if `targetAddress` will be called with `msg.value` equal to         receiverValue + targetChainAmount"
								}
							},
							"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)": {
								"params": {
									"deliveryVaaKey": "VaaKey identifying the wormhole message containing the        previously published delivery instructions",
									"newDeliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"newEncodedExecutionParameters": "new encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"newReceiverValue": "new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "The target chain that the original delivery targeted. Must match targetChain from original delivery instructions"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing redelivery instructions"
								}
							},
							"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)": {
								"params": {
									"deliveryVaaKey": "VaaKey identifying the wormhole message containing the        previously published delivery instructions",
									"newDeliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"newGasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider, to the refund chain and address specified in the original request",
									"newReceiverValue": "new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "The target chain that the original delivery targeted. Must match targetChain from original delivery instructions"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing redelivery instructions"
								}
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"encodedExecutionParameters": "encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"encodedExecutionParameters": "encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"messageKeys": "Additional messagess to pass in as parameter in call to `targetAddress`",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"messageKeys": "Additional messagess to pass in as parameter in call to `targetAddress`",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deliver(bytes[],bytes,address,bytes)": "a60eb4c8",
							"deliveryAttempted(bytes32)": "d0625a19",
							"deliveryFailureBlock(bytes32)": "5a3b92e8",
							"deliverySuccessBlock(bytes32)": "40984f08",
							"getDefaultDeliveryProvider()": "24320c9f",
							"getRegisteredWormholeRelayerContract(uint16)": "3e8267e7",
							"quoteDeliveryPrice(uint16,uint256,bytes,address)": "a79629d8",
							"quoteEVMDeliveryPrice(uint16,uint256,uint256)": "c23ee3c3",
							"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)": "80ebabd0",
							"quoteNativeForChain(uint16,uint256,address)": "2385904a",
							"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)": "b686d089",
							"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)": "8b0301b1",
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)": "c81fb7fe",
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)": "cee4bda0",
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)": "8fecdd02",
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)": "4b5ca6f4",
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)": "3a2c767d",
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)": "c055120e",
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])": "329a2be7",
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)": "32b2fc0e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"deliveryVaaHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"enum IWormholeRelayerDelivery.DeliveryStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum IWormholeRelayerDelivery.RefundStatus\",\"name\":\"refundStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"additionalStatusInfo\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"overridesInfo\",\"type\":\"bytes\"}],\"name\":\"Delivery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deliveryQuote\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"}],\"name\":\"SendEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"encodedVMs\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"encodedDeliveryVAA\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"relayerRefundAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"deliveryOverrides\",\"type\":\"bytes\"}],\"name\":\"deliver\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryAttempted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"attempted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryFailureBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliverySuccessBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultDeliveryProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deliveryProvider\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"getRegisteredWormholeRelayerContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"quoteDeliveryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativePriceQuote\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionInfo\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"quoteEVMDeliveryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativePriceQuote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetChainRefundPerGasUnused\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"quoteEVMDeliveryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativePriceQuote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetChainRefundPerGasUnused\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"currentChainAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"quoteNativeForChain\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"targetChainAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey\",\"name\":\"deliveryVaaKey\",\"type\":\"tuple\"},{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"newReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"newEncodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"newDeliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"resend\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey\",\"name\":\"deliveryVaaKey\",\"type\":\"tuple\"},{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"newReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newDeliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"resendToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"targetAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"refundAddress\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"send\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"targetAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"refundAddress\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"keyType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"encodedKey\",\"type\":\"bytes\"}],\"internalType\":\"struct MessageKey[]\",\"name\":\"messageKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"send\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"}],\"name\":\"sendPayloadToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"sendPayloadToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"sendToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"keyType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"encodedKey\",\"type\":\"bytes\"}],\"internalType\":\"struct MessageKey[]\",\"name\":\"messageKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"sendToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"}],\"name\":\"sendVaasToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"}],\"name\":\"sendVaasToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Delivery(address,uint16,uint64,bytes32,uint8,uint256,uint8,bytes,bytes)\":{\"custom:member\":\"recipientContract - The target contract addresssourceChain - The chain which this delivery was requested from (in wormhole     ChainID format)sequence - The wormhole sequence number of the delivery VAA on the source chain     corresponding to this delivery requestdeliveryVaaHash - The hash of the delivery VAA corresponding to this delivery     requestgasUsed - The amount of gas that was used to call your target contractstatus:   - RECEIVER_FAILURE, if the target contract reverts   - SUCCESS, if the target contract doesn't revertadditionalStatusInfo:   - If status is SUCCESS, then this is empty.   - If status is RECEIVER_FAILURE, this is `RETURNDATA_TRUNCATION_THRESHOLD` bytes of the       return data (i.e. potentially truncated revert reason information).refundStatus - Result of the refund. REFUND_SUCCESS or REFUND_FAIL are for     refunds where targetChain=refundChain; the others are for targetChain!=refundChain,     where a cross chain refund is necessary, or if the default code path is used where no refund is requested (NO_REFUND_REQUESTED)overridesInfo:   - If not an override: empty bytes array   - Otherwise: An encoded `DeliveryOverride`\"}},\"kind\":\"dev\",\"methods\":{\"deliver(bytes[],bytes,address,bytes)\":{\"params\":{\"deliveryOverrides\":\"- Optional overrides field which must be either an empty bytes array or     an encoded DeliveryOverride struct\",\"encodedDeliveryVAA\":\"- Signed wormhole message from the source chain's WormholeRelayer     contract with payload being the encoded delivery instruction container\",\"encodedVMs\":\"- An array of signed wormhole messages (all from the same source chain     transaction)\",\"relayerRefundAddress\":\"- The address to which any refunds to the delivery provider     should be sent\"}},\"getDefaultDeliveryProvider()\":{\"returns\":{\"deliveryProvider\":\"The address of (the default delivery provider)'s contract on this source   chain. This must be a contract that implements IDeliveryProvider.\"}},\"quoteDeliveryPrice(uint16,uint256,bytes,address)\":{\"params\":{\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"encodedExecutionParameters\":\"encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"encodedExecutionInfo\":\"encoded information on how the delivery will be executed        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` and `targetChainRefundPerGasUnused`             (which is the amount of target chain currency that will be refunded per unit of gas unused,              if a refundAddress is specified)\",\"nativePriceQuote\":\"Price, in units of current chain currency, that the delivery provider charges to perform the relay\"}},\"quoteEVMDeliveryPrice(uint16,uint256,uint256)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"nativePriceQuote\":\"Price, in units of current chain currency, that the delivery provider charges to perform the relay\",\"targetChainRefundPerGasUnused\":\"amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified.         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain.\"}},\"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)\":{\"params\":{\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"nativePriceQuote\":\"Price, in units of current chain currency, that the delivery provider charges to perform the relay\",\"targetChainRefundPerGasUnused\":\"amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain.\"}},\"quoteNativeForChain(uint16,uint256,address)\":{\"params\":{\"currentChainAmount\":\"The value that `paymentForExtraReceiverValue` will be set to\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"targetChainAmount\":\"The amount such that if `targetAddress` will be called with `msg.value` equal to         receiverValue + targetChainAmount\"}},\"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)\":{\"params\":{\"deliveryVaaKey\":\"VaaKey identifying the wormhole message containing the        previously published delivery instructions\",\"newDeliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"newEncodedExecutionParameters\":\"new encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"newReceiverValue\":\"new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing redelivery instructions\"}},\"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)\":{\"params\":{\"deliveryVaaKey\":\"VaaKey identifying the wormhole message containing the        previously published delivery instructions\",\"newDeliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"newGasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider, to the refund chain and address specified in the original request\",\"newReceiverValue\":\"new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing redelivery instructions\"}},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"encodedExecutionParameters\":\"encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"encodedExecutionParameters\":\"encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"messageKeys\":\"Additional messagess to pass in as parameter in call to `targetAddress`\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"messageKeys\":\"Additional messagess to pass in as parameter in call to `targetAddress`\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deliver(bytes[],bytes,address,bytes)\":{\"notice\":\"The delivery provider calls `deliver` to relay messages as described by one delivery instruction The delivery provider must pass in the specified (by VaaKeys[]) signed wormhole messages (VAAs) from the source chain as well as the signed wormhole message with the delivery instructions (the delivery VAA) The messages will be relayed to the target address (with the specified gas limit and receiver value) iff the following checks are met: - the delivery VAA has a valid signature - the delivery VAA's emitter is one of these WormholeRelayer contracts - the delivery provider passed in at least enough of this chain's currency as msg.value (enough meaning the maximum possible refund) - the instruction's target chain is this chain - the relayed signed VAAs match the descriptions in container.messages (the VAA hashes match, or the emitter address, sequence number pair matches, depending on the description given)\"},\"deliveryAttempted(bytes32)\":{\"notice\":\"Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted\"},\"deliveryFailureBlock(bytes32)\":{\"notice\":\"block number of the latest attempt to execute a delivery that failed\"},\"deliverySuccessBlock(bytes32)\":{\"notice\":\"block number at which a delivery was successfully executed\"},\"getDefaultDeliveryProvider()\":{\"notice\":\"Returns the address of the current default delivery provider\"},\"quoteDeliveryPrice(uint16,uint256,bytes,address)\":{\"notice\":\"Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\"},\"quoteEVMDeliveryPrice(uint16,uint256,uint256)\":{\"notice\":\"Returns the price to request a relay to chain `targetChain`, using the default delivery provider\"},\"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)\":{\"notice\":\"Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\"},\"quoteNativeForChain(uint16,uint256,address)\":{\"notice\":\"Returns the (extra) amount of target chain currency that `targetAddress` will be called with, if the `paymentForExtraReceiverValue` field is set to `currentChainAmount`\"},\"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)\":{\"notice\":\"Requests a previously published delivery instruction to be redelivered This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, newReceiverValue, newEncodedExecutionParameters, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - (For EVM_V1) newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - (For EVM_V1) newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`\"},\"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)\":{\"notice\":\"Requests a previously published delivery instruction to be redelivered (e.g. with a different delivery provider) This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, newReceiverValue, newGasLimit, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction\"},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue\"},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\"},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendPayloadToEvm` function with `refundChain` and `refundAddress` as parameters\"},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\"},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue\"},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and external messages specified by `messageKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\"},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendVaasToEvm` function with `refundChain` and `refundAddress` as parameters\"},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol\":\"IWormholeRelayer\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deliver(bytes[],bytes,address,bytes)": {
								"notice": "The delivery provider calls `deliver` to relay messages as described by one delivery instruction The delivery provider must pass in the specified (by VaaKeys[]) signed wormhole messages (VAAs) from the source chain as well as the signed wormhole message with the delivery instructions (the delivery VAA) The messages will be relayed to the target address (with the specified gas limit and receiver value) iff the following checks are met: - the delivery VAA has a valid signature - the delivery VAA's emitter is one of these WormholeRelayer contracts - the delivery provider passed in at least enough of this chain's currency as msg.value (enough meaning the maximum possible refund) - the instruction's target chain is this chain - the relayed signed VAAs match the descriptions in container.messages (the VAA hashes match, or the emitter address, sequence number pair matches, depending on the description given)"
							},
							"deliveryAttempted(bytes32)": {
								"notice": "Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted"
							},
							"deliveryFailureBlock(bytes32)": {
								"notice": "block number of the latest attempt to execute a delivery that failed"
							},
							"deliverySuccessBlock(bytes32)": {
								"notice": "block number at which a delivery was successfully executed"
							},
							"getDefaultDeliveryProvider()": {
								"notice": "Returns the address of the current default delivery provider"
							},
							"quoteDeliveryPrice(uint16,uint256,bytes,address)": {
								"notice": "Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`"
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256)": {
								"notice": "Returns the price to request a relay to chain `targetChain`, using the default delivery provider"
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)": {
								"notice": "Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`"
							},
							"quoteNativeForChain(uint16,uint256,address)": {
								"notice": "Returns the (extra) amount of target chain currency that `targetAddress` will be called with, if the `paymentForExtraReceiverValue` field is set to `currentChainAmount`"
							},
							"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)": {
								"notice": "Requests a previously published delivery instruction to be redelivered This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, newReceiverValue, newEncodedExecutionParameters, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - (For EVM_V1) newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - (For EVM_V1) newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`"
							},
							"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)": {
								"notice": "Requests a previously published delivery instruction to be redelivered (e.g. with a different delivery provider) This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, newReceiverValue, newGasLimit, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction"
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue"
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!"
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendPayloadToEvm` function with `refundChain` and `refundAddress` as parameters"
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`"
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue"
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and external messages specified by `messageKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!"
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendVaasToEvm` function with `refundChain` and `refundAddress` as parameters"
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`"
							}
						},
						"version": 1
					}
				},
				"IWormholeRelayerBase": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "deliveryQuote",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								}
							],
							"name": "SendEvent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryAttempted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "attempted",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryFailureBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliverySuccessBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "chainId",
									"type": "uint16"
								}
							],
							"name": "getRegisteredWormholeRelayerContract",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deliveryAttempted(bytes32)": "d0625a19",
							"deliveryFailureBlock(bytes32)": "5a3b92e8",
							"deliverySuccessBlock(bytes32)": "40984f08",
							"getRegisteredWormholeRelayerContract(uint16)": "3e8267e7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deliveryQuote\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"}],\"name\":\"SendEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryAttempted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"attempted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryFailureBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliverySuccessBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"getRegisteredWormholeRelayerContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deliveryAttempted(bytes32)\":{\"notice\":\"Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted\"},\"deliveryFailureBlock(bytes32)\":{\"notice\":\"block number of the latest attempt to execute a delivery that failed\"},\"deliverySuccessBlock(bytes32)\":{\"notice\":\"block number at which a delivery was successfully executed\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol\":\"IWormholeRelayerBase\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deliveryAttempted(bytes32)": {
								"notice": "Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted"
							},
							"deliveryFailureBlock(bytes32)": {
								"notice": "block number of the latest attempt to execute a delivery that failed"
							},
							"deliverySuccessBlock(bytes32)": {
								"notice": "block number at which a delivery was successfully executed"
							}
						},
						"version": 1
					}
				},
				"IWormholeRelayerDelivery": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipientContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint16",
									"name": "sourceChain",
									"type": "uint16"
								},
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "deliveryVaaHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "enum IWormholeRelayerDelivery.DeliveryStatus",
									"name": "status",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "gasUsed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum IWormholeRelayerDelivery.RefundStatus",
									"name": "refundStatus",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "additionalStatusInfo",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "overridesInfo",
									"type": "bytes"
								}
							],
							"name": "Delivery",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "deliveryQuote",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								}
							],
							"name": "SendEvent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "encodedVMs",
									"type": "bytes[]"
								},
								{
									"internalType": "bytes",
									"name": "encodedDeliveryVAA",
									"type": "bytes"
								},
								{
									"internalType": "address payable",
									"name": "relayerRefundAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "deliveryOverrides",
									"type": "bytes"
								}
							],
							"name": "deliver",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryAttempted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "attempted",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryFailureBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliverySuccessBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "chainId",
									"type": "uint16"
								}
							],
							"name": "getRegisteredWormholeRelayerContract",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Delivery(address,uint16,uint64,bytes32,uint8,uint256,uint8,bytes,bytes)": {
								"custom:member": "recipientContract - The target contract addresssourceChain - The chain which this delivery was requested from (in wormhole     ChainID format)sequence - The wormhole sequence number of the delivery VAA on the source chain     corresponding to this delivery requestdeliveryVaaHash - The hash of the delivery VAA corresponding to this delivery     requestgasUsed - The amount of gas that was used to call your target contractstatus:   - RECEIVER_FAILURE, if the target contract reverts   - SUCCESS, if the target contract doesn't revertadditionalStatusInfo:   - If status is SUCCESS, then this is empty.   - If status is RECEIVER_FAILURE, this is `RETURNDATA_TRUNCATION_THRESHOLD` bytes of the       return data (i.e. potentially truncated revert reason information).refundStatus - Result of the refund. REFUND_SUCCESS or REFUND_FAIL are for     refunds where targetChain=refundChain; the others are for targetChain!=refundChain,     where a cross chain refund is necessary, or if the default code path is used where no refund is requested (NO_REFUND_REQUESTED)overridesInfo:   - If not an override: empty bytes array   - Otherwise: An encoded `DeliveryOverride`"
							}
						},
						"kind": "dev",
						"methods": {
							"deliver(bytes[],bytes,address,bytes)": {
								"params": {
									"deliveryOverrides": "- Optional overrides field which must be either an empty bytes array or     an encoded DeliveryOverride struct",
									"encodedDeliveryVAA": "- Signed wormhole message from the source chain's WormholeRelayer     contract with payload being the encoded delivery instruction container",
									"encodedVMs": "- An array of signed wormhole messages (all from the same source chain     transaction)",
									"relayerRefundAddress": "- The address to which any refunds to the delivery provider     should be sent"
								}
							}
						},
						"title": "IWormholeRelayerDelivery",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deliver(bytes[],bytes,address,bytes)": "a60eb4c8",
							"deliveryAttempted(bytes32)": "d0625a19",
							"deliveryFailureBlock(bytes32)": "5a3b92e8",
							"deliverySuccessBlock(bytes32)": "40984f08",
							"getRegisteredWormholeRelayerContract(uint16)": "3e8267e7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"sourceChain\",\"type\":\"uint16\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"deliveryVaaHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"enum IWormholeRelayerDelivery.DeliveryStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum IWormholeRelayerDelivery.RefundStatus\",\"name\":\"refundStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"additionalStatusInfo\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"overridesInfo\",\"type\":\"bytes\"}],\"name\":\"Delivery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deliveryQuote\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"}],\"name\":\"SendEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"encodedVMs\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes\",\"name\":\"encodedDeliveryVAA\",\"type\":\"bytes\"},{\"internalType\":\"address payable\",\"name\":\"relayerRefundAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"deliveryOverrides\",\"type\":\"bytes\"}],\"name\":\"deliver\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryAttempted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"attempted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryFailureBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliverySuccessBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"getRegisteredWormholeRelayerContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Delivery(address,uint16,uint64,bytes32,uint8,uint256,uint8,bytes,bytes)\":{\"custom:member\":\"recipientContract - The target contract addresssourceChain - The chain which this delivery was requested from (in wormhole     ChainID format)sequence - The wormhole sequence number of the delivery VAA on the source chain     corresponding to this delivery requestdeliveryVaaHash - The hash of the delivery VAA corresponding to this delivery     requestgasUsed - The amount of gas that was used to call your target contractstatus:   - RECEIVER_FAILURE, if the target contract reverts   - SUCCESS, if the target contract doesn't revertadditionalStatusInfo:   - If status is SUCCESS, then this is empty.   - If status is RECEIVER_FAILURE, this is `RETURNDATA_TRUNCATION_THRESHOLD` bytes of the       return data (i.e. potentially truncated revert reason information).refundStatus - Result of the refund. REFUND_SUCCESS or REFUND_FAIL are for     refunds where targetChain=refundChain; the others are for targetChain!=refundChain,     where a cross chain refund is necessary, or if the default code path is used where no refund is requested (NO_REFUND_REQUESTED)overridesInfo:   - If not an override: empty bytes array   - Otherwise: An encoded `DeliveryOverride`\"}},\"kind\":\"dev\",\"methods\":{\"deliver(bytes[],bytes,address,bytes)\":{\"params\":{\"deliveryOverrides\":\"- Optional overrides field which must be either an empty bytes array or     an encoded DeliveryOverride struct\",\"encodedDeliveryVAA\":\"- Signed wormhole message from the source chain's WormholeRelayer     contract with payload being the encoded delivery instruction container\",\"encodedVMs\":\"- An array of signed wormhole messages (all from the same source chain     transaction)\",\"relayerRefundAddress\":\"- The address to which any refunds to the delivery provider     should be sent\"}}},\"title\":\"IWormholeRelayerDelivery\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deliver(bytes[],bytes,address,bytes)\":{\"notice\":\"The delivery provider calls `deliver` to relay messages as described by one delivery instruction The delivery provider must pass in the specified (by VaaKeys[]) signed wormhole messages (VAAs) from the source chain as well as the signed wormhole message with the delivery instructions (the delivery VAA) The messages will be relayed to the target address (with the specified gas limit and receiver value) iff the following checks are met: - the delivery VAA has a valid signature - the delivery VAA's emitter is one of these WormholeRelayer contracts - the delivery provider passed in at least enough of this chain's currency as msg.value (enough meaning the maximum possible refund) - the instruction's target chain is this chain - the relayed signed VAAs match the descriptions in container.messages (the VAA hashes match, or the emitter address, sequence number pair matches, depending on the description given)\"},\"deliveryAttempted(bytes32)\":{\"notice\":\"Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted\"},\"deliveryFailureBlock(bytes32)\":{\"notice\":\"block number of the latest attempt to execute a delivery that failed\"},\"deliverySuccessBlock(bytes32)\":{\"notice\":\"block number at which a delivery was successfully executed\"}},\"notice\":\"The interface to execute deliveries. Only relevant for Delivery Providers\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol\":\"IWormholeRelayerDelivery\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deliver(bytes[],bytes,address,bytes)": {
								"notice": "The delivery provider calls `deliver` to relay messages as described by one delivery instruction The delivery provider must pass in the specified (by VaaKeys[]) signed wormhole messages (VAAs) from the source chain as well as the signed wormhole message with the delivery instructions (the delivery VAA) The messages will be relayed to the target address (with the specified gas limit and receiver value) iff the following checks are met: - the delivery VAA has a valid signature - the delivery VAA's emitter is one of these WormholeRelayer contracts - the delivery provider passed in at least enough of this chain's currency as msg.value (enough meaning the maximum possible refund) - the instruction's target chain is this chain - the relayed signed VAAs match the descriptions in container.messages (the VAA hashes match, or the emitter address, sequence number pair matches, depending on the description given)"
							},
							"deliveryAttempted(bytes32)": {
								"notice": "Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted"
							},
							"deliveryFailureBlock(bytes32)": {
								"notice": "block number of the latest attempt to execute a delivery that failed"
							},
							"deliverySuccessBlock(bytes32)": {
								"notice": "block number at which a delivery was successfully executed"
							}
						},
						"notice": "The interface to execute deliveries. Only relevant for Delivery Providers",
						"version": 1
					}
				},
				"IWormholeRelayerSend": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "deliveryQuote",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								}
							],
							"name": "SendEvent",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryAttempted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "attempted",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliveryFailureBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "deliveryHash",
									"type": "bytes32"
								}
							],
							"name": "deliverySuccessBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDefaultDeliveryProvider",
							"outputs": [
								{
									"internalType": "address",
									"name": "deliveryProvider",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "chainId",
									"type": "uint16"
								}
							],
							"name": "getRegisteredWormholeRelayerContract",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "quoteDeliveryPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativePriceQuote",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionInfo",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "quoteEVMDeliveryPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativePriceQuote",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "targetChainRefundPerGasUnused",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								}
							],
							"name": "quoteEVMDeliveryPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "nativePriceQuote",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "targetChainRefundPerGasUnused",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "currentChainAmount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "quoteNativeForChain",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "targetChainAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey",
									"name": "deliveryVaaKey",
									"type": "tuple"
								},
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "newReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "newEncodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "newDeliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "resend",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey",
									"name": "deliveryVaaKey",
									"type": "tuple"
								},
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "newReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newGasLimit",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "newDeliveryProviderAddress",
									"type": "address"
								}
							],
							"name": "resendToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "targetAddress",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "refundAddress",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "send",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "targetAddress",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "encodedExecutionParameters",
									"type": "bytes"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "bytes32",
									"name": "refundAddress",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "keyType",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "encodedKey",
											"type": "bytes"
										}
									],
									"internalType": "struct MessageKey[]",
									"name": "messageKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "send",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								}
							],
							"name": "sendPayloadToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								}
							],
							"name": "sendPayloadToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "sendToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentForExtraReceiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "deliveryProviderAddress",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "keyType",
											"type": "uint8"
										},
										{
											"internalType": "bytes",
											"name": "encodedKey",
											"type": "bytes"
										}
									],
									"internalType": "struct MessageKey[]",
									"name": "messageKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint8",
									"name": "consistencyLevel",
									"type": "uint8"
								}
							],
							"name": "sendToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								}
							],
							"name": "sendVaasToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "targetChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "targetAddress",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "payload",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "receiverValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "gasLimit",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "uint16",
											"name": "chainId",
											"type": "uint16"
										},
										{
											"internalType": "bytes32",
											"name": "emitterAddress",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "sequence",
											"type": "uint64"
										}
									],
									"internalType": "struct VaaKey[]",
									"name": "vaaKeys",
									"type": "tuple[]"
								},
								{
									"internalType": "uint16",
									"name": "refundChain",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "refundAddress",
									"type": "address"
								}
							],
							"name": "sendVaasToEvm",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "sequence",
									"type": "uint64"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getDefaultDeliveryProvider()": {
								"returns": {
									"deliveryProvider": "The address of (the default delivery provider)'s contract on this source   chain. This must be a contract that implements IDeliveryProvider."
								}
							},
							"quoteDeliveryPrice(uint16,uint256,bytes,address)": {
								"params": {
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"encodedExecutionParameters": "encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"encodedExecutionInfo": "encoded information on how the delivery will be executed        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` and `targetChainRefundPerGasUnused`             (which is the amount of target chain currency that will be refunded per unit of gas unused,              if a refundAddress is specified)",
									"nativePriceQuote": "Price, in units of current chain currency, that the delivery provider charges to perform the relay"
								}
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"nativePriceQuote": "Price, in units of current chain currency, that the delivery provider charges to perform the relay",
									"targetChainRefundPerGasUnused": "amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified.         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain."
								}
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)": {
								"params": {
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"nativePriceQuote": "Price, in units of current chain currency, that the delivery provider charges to perform the relay",
									"targetChainRefundPerGasUnused": "amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain."
								}
							},
							"quoteNativeForChain(uint16,uint256,address)": {
								"params": {
									"currentChainAmount": "The value that `paymentForExtraReceiverValue` will be set to",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"targetChainAmount": "The amount such that if `targetAddress` will be called with `msg.value` equal to         receiverValue + targetChainAmount"
								}
							},
							"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)": {
								"params": {
									"deliveryVaaKey": "VaaKey identifying the wormhole message containing the        previously published delivery instructions",
									"newDeliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"newEncodedExecutionParameters": "new encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"newReceiverValue": "new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "The target chain that the original delivery targeted. Must match targetChain from original delivery instructions"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing redelivery instructions"
								}
							},
							"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)": {
								"params": {
									"deliveryVaaKey": "VaaKey identifying the wormhole message containing the        previously published delivery instructions",
									"newDeliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"newGasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider, to the refund chain and address specified in the original request",
									"newReceiverValue": "new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetChain": "The target chain that the original delivery targeted. Must match targetChain from original delivery instructions"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing redelivery instructions"
								}
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"encodedExecutionParameters": "encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"encodedExecutionParameters": "encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`",
									"messageKeys": "Additional messagess to pass in as parameter in call to `targetAddress`",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)": {
								"params": {
									"consistencyLevel": "Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels",
									"deliveryProviderAddress": "The address of the desired delivery provider's implementation of IDeliveryProvider",
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"messageKeys": "Additional messagess to pass in as parameter in call to `targetAddress`",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"paymentForExtraReceiverValue": "amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`.",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)": {
								"params": {
									"gasLimit": "gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider",
									"payload": "arbitrary bytes to pass in as parameter in call to `targetAddress`",
									"receiverValue": "msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)",
									"refundAddress": "The address on `refundChain` to deliver any refund to",
									"refundChain": "The chain to deliver any refund to, in Wormhole Chain ID format",
									"targetAddress": "address to call on targetChain (that implements IWormholeReceiver)",
									"targetChain": "in Wormhole Chain ID format",
									"vaaKeys": "Additional VAAs to pass in as parameter in call to `targetAddress`"
								},
								"returns": {
									"sequence": "sequence number of published VAA containing delivery instructions"
								}
							}
						},
						"title": "IWormholeRelayerSend",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deliveryAttempted(bytes32)": "d0625a19",
							"deliveryFailureBlock(bytes32)": "5a3b92e8",
							"deliverySuccessBlock(bytes32)": "40984f08",
							"getDefaultDeliveryProvider()": "24320c9f",
							"getRegisteredWormholeRelayerContract(uint16)": "3e8267e7",
							"quoteDeliveryPrice(uint16,uint256,bytes,address)": "a79629d8",
							"quoteEVMDeliveryPrice(uint16,uint256,uint256)": "c23ee3c3",
							"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)": "80ebabd0",
							"quoteNativeForChain(uint16,uint256,address)": "2385904a",
							"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)": "b686d089",
							"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)": "8b0301b1",
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)": "c81fb7fe",
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)": "cee4bda0",
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)": "8fecdd02",
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)": "4b5ca6f4",
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)": "3a2c767d",
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)": "c055120e",
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])": "329a2be7",
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)": "32b2fc0e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deliveryQuote\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"}],\"name\":\"SendEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryAttempted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"attempted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliveryFailureBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"deliveryHash\",\"type\":\"bytes32\"}],\"name\":\"deliverySuccessBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultDeliveryProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deliveryProvider\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"getRegisteredWormholeRelayerContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"quoteDeliveryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativePriceQuote\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionInfo\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"quoteEVMDeliveryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativePriceQuote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetChainRefundPerGasUnused\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"quoteEVMDeliveryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nativePriceQuote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetChainRefundPerGasUnused\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"currentChainAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"quoteNativeForChain\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"targetChainAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey\",\"name\":\"deliveryVaaKey\",\"type\":\"tuple\"},{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"newReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"newEncodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"newDeliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"resend\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey\",\"name\":\"deliveryVaaKey\",\"type\":\"tuple\"},{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"newReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newDeliveryProviderAddress\",\"type\":\"address\"}],\"name\":\"resendToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"targetAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"refundAddress\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"send\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"targetAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedExecutionParameters\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"refundAddress\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"keyType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"encodedKey\",\"type\":\"bytes\"}],\"internalType\":\"struct MessageKey[]\",\"name\":\"messageKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"send\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"}],\"name\":\"sendPayloadToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"sendPayloadToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"sendToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentForExtraReceiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"deliveryProviderAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"keyType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"encodedKey\",\"type\":\"bytes\"}],\"internalType\":\"struct MessageKey[]\",\"name\":\"messageKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"sendToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"}],\"name\":\"sendVaasToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"receiverValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"internalType\":\"struct VaaKey[]\",\"name\":\"vaaKeys\",\"type\":\"tuple[]\"},{\"internalType\":\"uint16\",\"name\":\"refundChain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"refundAddress\",\"type\":\"address\"}],\"name\":\"sendVaasToEvm\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getDefaultDeliveryProvider()\":{\"returns\":{\"deliveryProvider\":\"The address of (the default delivery provider)'s contract on this source   chain. This must be a contract that implements IDeliveryProvider.\"}},\"quoteDeliveryPrice(uint16,uint256,bytes,address)\":{\"params\":{\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"encodedExecutionParameters\":\"encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"encodedExecutionInfo\":\"encoded information on how the delivery will be executed        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` and `targetChainRefundPerGasUnused`             (which is the amount of target chain currency that will be refunded per unit of gas unused,              if a refundAddress is specified)\",\"nativePriceQuote\":\"Price, in units of current chain currency, that the delivery provider charges to perform the relay\"}},\"quoteEVMDeliveryPrice(uint16,uint256,uint256)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"nativePriceQuote\":\"Price, in units of current chain currency, that the delivery provider charges to perform the relay\",\"targetChainRefundPerGasUnused\":\"amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified.         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain.\"}},\"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)\":{\"params\":{\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"nativePriceQuote\":\"Price, in units of current chain currency, that the delivery provider charges to perform the relay\",\"targetChainRefundPerGasUnused\":\"amount of target chain currency that will be refunded per unit of gas unused,         if a refundAddress is specified         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain.\"}},\"quoteNativeForChain(uint16,uint256,address)\":{\"params\":{\"currentChainAmount\":\"The value that `paymentForExtraReceiverValue` will be set to\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"targetChainAmount\":\"The amount such that if `targetAddress` will be called with `msg.value` equal to         receiverValue + targetChainAmount\"}},\"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)\":{\"params\":{\"deliveryVaaKey\":\"VaaKey identifying the wormhole message containing the        previously published delivery instructions\",\"newDeliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"newEncodedExecutionParameters\":\"new encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"newReceiverValue\":\"new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing redelivery instructions\"}},\"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)\":{\"params\":{\"deliveryVaaKey\":\"VaaKey identifying the wormhole message containing the        previously published delivery instructions\",\"newDeliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"newGasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider, to the refund chain and address specified in the original request\",\"newReceiverValue\":\"new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetChain\":\"The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing redelivery instructions\"}},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"encodedExecutionParameters\":\"encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"encodedExecutionParameters\":\"encoded information on how to execute delivery that may impact pricing        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\",\"messageKeys\":\"Additional messagess to pass in as parameter in call to `targetAddress`\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)\":{\"params\":{\"consistencyLevel\":\"Consistency level with which to publish the delivery instructions - see        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\",\"deliveryProviderAddress\":\"The address of the desired delivery provider's implementation of IDeliveryProvider\",\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"messageKeys\":\"Additional messagess to pass in as parameter in call to `targetAddress`\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"paymentForExtraReceiverValue\":\"amount (in current chain currency units) to spend on extra receiverValue        (in addition to the `receiverValue` specified)\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`.\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)\":{\"params\":{\"gasLimit\":\"gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\",\"payload\":\"arbitrary bytes to pass in as parameter in call to `targetAddress`\",\"receiverValue\":\"msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\",\"refundAddress\":\"The address on `refundChain` to deliver any refund to\",\"refundChain\":\"The chain to deliver any refund to, in Wormhole Chain ID format\",\"targetAddress\":\"address to call on targetChain (that implements IWormholeReceiver)\",\"targetChain\":\"in Wormhole Chain ID format\",\"vaaKeys\":\"Additional VAAs to pass in as parameter in call to `targetAddress`\"},\"returns\":{\"sequence\":\"sequence number of published VAA containing delivery instructions\"}}},\"title\":\"IWormholeRelayerSend\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deliveryAttempted(bytes32)\":{\"notice\":\"Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted\"},\"deliveryFailureBlock(bytes32)\":{\"notice\":\"block number of the latest attempt to execute a delivery that failed\"},\"deliverySuccessBlock(bytes32)\":{\"notice\":\"block number at which a delivery was successfully executed\"},\"getDefaultDeliveryProvider()\":{\"notice\":\"Returns the address of the current default delivery provider\"},\"quoteDeliveryPrice(uint16,uint256,bytes,address)\":{\"notice\":\"Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\"},\"quoteEVMDeliveryPrice(uint16,uint256,uint256)\":{\"notice\":\"Returns the price to request a relay to chain `targetChain`, using the default delivery provider\"},\"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)\":{\"notice\":\"Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\"},\"quoteNativeForChain(uint16,uint256,address)\":{\"notice\":\"Returns the (extra) amount of target chain currency that `targetAddress` will be called with, if the `paymentForExtraReceiverValue` field is set to `currentChainAmount`\"},\"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)\":{\"notice\":\"Requests a previously published delivery instruction to be redelivered This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, newReceiverValue, newEncodedExecutionParameters, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - (For EVM_V1) newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - (For EVM_V1) newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`\"},\"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)\":{\"notice\":\"Requests a previously published delivery instruction to be redelivered (e.g. with a different delivery provider) This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, newReceiverValue, newGasLimit, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction\"},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue\"},\"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\"},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendPayloadToEvm` function with `refundChain` and `refundAddress` as parameters\"},\"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\"},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue\"},\"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)\":{\"notice\":\"Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and external messages specified by `messageKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\"},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendVaasToEvm` function with `refundChain` and `refundAddress` as parameters\"},\"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)\":{\"notice\":\"Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\"}},\"notice\":\"The interface to request deliveries\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol\":\"IWormholeRelayerSend\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol\":{\"keccak256\":\"0xaa4afc2866e54ed9c9540e8ac4872d6ab9527884243087997a7d00f444004efc\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1f96f1d944798269dca0afed8cf3c64fda0493c375170783692d0f506bab20af\",\"dweb:/ipfs/QmXwQBXgvBMX8z8bd6excB5x9wHhnkRZQVmgswmFmqk9cu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deliveryAttempted(bytes32)": {
								"notice": "Returns true if a delivery has been attempted for the given deliveryHash Note: invalid deliveries where the tx reverts are not considered attempted"
							},
							"deliveryFailureBlock(bytes32)": {
								"notice": "block number of the latest attempt to execute a delivery that failed"
							},
							"deliverySuccessBlock(bytes32)": {
								"notice": "block number at which a delivery was successfully executed"
							},
							"getDefaultDeliveryProvider()": {
								"notice": "Returns the address of the current default delivery provider"
							},
							"quoteDeliveryPrice(uint16,uint256,bytes,address)": {
								"notice": "Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`"
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256)": {
								"notice": "Returns the price to request a relay to chain `targetChain`, using the default delivery provider"
							},
							"quoteEVMDeliveryPrice(uint16,uint256,uint256,address)": {
								"notice": "Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`"
							},
							"quoteNativeForChain(uint16,uint256,address)": {
								"notice": "Returns the (extra) amount of target chain currency that `targetAddress` will be called with, if the `paymentForExtraReceiverValue` field is set to `currentChainAmount`"
							},
							"resend((uint16,bytes32,uint64),uint16,uint256,bytes,address)": {
								"notice": "Requests a previously published delivery instruction to be redelivered This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, newReceiverValue, newEncodedExecutionParameters, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - (For EVM_V1) newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - (For EVM_V1) newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`"
							},
							"resendToEvm((uint16,bytes32,uint64),uint16,uint256,uint256,address)": {
								"notice": "Requests a previously published delivery instruction to be redelivered (e.g. with a different delivery provider) This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, newReceiverValue, newGasLimit, newDeliveryProviderAddress)*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction         - newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`*** This will only be able to succeed if the following is true **         - newGasLimit >= gas limit of the old instruction         - newReceiverValue >= receiver value of the old instruction"
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint16,bytes32,uint64)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue"
							},
							"send(uint16,bytes32,bytes,uint256,uint256,bytes,uint16,bytes32,address,(uint8,bytes)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!"
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256)": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendPayloadToEvm` function with `refundChain` and `refundAddress` as parameters"
							},
							"sendPayloadToEvm(uint16,address,bytes,uint256,uint256,uint16,address)": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`"
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint16,bytes32,uint64)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue"
							},
							"sendToEvm(uint16,address,bytes,uint256,uint256,uint256,uint16,address,address,(uint8,bytes)[],uint8)": {
								"notice": "Publishes an instruction for the delivery provider at `deliveryProviderAddress` to relay a payload and external messages specified by `messageKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei. Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!"
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[])": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)` Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendVaasToEvm` function with `refundChain` and `refundAddress` as parameters"
							},
							"sendVaasToEvm(uint16,address,bytes,uint256,uint256,(uint16,bytes32,uint64)[],uint16,address)": {
								"notice": "Publishes an instruction for the default delivery provider to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain` with gas limit `gasLimit` and `msg.value` equal to `receiverValue` Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain` `targetAddress` must implement the IWormholeReceiver interface This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`"
							}
						},
						"notice": "The interface to request deliveries",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Nebula-bridge-contracts/src/Base.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Nebula-bridge-contracts/src/Base.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Nebula-bridge-contracts/src/CCTPAndTokenBase.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Nebula-bridge-contracts/src/CCTPBase.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Nebula-bridge-contracts/src/CCTPBase.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Nebula-bridge-contracts/src/TokenBase.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Nebula-bridge-contracts/src/TokenBase.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Nebula-bridge-contracts/src/Utils.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Nebula-bridge-contracts/src/Utils.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Nebula-bridge-contracts/src/WormholeRelayerSDK.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Nebula-bridge-contracts/src/WormholeRelayerSDK.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Nebula-bridge-contracts/lib.d.sol": {
				"ast": {
					"absolutePath": "Nebula-bridge-contracts/lib.d.sol",
					"exportedSymbols": {
						"Inputs": [
							162
						],
						"Structs": [
							133
						]
					},
					"id": 163,
					"license": "Unlicensed",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Structs",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 133,
							"linearizedBaseContracts": [
								133
							],
							"name": "Structs",
							"nameLocation": "77:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "7e43b997",
									"id": 3,
									"name": "WrongFeeOrParams",
									"nameLocation": "100:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "116:2:0"
									},
									"src": "94:25:0"
								},
								{
									"canonicalName": "Structs.EthBridge",
									"id": 16,
									"members": [
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "_lzSrcCh",
											"nameLocation": "161:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "154:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 4,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "154:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "_lzDstChId",
											"nameLocation": "193:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "186:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 6,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "186:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "230:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "222:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 8,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "222:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"mutability": "mutable",
											"name": "dstReciver",
											"nameLocation": "255:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "247:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 10,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "247:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "timeStamp",
											"nameLocation": "284:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "276:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 12,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "276:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 15,
											"mutability": "mutable",
											"name": "delivered",
											"nameLocation": "309:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "304:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 14,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "304:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "EthBridge",
									"nameLocation": "134:9:0",
									"nodeType": "StructDefinition",
									"scope": 133,
									"src": "127:199:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Structs.TokenBridge",
									"id": 31,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "_wormSrcCh",
											"nameLocation": "370:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 31,
											"src": "363:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 17,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "363:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "_wormDstChId",
											"nameLocation": "411:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 31,
											"src": "404:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 19,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "404:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "457:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 31,
											"src": "449:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "449:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "481:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 31,
											"src": "473:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 23,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "473:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 26,
											"mutability": "mutable",
											"name": "dstReciver",
											"nameLocation": "506:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 31,
											"src": "498:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 25,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 28,
											"mutability": "mutable",
											"name": "timeStamp",
											"nameLocation": "535:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 31,
											"src": "527:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 27,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "527:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 30,
											"mutability": "mutable",
											"name": "delivered",
											"nameLocation": "560:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 31,
											"src": "555:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 29,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "555:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenBridge",
									"nameLocation": "341:11:0",
									"nodeType": "StructDefinition",
									"scope": 133,
									"src": "334:243:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Structs.LatestBridge",
									"id": 43,
									"members": [
										{
											"constant": false,
											"id": 33,
											"mutability": "mutable",
											"name": "isEth",
											"nameLocation": "620:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 43,
											"src": "615:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 32,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "615:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 36,
											"mutability": "mutable",
											"name": "ethbridge",
											"nameLocation": "745:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 43,
											"src": "735:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_EthBridge_$16_storage_ptr",
												"typeString": "struct Structs.EthBridge"
											},
											"typeName": {
												"id": 35,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 34,
													"name": "EthBridge",
													"nameLocations": [
														"735:9:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 16,
													"src": "735:9:0"
												},
												"referencedDeclaration": 16,
												"src": "735:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_EthBridge_$16_storage_ptr",
													"typeString": "struct Structs.EthBridge"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 39,
											"mutability": "mutable",
											"name": "tokenbridge",
											"nameLocation": "867:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 43,
											"src": "855:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenBridge_$31_storage_ptr",
												"typeString": "struct Structs.TokenBridge"
											},
											"typeName": {
												"id": 38,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 37,
													"name": "TokenBridge",
													"nameLocations": [
														"855:11:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 31,
													"src": "855:11:0"
												},
												"referencedDeclaration": 31,
												"src": "855:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenBridge_$31_storage_ptr",
													"typeString": "struct Structs.TokenBridge"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 42,
											"mutability": "mutable",
											"name": "additionalVaas",
											"nameLocation": "897:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 43,
											"src": "889:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
												"typeString": "bytes[]"
											},
											"typeName": {
												"baseType": {
													"id": 40,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "889:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"id": 41,
												"nodeType": "ArrayTypeName",
												"src": "889:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
													"typeString": "bytes[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "LatestBridge",
									"nameLocation": "592:12:0",
									"nodeType": "StructDefinition",
									"scope": 133,
									"src": "585:383:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Structs.UserData",
									"id": 52,
									"members": [
										{
											"constant": false,
											"id": 45,
											"mutability": "mutable",
											"name": "bridgeOut",
											"nameLocation": "1011:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 52,
											"src": "1003:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 44,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1003:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 47,
											"mutability": "mutable",
											"name": "bridgeIn",
											"nameLocation": "1039:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 52,
											"src": "1031:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 46,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1031:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 49,
											"mutability": "mutable",
											"name": "totalRef",
											"nameLocation": "1066:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 52,
											"src": "1058:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 48,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1058:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 51,
											"mutability": "mutable",
											"name": "points",
											"nameLocation": "1093:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 52,
											"src": "1085:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 50,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1085:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserData",
									"nameLocation": "984:8:0",
									"nodeType": "StructDefinition",
									"scope": 133,
									"src": "977:130:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Structs.Referals",
									"id": 57,
									"members": [
										{
											"constant": false,
											"id": 54,
											"mutability": "mutable",
											"name": "refered",
											"nameLocation": "1146:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1141:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 53,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1141:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 56,
											"mutability": "mutable",
											"name": "referer",
											"nameLocation": "1172:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1164:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 55,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1164:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Referals",
									"nameLocation": "1122:8:0",
									"nodeType": "StructDefinition",
									"scope": 133,
									"src": "1115:72:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Structs.User",
									"id": 67,
									"members": [
										{
											"constant": false,
											"id": 60,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "1226:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 67,
											"src": "1217:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserData_$52_storage_ptr",
												"typeString": "struct Structs.UserData"
											},
											"typeName": {
												"id": 59,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 58,
													"name": "UserData",
													"nameLocations": [
														"1217:8:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 52,
													"src": "1217:8:0"
												},
												"referencedDeclaration": 52,
												"src": "1217:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserData_$52_storage_ptr",
													"typeString": "struct Structs.UserData"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 63,
											"mutability": "mutable",
											"name": "maps",
											"nameLocation": "1250:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 67,
											"src": "1241:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserMaps_$110_storage_ptr",
												"typeString": "struct Structs.UserMaps"
											},
											"typeName": {
												"id": 62,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 61,
													"name": "UserMaps",
													"nameLocations": [
														"1241:8:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 110,
													"src": "1241:8:0"
												},
												"referencedDeclaration": 110,
												"src": "1241:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserMaps_$110_storage_ptr",
													"typeString": "struct Structs.UserMaps"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 66,
											"mutability": "mutable",
											"name": "referalData",
											"nameLocation": "1274:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 67,
											"src": "1265:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Referals_$57_storage_ptr",
												"typeString": "struct Structs.Referals"
											},
											"typeName": {
												"id": 65,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 64,
													"name": "Referals",
													"nameLocations": [
														"1265:8:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 57,
													"src": "1265:8:0"
												},
												"referencedDeclaration": 57,
												"src": "1265:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Referals_$57_storage_ptr",
													"typeString": "struct Structs.Referals"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "1202:4:0",
									"nodeType": "StructDefinition",
									"scope": 133,
									"src": "1195:98:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Structs.UserMaps",
									"id": 110,
									"members": [
										{
											"constant": false,
											"id": 71,
											"mutability": "mutable",
											"name": "outVolEth",
											"nameLocation": "1353:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 110,
											"src": "1327:35:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint16_$_t_uint256_$",
												"typeString": "mapping(uint16 => uint256)"
											},
											"typeName": {
												"id": 70,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 68,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1335:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "Mapping",
												"src": "1327:25:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint16_$_t_uint256_$",
													"typeString": "mapping(uint16 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 77,
											"mutability": "mutable",
											"name": "outVolToken",
											"nameLocation": "1418:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 110,
											"src": "1373:56:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint16_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(uint16 => uint256))"
											},
											"typeName": {
												"id": 76,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1373:44:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint16_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(uint16 => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 75,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 73,
														"name": "uint16",
														"nodeType": "ElementaryTypeName",
														"src": "1399:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Mapping",
													"src": "1391:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint16_$_t_uint256_$",
														"typeString": "mapping(uint16 => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 74,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1408:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 82,
											"mutability": "mutable",
											"name": "tokenBridgeIns",
											"nameLocation": "1495:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 110,
											"src": "1465:44:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenBridge_$31_storage_$",
												"typeString": "mapping(bytes32 => struct Structs.TokenBridge)"
											},
											"typeName": {
												"id": 81,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 78,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1465:29:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_TokenBridge_$31_storage_$",
													"typeString": "mapping(bytes32 => struct Structs.TokenBridge)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 80,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 79,
														"name": "TokenBridge",
														"nameLocations": [
															"1482:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 31,
														"src": "1482:11:0"
													},
													"referencedDeclaration": 31,
													"src": "1482:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenBridge_$31_storage_ptr",
														"typeString": "struct Structs.TokenBridge"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 89,
											"mutability": "mutable",
											"name": "tokenBridgeOuts",
											"nameLocation": "1570:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 110,
											"src": "1520:65:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint16_$_t_struct$_TokenBridge_$31_storage_$_$",
												"typeString": "mapping(uint256 => mapping(uint16 => struct Structs.TokenBridge))"
											},
											"typeName": {
												"id": 88,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1520:49:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint16_$_t_struct$_TokenBridge_$31_storage_$_$",
													"typeString": "mapping(uint256 => mapping(uint16 => struct Structs.TokenBridge))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 87,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 84,
														"name": "uint16",
														"nodeType": "ElementaryTypeName",
														"src": "1547:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Mapping",
													"src": "1539:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint16_$_t_struct$_TokenBridge_$31_storage_$",
														"typeString": "mapping(uint16 => struct Structs.TokenBridge)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 86,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 85,
															"name": "TokenBridge",
															"nameLocations": [
																"1556:11:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 31,
															"src": "1556:11:0"
														},
														"referencedDeclaration": 31,
														"src": "1556:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenBridge_$31_storage_ptr",
															"typeString": "struct Structs.TokenBridge"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 95,
											"mutability": "mutable",
											"name": "hashes",
											"nameLocation": "1640:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 110,
											"src": "1596:50:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint16_$_t_bytes32_$_$",
												"typeString": "mapping(uint256 => mapping(uint16 => bytes32))"
											},
											"typeName": {
												"id": 94,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1596:43:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint16_$_t_bytes32_$_$",
													"typeString": "mapping(uint256 => mapping(uint16 => bytes32))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 93,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 91,
														"name": "uint16",
														"nodeType": "ElementaryTypeName",
														"src": "1621:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Mapping",
													"src": "1613:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint16_$_t_bytes32_$",
														"typeString": "mapping(uint16 => bytes32)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 92,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1630:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "ethBridgesOut",
											"nameLocation": "1721:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 110,
											"src": "1675:59:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint16_$_t_struct$_EthBridge_$16_storage_$_$",
												"typeString": "mapping(uint256 => mapping(uint16 => struct Structs.EthBridge))"
											},
											"typeName": {
												"id": 101,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1675:45:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint16_$_t_struct$_EthBridge_$16_storage_$_$",
													"typeString": "mapping(uint256 => mapping(uint16 => struct Structs.EthBridge))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 100,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 97,
														"name": "uint16",
														"nodeType": "ElementaryTypeName",
														"src": "1700:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Mapping",
													"src": "1692:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint16_$_t_struct$_EthBridge_$16_storage_$",
														"typeString": "mapping(uint16 => struct Structs.EthBridge)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 99,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 98,
															"name": "EthBridge",
															"nameLocations": [
																"1709:9:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 16,
															"src": "1709:9:0"
														},
														"referencedDeclaration": 16,
														"src": "1709:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_EthBridge_$16_storage_ptr",
															"typeString": "struct Structs.EthBridge"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 109,
											"mutability": "mutable",
											"name": "ethBridgesIn",
											"nameLocation": "1791:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 110,
											"src": "1745:58:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint16_$_t_struct$_EthBridge_$16_storage_$_$",
												"typeString": "mapping(uint256 => mapping(uint16 => struct Structs.EthBridge))"
											},
											"typeName": {
												"id": 108,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1745:45:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint16_$_t_struct$_EthBridge_$16_storage_$_$",
													"typeString": "mapping(uint256 => mapping(uint16 => struct Structs.EthBridge))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 107,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 104,
														"name": "uint16",
														"nodeType": "ElementaryTypeName",
														"src": "1770:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Mapping",
													"src": "1762:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint16_$_t_struct$_EthBridge_$16_storage_$",
														"typeString": "mapping(uint16 => struct Structs.EthBridge)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 106,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 105,
															"name": "EthBridge",
															"nameLocations": [
																"1779:9:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 16,
															"src": "1779:9:0"
														},
														"referencedDeclaration": 16,
														"src": "1779:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_EthBridge_$16_storage_ptr",
															"typeString": "struct Structs.EthBridge"
														}
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserMaps",
									"nameLocation": "1308:8:0",
									"nodeType": "StructDefinition",
									"scope": 133,
									"src": "1301:510:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Structs.BridgeData",
									"id": 121,
									"members": [
										{
											"constant": false,
											"id": 112,
											"mutability": "mutable",
											"name": "pointPerTx",
											"nameLocation": "1855:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 121,
											"src": "1847:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 111,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1847:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 114,
											"mutability": "mutable",
											"name": "totalPoints",
											"nameLocation": "1884:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 121,
											"src": "1876:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 113,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1876:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 116,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "1911:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 121,
											"src": "1906:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 115,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1906:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 118,
											"mutability": "mutable",
											"name": "bridgeFeeEther",
											"nameLocation": "1938:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 121,
											"src": "1930:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 117,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1930:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 120,
											"mutability": "mutable",
											"name": "percentFee",
											"nameLocation": "1971:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 121,
											"src": "1963:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 119,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1963:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BridgeData",
									"nameLocation": "1826:10:0",
									"nodeType": "StructDefinition",
									"scope": 133,
									"src": "1819:170:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Structs.TokenReceived",
									"id": 132,
									"members": [
										{
											"constant": false,
											"id": 123,
											"mutability": "mutable",
											"name": "tokenHomeAddress",
											"nameLocation": "2048:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 132,
											"src": "2040:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 122,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2040:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 125,
											"mutability": "mutable",
											"name": "tokenHomeChain",
											"nameLocation": "2082:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 132,
											"src": "2075:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 124,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2075:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 127,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "2115:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 132,
											"src": "2107:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 126,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2107:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 129,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "2245:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 132,
											"src": "2237:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 128,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2237:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 131,
											"mutability": "mutable",
											"name": "amountNormalized",
											"nameLocation": "2270:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 132,
											"src": "2262:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 130,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2262:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenReceived",
									"nameLocation": "2015:13:0",
									"nodeType": "StructDefinition",
									"scope": 133,
									"src": "2008:337:0",
									"visibility": "public"
								}
							],
							"scope": 163,
							"src": "69:2279:0",
							"usedErrors": [
								3
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Inputs",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 162,
							"linearizedBaseContracts": [
								162
							],
							"name": "Inputs",
							"nameLocation": "2360:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Inputs.ERC20INPUT",
									"id": 146,
									"members": [
										{
											"constant": false,
											"id": 135,
											"mutability": "mutable",
											"name": "targetChain",
											"nameLocation": "2483:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 146,
											"src": "2476:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 134,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2476:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 137,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2513:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 146,
											"src": "2505:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 136,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2505:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 139,
											"mutability": "mutable",
											"name": "amt",
											"nameLocation": "2541:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 146,
											"src": "2533:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 138,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2533:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 141,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "2563:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 146,
											"src": "2555:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 140,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2555:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 143,
											"mutability": "mutable",
											"name": "dstGas",
											"nameLocation": "2587:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 146,
											"src": "2579:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 142,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2579:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 145,
											"mutability": "mutable",
											"name": "referal",
											"nameLocation": "2612:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 146,
											"src": "2604:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 144,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2604:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20INPUT",
									"nameLocation": "2454:10:0",
									"nodeType": "StructDefinition",
									"scope": 162,
									"src": "2447:180:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Inputs.ETHINPUT",
									"id": 161,
									"members": [
										{
											"constant": false,
											"id": 148,
											"mutability": "mutable",
											"name": "toChainId",
											"nameLocation": "2724:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "2717:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 147,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2717:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 150,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "2753:2:0",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "2745:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 149,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2745:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 152,
											"mutability": "mutable",
											"name": "amt",
											"nameLocation": "2775:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "2767:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 151,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2767:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 154,
											"mutability": "mutable",
											"name": "dstGas",
											"nameLocation": "2797:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "2789:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 153,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2789:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 156,
											"mutability": "mutable",
											"name": "useZro",
											"nameLocation": "2819:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "2814:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 155,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2814:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 158,
											"mutability": "mutable",
											"name": "zroPAddr",
											"nameLocation": "2844:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "2836:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 157,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2836:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 160,
											"mutability": "mutable",
											"name": "referal",
											"nameLocation": "2871:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "2863:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 159,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2863:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ETHINPUT",
									"nameLocation": "2698:8:0",
									"nodeType": "StructDefinition",
									"scope": 162,
									"src": "2691:195:0",
									"visibility": "public"
								}
							],
							"scope": 163,
							"src": "2352:537:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "41:2848:0"
				},
				"id": 0
			},
			"Nebula-bridge-contracts/src/Base.sol": {
				"ast": {
					"absolutePath": "Nebula-bridge-contracts/src/Base.sol",
					"exportedSymbols": {
						"Base": [
							261
						],
						"DeliveryProviderCannotReceivePayment": [
							3401
						],
						"DeliveryProviderDoesNotSupportMessageKeyType": [
							3405
						],
						"DeliveryProviderDoesNotSupportTargetChain": [
							3399
						],
						"IWormhole": [
							2948
						],
						"IWormholeReceiver": [
							2967
						],
						"IWormholeRelayer": [
							3382
						],
						"IWormholeRelayerBase": [
							3025
						],
						"IWormholeRelayerDelivery": [
							3377
						],
						"IWormholeRelayerSend": [
							3327
						],
						"InsufficientRelayerFunds": [
							3471
						],
						"InvalidDeliveryVaa": [
							3435
						],
						"InvalidEmitter": [
							3443
						],
						"InvalidMsgValue": [
							3391
						],
						"InvalidOverrideGasLimit": [
							3461
						],
						"InvalidOverrideReceiverValue": [
							3463
						],
						"InvalidOverrideRefundPerGasUnused": [
							3465
						],
						"InvalidPayloadId": [
							3417
						],
						"InvalidPayloadLength": [
							3423
						],
						"InvalidVaaKeyType": [
							3427
						],
						"MessageKey": [
							2985
						],
						"MessageKeysLengthDoesNotMatchMessagesLength": [
							3449
						],
						"NotAnEvmAddress": [
							3475
						],
						"RETURNDATA_TRUNCATION_THRESHOLD": [
							3385
						],
						"ReentrantDelivery": [
							3411
						],
						"RequestedGasLimitTooLow": [
							3393
						],
						"RequesterNotWormholeRelayer": [
							3455
						],
						"TargetChainIsNotThisChain": [
							3459
						],
						"TooManyMessageKeys": [
							3431
						],
						"VAA_KEY_TYPE": [
							2980
						],
						"VaaKey": [
							2977
						],
						"VaaKeysDoNotMatchVaas": [
							3453
						],
						"addressToBytes32CCTP": [
							2036
						],
						"fromWormholeFormat": [
							2024
						],
						"toWormholeFormat": [
							1991
						]
					},
					"id": 262,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 164,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol",
							"file": "./interfaces/IWormholeReceiver.sol",
							"id": 165,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 262,
							"sourceUnit": 2968,
							"src": "28:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol",
							"file": "./interfaces/IWormholeRelayer.sol",
							"id": 166,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 262,
							"sourceUnit": 3476,
							"src": "74:43:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/IWormhole.sol",
							"file": "./interfaces/IWormhole.sol",
							"id": 167,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 262,
							"sourceUnit": 2949,
							"src": "119:36:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/Utils.sol",
							"file": "./Utils.sol",
							"id": 168,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 262,
							"sourceUnit": 2037,
							"src": "157:21:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Base",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 261,
							"linearizedBaseContracts": [
								261
							],
							"name": "Base",
							"nameLocation": "200:4:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "da25b725",
									"id": 171,
									"mutability": "mutable",
									"name": "wormholeRelayer",
									"nameLocation": "236:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 261,
									"src": "212:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWormholeRelayer_$3382",
										"typeString": "contract IWormholeRelayer"
									},
									"typeName": {
										"id": 170,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 169,
											"name": "IWormholeRelayer",
											"nameLocations": [
												"212:16:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3382,
											"src": "212:16:1"
										},
										"referencedDeclaration": 3382,
										"src": "212:16:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWormholeRelayer_$3382",
											"typeString": "contract IWormholeRelayer"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "84acd1bb",
									"id": 174,
									"mutability": "mutable",
									"name": "wormhole",
									"nameLocation": "275:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 261,
									"src": "258:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWormhole_$2948",
										"typeString": "contract IWormhole"
									},
									"typeName": {
										"id": 173,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 172,
											"name": "IWormhole",
											"nameLocations": [
												"258:9:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2948,
											"src": "258:9:1"
										},
										"referencedDeclaration": 2948,
										"src": "258:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWormhole_$2948",
											"typeString": "contract IWormhole"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 176,
									"mutability": "mutable",
									"name": "registrationOwner",
									"nameLocation": "300:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 261,
									"src": "292:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 175,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "292:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 180,
									"mutability": "mutable",
									"name": "registeredSenders",
									"nameLocation": "351:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 261,
									"src": "324:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint16_$_t_bytes32_$",
										"typeString": "mapping(uint16 => bytes32)"
									},
									"typeName": {
										"id": 179,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 177,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "332:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"nodeType": "Mapping",
										"src": "324:26:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint16_$_t_bytes32_$",
											"typeString": "mapping(uint16 => bytes32)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 178,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "342:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "448:154:1",
										"statements": [
											{
												"expression": {
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "wormholeRelayer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "459:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWormholeRelayer_$3382",
															"typeString": "contract IWormholeRelayer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 189,
																"name": "_wormholeRelayer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "494:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 188,
															"name": "IWormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3382,
															"src": "477:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IWormholeRelayer_$3382_$",
																"typeString": "type(contract IWormholeRelayer)"
															}
														},
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "477:34:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWormholeRelayer_$3382",
															"typeString": "contract IWormholeRelayer"
														}
													},
													"src": "459:52:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWormholeRelayer_$3382",
														"typeString": "contract IWormholeRelayer"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "459:52:1"
											},
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "wormhole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "522:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWormhole_$2948",
															"typeString": "contract IWormhole"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 195,
																"name": "_wormhole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "543:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 194,
															"name": "IWormhole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2948,
															"src": "533:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IWormhole_$2948_$",
																"typeString": "type(contract IWormhole)"
															}
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "533:20:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWormhole_$2948",
															"typeString": "contract IWormhole"
														}
													},
													"src": "522:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWormhole_$2948",
														"typeString": "contract IWormhole"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "522:31:1"
											},
											{
												"expression": {
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 199,
														"name": "registrationOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "564:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 200,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "584:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "588:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "584:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "564:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "564:30:1"
											}
										]
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initBase",
									"nameLocation": "386:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "_wormholeRelayer",
												"nameLocation": "404:16:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "396:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "_wormhole",
												"nameLocation": "429:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "421:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:44:1"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "448:0:1"
									},
									"scope": 261,
									"src": "377:225:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "641:153:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 208,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "674:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "678:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "674:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 212,
																		"name": "wormholeRelayer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 171,
																		"src": "696:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWormholeRelayer_$3382",
																			"typeString": "contract IWormholeRelayer"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IWormholeRelayer_$3382",
																			"typeString": "contract IWormholeRelayer"
																		}
																	],
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "688:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 210,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "688:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "688:24:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "674:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d73672e73656e646572206973206e6f7420576f726d686f6c652052656c61796572",
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "727:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a784df99b54c4e5b96bc28db86cb1d2df9d65bd64e07dfeb9d77bc81539828a1",
																"typeString": "literal_string \"Msg.sender is not Wormhole Relayer\""
															},
															"value": "Msg.sender is not Wormhole Relayer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a784df99b54c4e5b96bc28db86cb1d2df9d65bd64e07dfeb9d77bc81539828a1",
																"typeString": "literal_string \"Msg.sender is not Wormhole Relayer\""
															}
														],
														"id": 207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "652:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "652:122:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "652:122:1"
											},
											{
												"id": 218,
												"nodeType": "PlaceholderStatement",
												"src": "785:1:1"
											}
										]
									},
									"id": 220,
									"name": "onlyWormholeRelayer",
									"nameLocation": "619:19:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "638:2:1"
									},
									"src": "610:184:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "873:149:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 227,
																	"name": "registeredSenders",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "906:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint16_$_t_bytes32_$",
																		"typeString": "mapping(uint16 => bytes32)"
																	}
																},
																"id": 229,
																"indexExpression": {
																	"id": 228,
																	"name": "sourceChain",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "924:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "906:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 230,
																"name": "sourceAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "940:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "906:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420726567697374657265642073656e646572",
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "968:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45c7780caa14c78da314fdccf7a10285ededa4af94cdba7fd53928c53e2adf7b",
																"typeString": "literal_string \"Not registered sender\""
															},
															"value": "Not registered sender"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45c7780caa14c78da314fdccf7a10285ededa4af94cdba7fd53928c53e2adf7b",
																"typeString": "literal_string \"Not registered sender\""
															}
														],
														"id": 226,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "884:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "884:118:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "884:118:1"
											},
											{
												"id": 235,
												"nodeType": "PlaceholderStatement",
												"src": "1013:1:1"
											}
										]
									},
									"id": 237,
									"name": "isRegisteredSender",
									"nameLocation": "811:18:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "837:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "830:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 221,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "830:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "858:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "850:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 223,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "829:43:1"
									},
									"src": "802:220:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "1477:193:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 246,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1510:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1514:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1510:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 248,
																"name": "registrationOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 176,
																"src": "1524:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1510:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616c6c6f77656420746f2073657420726567697374657265642073656e646572",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1556:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af64e1436a7704ba26fb37b7d363f0e4cd33d85e327e95510c2c8ad50943871e",
																"typeString": "literal_string \"Not allowed to set registered sender\""
															},
															"value": "Not allowed to set registered sender"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af64e1436a7704ba26fb37b7d363f0e4cd33d85e327e95510c2c8ad50943871e",
																"typeString": "literal_string \"Not allowed to set registered sender\""
															}
														],
														"id": 245,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1488:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1488:117:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "1488:117:1"
											},
											{
												"expression": {
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 253,
															"name": "registeredSenders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "1616:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint16_$_t_bytes32_$",
																"typeString": "mapping(uint16 => bytes32)"
															}
														},
														"id": 255,
														"indexExpression": {
															"id": 254,
															"name": "sourceChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "1634:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1616:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 256,
														"name": "sourceAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "1649:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1616:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "1616:46:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "1030:337:1",
										"text": " Sets the registered address for 'sourceChain' to 'sourceAddress'\n So that for messages from 'sourceChain', only ones from 'sourceAddress' are valid\n Assumes only one sender per chain is valid\n Sender is the address that called 'send' on the Wormhole Relayer contract on the source chain)"
									},
									"functionSelector": "dd12d68b",
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setRegisteredSender",
									"nameLocation": "1382:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "1419:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1412:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 239,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1412:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "1449:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1441:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 241,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1441:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1401:68:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1477:0:1"
									},
									"scope": 261,
									"src": "1373:297:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 262,
							"src": "182:1491:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:1675:1"
				},
				"id": 1
			},
			"Nebula-bridge-contracts/src/CCTPAndTokenBase.sol": {
				"ast": {
					"absolutePath": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol",
					"exportedSymbols": {
						"Base": [
							261
						],
						"CCTPAndTokenBase": [
							312
						],
						"CCTPAndTokenReceiver": [
							1144
						],
						"CCTPAndTokenSender": [
							735
						],
						"CCTPBase": [
							1221
						],
						"CCTPMessageLib": [
							1168
						],
						"CCTPReceiver": [
							1550
						],
						"CCTPSender": [
							1411
						],
						"DeliveryProviderCannotReceivePayment": [
							3401
						],
						"DeliveryProviderDoesNotSupportMessageKeyType": [
							3405
						],
						"DeliveryProviderDoesNotSupportTargetChain": [
							3399
						],
						"IERC20": [
							2218
						],
						"IMessageTransmitter": [
							2065
						],
						"IReceiver": [
							2079
						],
						"IRelayer": [
							2121
						],
						"ITokenBridge": [
							2618
						],
						"ITokenMessenger": [
							2140
						],
						"IWETH": [
							2632
						],
						"IWormhole": [
							2948
						],
						"IWormholeReceiver": [
							2967
						],
						"IWormholeRelayer": [
							3382
						],
						"IWormholeRelayerBase": [
							3025
						],
						"IWormholeRelayerDelivery": [
							3377
						],
						"IWormholeRelayerSend": [
							3327
						],
						"Inputs": [
							162
						],
						"InsufficientRelayerFunds": [
							3471
						],
						"InvalidDeliveryVaa": [
							3435
						],
						"InvalidEmitter": [
							3443
						],
						"InvalidMsgValue": [
							3391
						],
						"InvalidOverrideGasLimit": [
							3461
						],
						"InvalidOverrideReceiverValue": [
							3463
						],
						"InvalidOverrideRefundPerGasUnused": [
							3465
						],
						"InvalidPayloadId": [
							3417
						],
						"InvalidPayloadLength": [
							3423
						],
						"InvalidVaaKeyType": [
							3427
						],
						"MessageKey": [
							2985
						],
						"MessageKeysLengthDoesNotMatchMessagesLength": [
							3449
						],
						"NotAnEvmAddress": [
							3475
						],
						"RETURNDATA_TRUNCATION_THRESHOLD": [
							3385
						],
						"ReentrantDelivery": [
							3411
						],
						"RequestedGasLimitTooLow": [
							3393
						],
						"RequesterNotWormholeRelayer": [
							3455
						],
						"Structs": [
							133
						],
						"TargetChainIsNotThisChain": [
							3459
						],
						"TokenBase": [
							1588
						],
						"TokenReceiver": [
							1969
						],
						"TokenSender": [
							1725
						],
						"TooManyMessageKeys": [
							3431
						],
						"VAA_KEY_TYPE": [
							2980
						],
						"VaaKey": [
							2977
						],
						"VaaKeysDoNotMatchVaas": [
							3453
						],
						"addressToBytes32CCTP": [
							2036
						],
						"fromWormholeFormat": [
							2024
						],
						"toWormholeFormat": [
							1991
						]
					},
					"id": 1145,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 263,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol",
							"file": "./interfaces/IWormholeReceiver.sol",
							"id": 264,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1145,
							"sourceUnit": 2968,
							"src": "28:44:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol",
							"file": "./interfaces/IWormholeRelayer.sol",
							"id": 265,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1145,
							"sourceUnit": 3476,
							"src": "74:43:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/ITokenBridge.sol",
							"file": "./interfaces/ITokenBridge.sol",
							"id": 266,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1145,
							"sourceUnit": 2619,
							"src": "119:39:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 268,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1145,
							"sourceUnit": 2219,
							"src": "160:47:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 267,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2218,
										"src": "168:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol",
							"file": "./interfaces/CCTPInterfaces/ITokenMessenger.sol",
							"id": 269,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1145,
							"sourceUnit": 2141,
							"src": "209:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol",
							"file": "./interfaces/CCTPInterfaces/IMessageTransmitter.sol",
							"id": 270,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1145,
							"sourceUnit": 2066,
							"src": "268:61:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/Utils.sol",
							"file": "./Utils.sol",
							"id": 271,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1145,
							"sourceUnit": 2037,
							"src": "333:21:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/TokenBase.sol",
							"file": "./TokenBase.sol",
							"id": 272,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1145,
							"sourceUnit": 1970,
							"src": "356:25:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/CCTPBase.sol",
							"file": "./CCTPBase.sol",
							"id": 273,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1145,
							"sourceUnit": 1551,
							"src": "383:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 274,
										"name": "CCTPBase",
										"nameLocations": [
											"449:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1221,
										"src": "449:8:2"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "449:8:2"
								}
							],
							"canonicalName": "CCTPAndTokenBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 312,
							"linearizedBaseContracts": [
								312,
								1221,
								261
							],
							"name": "CCTPAndTokenBase",
							"nameLocation": "429:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c6328a46",
									"id": 278,
									"mutability": "mutable",
									"name": "tokenBridge",
									"nameLocation": "485:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 312,
									"src": "465:31:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ITokenBridge_$2618",
										"typeString": "contract ITokenBridge"
									},
									"typeName": {
										"id": 277,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 276,
											"name": "ITokenBridge",
											"nameLocations": [
												"465:12:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2618,
											"src": "465:12:2"
										},
										"referencedDeclaration": 2618,
										"src": "465:12:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ITokenBridge_$2618",
											"typeString": "contract ITokenBridge"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "CCTPAndTokenBase.Transfer",
									"id": 281,
									"members": [
										{
											"id": 279,
											"name": "TOKEN_BRIDGE",
											"nameLocation": "530:12:2",
											"nodeType": "EnumValue",
											"src": "530:12:2"
										},
										{
											"id": 280,
											"name": "CCTP",
											"nameLocation": "553:4:2",
											"nodeType": "EnumValue",
											"src": "553:4:2"
										}
									],
									"name": "Transfer",
									"nameLocation": "510:8:2",
									"nodeType": "EnumDefinition",
									"src": "505:59:2"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "819:245:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 297,
															"name": "_wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "858:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 298,
															"name": "_wormhole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "889:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 299,
															"name": "_circleMessageTransmitter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "913:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 300,
															"name": "_circleTokenMessenger",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "953:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "_USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "989:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 296,
														"name": "_initCCTPBase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "830:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address,address,address)"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "830:175:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 303,
												"nodeType": "ExpressionStatement",
												"src": "830:175:2"
											},
											{
												"expression": {
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 304,
														"name": "tokenBridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "1016:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokenBridge_$2618",
															"typeString": "contract ITokenBridge"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 306,
																"name": "_tokenBridge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "1043:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 305,
															"name": "ITokenBridge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2618,
															"src": "1030:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ITokenBridge_$2618_$",
																"typeString": "type(contract ITokenBridge)"
															}
														},
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1030:26:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokenBridge_$2618",
															"typeString": "contract ITokenBridge"
														}
													},
													"src": "1016:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITokenBridge_$2618",
														"typeString": "contract ITokenBridge"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "1016:40:2"
											}
										]
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initCCTP",
									"nameLocation": "581:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "_wormholeRelayer",
												"nameLocation": "609:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "601:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "_tokenBridge",
												"nameLocation": "644:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "636:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "_wormhole",
												"nameLocation": "675:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "667:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "_circleMessageTransmitter",
												"nameLocation": "703:25:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "695:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "_circleTokenMessenger",
												"nameLocation": "747:21:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "739:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "739:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "_USDC",
												"nameLocation": "787:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "779:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "590:209:2"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "819:0:2"
									},
									"scope": 312,
									"src": "572:492:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1145,
							"src": "411:656:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 313,
										"name": "CCTPAndTokenBase",
										"nameLocations": [
											"1111:16:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 312,
										"src": "1111:16:2"
									},
									"id": 314,
									"nodeType": "InheritanceSpecifier",
									"src": "1111:16:2"
								}
							],
							"canonicalName": "CCTPAndTokenSender",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 735,
							"linearizedBaseContracts": [
								735,
								312,
								1221,
								261
							],
							"name": "CCTPAndTokenSender",
							"nameLocation": "1089:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 317,
									"mutability": "constant",
									"name": "CONSISTENCY_LEVEL_FINALIZED",
									"nameLocation": "1220:27:2",
									"nodeType": "VariableDeclaration",
									"scope": 735,
									"src": "1196:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 315,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1196:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 316,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1250:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "internal"
								},
								{
									"global": false,
									"id": 319,
									"libraryName": {
										"id": 318,
										"name": "CCTPMessageLib",
										"nameLocations": [
											"1267:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1168,
										"src": "1267:14:2"
									},
									"nodeType": "UsingForDirective",
									"src": "1261:27:2"
								},
								{
									"constant": false,
									"functionSelector": "3a57cd63",
									"id": 323,
									"mutability": "mutable",
									"name": "chainIdToCCTPDomain",
									"nameLocation": "1329:19:2",
									"nodeType": "VariableDeclaration",
									"scope": 735,
									"src": "1296:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint16_$_t_uint32_$",
										"typeString": "mapping(uint16 => uint32)"
									},
									"typeName": {
										"id": 322,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 320,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "1304:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"nodeType": "Mapping",
										"src": "1296:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint16_$_t_uint32_$",
											"typeString": "mapping(uint16 => uint32)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 321,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "1314:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "2213:185:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 332,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2246:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2250:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2246:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 334,
																"name": "cctpConfigurationOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "2260:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2246:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616c6c6f77656420746f20736574204343545020446f6d61696e",
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2297:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d1631ba72e816445bf0fa4abac33b00c0668922896e9b84defb141e7fcc6b48f",
																"typeString": "literal_string \"Not allowed to set CCTP Domain\""
															},
															"value": "Not allowed to set CCTP Domain"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d1631ba72e816445bf0fa4abac33b00c0668922896e9b84defb141e7fcc6b48f",
																"typeString": "literal_string \"Not allowed to set CCTP Domain\""
															}
														],
														"id": 331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2224:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2224:116:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "2224:116:2"
											},
											{
												"expression": {
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 339,
															"name": "chainIdToCCTPDomain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "2351:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint16_$_t_uint32_$",
																"typeString": "mapping(uint16 => uint32)"
															}
														},
														"id": 341,
														"indexExpression": {
															"id": 340,
															"name": "chain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "2371:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2351:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 342,
														"name": "cctpDomain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "2380:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2351:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "2351:39:2"
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "1357:787:2",
										"text": " Sets the CCTP Domain corresponding to chain 'chain' to be 'cctpDomain'\n So that transfers of USDC to chain 'chain' use the target CCTP domain 'cctpDomain'\n This action can only be performed by 'cctpConfigurationOwner', who is set to be the deployer\n Currently, cctp domains are:\n Ethereum: Wormhole chain id 2, cctp domain 0\n Avalanche: Wormhole chain id 6, cctp domain 1\n Optimism: Wormhole chain id 24, cctp domain 2\n Arbitrum: Wormhole chain id 23, cctp domain 3\n Base: Wormhole chain id 30, cctp domain 6\n These can be set via:\n setCCTPDomain(2, 0);\n setCCTPDomain(6, 1);\n setCCTPDomain(24, 2);\n setCCTPDomain(23, 3);\n setCCTPDomain(30, 6);"
									},
									"functionSelector": "c6a4fd1c",
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setCCTPDomain",
									"nameLocation": "2159:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "chain",
												"nameLocation": "2180:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "2173:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 325,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2173:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "cctpDomain",
												"nameLocation": "2194:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "2187:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 327,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2187:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2172:33:2"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2213:0:2"
									},
									"scope": 735,
									"src": "2150:248:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "2474:52:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 353,
														"name": "chainIdToCCTPDomain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "2492:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint16_$_t_uint32_$",
															"typeString": "mapping(uint16 => uint32)"
														}
													},
													"id": 355,
													"indexExpression": {
														"id": 354,
														"name": "chain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "2512:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2492:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 352,
												"id": 356,
												"nodeType": "Return",
												"src": "2485:33:2"
											}
										]
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCCTPDomain",
									"nameLocation": "2415:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "chain",
												"nameLocation": "2436:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "2429:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 347,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2429:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:14:2"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "2466:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 350,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2466:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2465:8:2"
									},
									"scope": 735,
									"src": "2406:120:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "3118:568:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 377,
																	"name": "circleTokenMessenger",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1173,
																	"src": "3158:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ITokenMessenger_$2140",
																		"typeString": "contract ITokenMessenger"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ITokenMessenger_$2140",
																		"typeString": "contract ITokenMessenger"
																	}
																],
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3150:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 375,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3150:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3150:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 379,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "3181:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 372,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "3136:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 371,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2218,
																"src": "3129:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$2218_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3129:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2218",
																"typeString": "contract IERC20"
															}
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3142:7:2",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2205,
														"src": "3129:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3129:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "3129:59:2"
											},
											{
												"assignments": [
													383
												],
												"declarations": [
													{
														"constant": false,
														"id": 383,
														"mutability": "mutable",
														"name": "targetAddressBytes32",
														"nameLocation": "3207:20:2",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "3199:28:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 382,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3199:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 387,
												"initialValue": {
													"arguments": [
														{
															"id": 385,
															"name": "targetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "3251:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 384,
														"name": "addressToBytes32CCTP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2036,
														"src": "3230:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address) pure returns (bytes32)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3230:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3199:66:2"
											},
											{
												"assignments": [
													389
												],
												"declarations": [
													{
														"constant": false,
														"id": 389,
														"mutability": "mutable",
														"name": "nonce",
														"nameLocation": "3283:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "3276:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 388,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "3276:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 400,
												"initialValue": {
													"arguments": [
														{
															"id": 392,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "3351:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 394,
																	"name": "targetChain",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 363,
																	"src": "3386:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"id": 393,
																"name": "getCCTPDomain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "3372:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint16_$returns$_t_uint32_$",
																	"typeString": "function (uint16) view returns (uint32)"
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3372:26:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 396,
															"name": "targetAddressBytes32",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "3413:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 397,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "3448:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "targetAddressBytes32",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "3467:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 390,
															"name": "circleTokenMessenger",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "3291:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ITokenMessenger_$2140",
																"typeString": "contract ITokenMessenger"
															}
														},
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3312:24:2",
														"memberName": "depositForBurnWithCaller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2139,
														"src": "3291:45:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint32_$_t_bytes32_$_t_address_$_t_bytes32_$returns$_t_uint64_$",
															"typeString": "function (uint256,uint32,bytes32,address,bytes32) external returns (uint64)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3291:207:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3276:222:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 402,
																"name": "CCTPMessageLib",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "3558:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_CCTPMessageLib_$1168_$",
																	"typeString": "type(library CCTPMessageLib)"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3573:13:2",
															"memberName": "CCTP_KEY_TYPE",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1157,
															"src": "3558:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 407,
																					"name": "wormhole",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 174,
																					"src": "3636:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IWormhole_$2948",
																						"typeString": "contract IWormhole"
																					}
																				},
																				"id": 408,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3645:7:2",
																				"memberName": "chainId",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2850,
																				"src": "3636:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
																					"typeString": "function () view external returns (uint16)"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3636:18:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		],
																		"id": 406,
																		"name": "getCCTPDomain",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 358,
																		"src": "3622:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint16_$returns$_t_uint32_$",
																			"typeString": "function (uint16) view returns (uint32)"
																		}
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3622:33:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																{
																	"id": 411,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "3657:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	{
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																],
																"expression": {
																	"id": 404,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3605:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3609:12:2",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "3605:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3605:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 401,
														"name": "MessageKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2985,
														"src": "3529:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_MessageKey_$2985_storage_ptr_$",
															"typeString": "type(struct MessageKey storage pointer)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3529:149:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MessageKey_$2985_memory_ptr",
														"typeString": "struct MessageKey memory"
													}
												},
												"functionReturnParameters": 370,
												"id": 414,
												"nodeType": "Return",
												"src": "3509:169:2"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "2534:424:2",
										"text": " transferUSDC wraps common boilerplate for sending tokens to another chain using IWormholeRelayer\n - approves the Circle TokenMessenger contract to spend 'amount' of USDC\n - calls Circle's 'depositForBurnWithCaller'\n - returns key for inclusion in WormholeRelayer `additionalVaas` argument\n Note: this requires that only the targetAddress can redeem transfers."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferUSDC",
									"nameLocation": "2975:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3006:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "2998:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "3030:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "3023:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 362,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3023:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "3060:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "3052:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2987:93:2"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "3099:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MessageKey_$2985_memory_ptr",
													"typeString": "struct MessageKey"
												},
												"typeName": {
													"id": 368,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 367,
														"name": "MessageKey",
														"nameLocations": [
															"3099:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2985,
														"src": "3099:10:2"
													},
													"referencedDeclaration": 2985,
													"src": "3099:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MessageKey_$2985_storage_ptr",
														"typeString": "struct MessageKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3098:19:2"
									},
									"scope": 735,
									"src": "2966:720:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "4527:869:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "messageKeys",
														"nameLocation": "4558:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 502,
														"src": "4538:31:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_MessageKey_$2985_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct MessageKey[]"
														},
														"typeName": {
															"baseType": {
																"id": 435,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 434,
																	"name": "MessageKey",
																	"nameLocations": [
																		"4538:10:2"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2985,
																	"src": "4538:10:2"
																},
																"referencedDeclaration": 2985,
																"src": "4538:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MessageKey_$2985_storage_ptr",
																	"typeString": "struct MessageKey"
																}
															},
															"id": 436,
															"nodeType": "ArrayTypeName",
															"src": "4538:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MessageKey_$2985_storage_$dyn_storage_ptr",
																"typeString": "struct MessageKey[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 444,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4589:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4572:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_MessageKey_$2985_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct MessageKey memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 439,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 438,
																	"name": "MessageKey",
																	"nameLocations": [
																		"4576:10:2"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2985,
																	"src": "4576:10:2"
																},
																"referencedDeclaration": 2985,
																"src": "4576:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MessageKey_$2985_storage_ptr",
																	"typeString": "struct MessageKey"
																}
															},
															"id": 440,
															"nodeType": "ArrayTypeName",
															"src": "4576:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MessageKey_$2985_storage_$dyn_storage_ptr",
																"typeString": "struct MessageKey[]"
															}
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4572:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MessageKey_$2985_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct MessageKey memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:53:2"
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 445,
															"name": "messageKeys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4602:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MessageKey_$2985_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct MessageKey memory[] memory"
															}
														},
														"id": 447,
														"indexExpression": {
															"hexValue": "30",
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4614:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4602:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MessageKey_$2985_memory_ptr",
															"typeString": "struct MessageKey memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 449,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "4632:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 450,
																"name": "targetChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "4640:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 451,
																"name": "targetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "4653:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 448,
															"name": "transferUSDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4619:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint16_$_t_address_$returns$_t_struct$_MessageKey_$2985_memory_ptr_$",
																"typeString": "function (uint256,uint16,address) returns (struct MessageKey memory)"
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4619:48:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MessageKey_$2985_memory_ptr",
															"typeString": "struct MessageKey memory"
														}
													},
													"src": "4602:65:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MessageKey_$2985_memory_ptr",
														"typeString": "struct MessageKey memory"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "4602:65:2"
											},
											{
												"assignments": [
													456
												],
												"declarations": [
													{
														"constant": false,
														"id": 456,
														"mutability": "mutable",
														"name": "userPayload",
														"nameLocation": "4693:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 502,
														"src": "4680:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 455,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 459,
																"name": "Transfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "4718:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Transfer_$281_$",
																	"typeString": "type(enum CCTPAndTokenBase.Transfer)"
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4727:4:2",
															"memberName": "CCTP",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 280,
															"src": "4718:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Transfer_$281",
																"typeString": "enum CCTPAndTokenBase.Transfer"
															}
														},
														{
															"id": 461,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "4733:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 462,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "4741:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_Transfer_$281",
																"typeString": "enum CCTPAndTokenBase.Transfer"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 457,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4707:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4711:6:2",
														"memberName": "encode",
														"nodeType": "MemberAccess",
														"src": "4707:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4707:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4680:69:2"
											},
											{
												"assignments": [
													466
												],
												"declarations": [
													{
														"constant": false,
														"id": 466,
														"mutability": "mutable",
														"name": "defaultDeliveryProvider",
														"nameLocation": "4768:23:2",
														"nodeType": "VariableDeclaration",
														"scope": 502,
														"src": "4760:31:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 465,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4760:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 470,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 467,
															"name": "wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "4794:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWormholeRelayer_$3382",
																"typeString": "contract IWormholeRelayer"
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4824:26:2",
														"memberName": "getDefaultDeliveryProvider",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3326,
														"src": "4794:56:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4794:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4760:92:2"
											},
											{
												"assignments": [
													472,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 472,
														"mutability": "mutable",
														"name": "cost",
														"nameLocation": "4874:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 502,
														"src": "4866:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 471,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4866:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 479,
												"initialValue": {
													"arguments": [
														{
															"id": 475,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "4936:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 476,
															"name": "receiverValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "4962:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 477,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "4990:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 473,
															"name": "wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "4884:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWormholeRelayer_$3382",
																"typeString": "contract IWormholeRelayer"
															}
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:21:2",
														"memberName": "quoteEVMDeliveryPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3276,
														"src": "4884:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint16_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint16,uint256,uint256) view external returns (uint256,uint256)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4884:125:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4865:144:2"
											},
											{
												"expression": {
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 480,
														"name": "sequence",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "5022:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 485,
																"name": "targetChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "5086:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 486,
																"name": "targetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "5112:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 487,
																"name": "userPayload",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "5140:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 488,
																"name": "receiverValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "5166:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5194:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 490,
																"name": "gasLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 426,
																"src": "5210:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 491,
																"name": "targetChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "5233:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5267:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5259:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 492,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5259:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5259:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 496,
																"name": "defaultDeliveryProvider",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "5286:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 497,
																"name": "messageKeys",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "5324:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_MessageKey_$2985_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct MessageKey memory[] memory"
																}
															},
															{
																"id": 498,
																"name": "CONSISTENCY_LEVEL_FINALIZED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "5350:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_array$_t_struct$_MessageKey_$2985_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct MessageKey memory[] memory"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_array$_t_struct$_MessageKey_$2985_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct MessageKey memory[] memory"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"expression": {
																	"id": 481,
																	"name": "wormholeRelayer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 171,
																	"src": "5033:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWormholeRelayer_$3382",
																		"typeString": "contract IWormholeRelayer"
																	}
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5049:9:2",
																"memberName": "sendToEvm",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3168,
																"src": "5033:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint16_$_t_address_$_t_address_$_t_array$_t_struct$_MessageKey_$2985_memory_ptr_$dyn_memory_ptr_$_t_uint8_$returns$_t_uint64_$",
																	"typeString": "function (uint16,address,bytes memory,uint256,uint256,uint256,uint16,address,address,struct MessageKey memory[] memory,uint8) payable external returns (uint64)"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"id": 483,
																	"name": "cost",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "5066:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "5033:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint16_$_t_address_$_t_address_$_t_array$_t_struct$_MessageKey_$2985_memory_ptr_$dyn_memory_ptr_$_t_uint8_$returns$_t_uint64_$value",
																"typeString": "function (uint16,address,bytes memory,uint256,uint256,uint256,uint16,address,address,struct MessageKey memory[] memory,uint8) payable external returns (uint64)"
															}
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5033:355:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "5022:366:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "5022:366:2"
											}
										]
									},
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendUSDCWithPayloadToEvm",
									"nameLocation": "4284:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "4326:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4319:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 417,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4319:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "4356:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4348:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4348:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "4393:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4380:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4380:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "4419:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4411:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4411:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "4451:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4443:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4478:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4470:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4470:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4308:183:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "4517:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4510:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 430,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4510:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4509:17:2"
									},
									"scope": 735,
									"src": "4275:1121:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "6349:207:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 519,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "6413:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "6437:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 521,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "6462:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 522,
															"name": "targetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "6492:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "",
																	"id": 525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6530:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	},
																	"value": ""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6524:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 523,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "6524:5:2",
																	"typeDescriptions": {}
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6524:9:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 518,
														"name": "transferTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															530,
															590
														],
														"referencedDeclaration": 590,
														"src": "6380:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$returns$_t_struct$_VaaKey_$2977_memory_ptr_$",
															"typeString": "function (address,uint256,uint16,address,bytes memory) returns (struct VaaKey memory)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6380:168:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$2977_memory_ptr",
														"typeString": "struct VaaKey memory"
													}
												},
												"functionReturnParameters": 517,
												"id": 528,
												"nodeType": "Return",
												"src": "6360:188:2"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "5473:696:2",
										"text": " transferTokens wraps common boilerplate for sending tokens to another chain using IWormholeRelayer\n - approves tokenBridge to spend 'amount' of 'token'\n - emits token transfer VAA\n - returns VAA key for inclusion in WormholeRelayer `additionalVaas` argument\n Note: this function uses transferTokensWithPayload instead of transferTokens since the former requires that only the targetAddress\n       can redeem transfers. Otherwise it's possible for another address to redeem the transfer before the targetContract is invoked by\n       the offchain relayer and the target contract would have to be hardened against this."
									},
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "6184:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6217:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "6209:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6209:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "6233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "6265:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "6258:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 509,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6258:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "6295:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "6287:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6287:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:117:2"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "6334:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VaaKey_$2977_memory_ptr",
													"typeString": "struct VaaKey"
												},
												"typeName": {
													"id": 515,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 514,
														"name": "VaaKey",
														"nameLocations": [
															"6334:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2977,
														"src": "6334:6:2"
													},
													"referencedDeclaration": 2977,
													"src": "6334:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$2977_storage_ptr",
														"typeString": "struct VaaKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6333:15:2"
									},
									"scope": 735,
									"src": "6175:381:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "7659:562:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 553,
																	"name": "tokenBridge",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "7700:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ITokenBridge_$2618",
																		"typeString": "contract ITokenBridge"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ITokenBridge_$2618",
																		"typeString": "contract ITokenBridge"
																	}
																],
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7692:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 551,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7692:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7692:20:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 555,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "7714:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 548,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "7677:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 547,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2218,
																"src": "7670:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$2218_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7670:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2218",
																"typeString": "contract IERC20"
															}
														},
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7684:7:2",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2205,
														"src": "7670:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7670:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "7670:51:2"
											},
											{
												"assignments": [
													559
												],
												"declarations": [
													{
														"constant": false,
														"id": 559,
														"mutability": "mutable",
														"name": "sequence",
														"nameLocation": "7739:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 589,
														"src": "7732:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 558,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "7732:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 575,
												"initialValue": {
													"arguments": [
														{
															"id": 566,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "7856:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 567,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "7876:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 568,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "7897:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"arguments": [
																{
																	"id": 570,
																	"name": "targetAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "7940:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 569,
																"name": "toWormholeFormat",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1991,
																"src": "7923:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
																	"typeString": "function (address) pure returns (bytes32)"
																}
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7923:31:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "30",
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7969:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 573,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "7985:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 560,
																"name": "tokenBridge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "7750:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ITokenBridge_$2618",
																	"typeString": "contract ITokenBridge"
																}
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7762:25:2",
															"memberName": "transferTokensWithPayload",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "7750:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint16_$_t_bytes32_$_t_uint32_$_t_bytes_memory_ptr_$returns$_t_uint64_$",
																"typeString": "function (address,uint256,uint16,bytes32,uint32,bytes memory) payable external returns (uint64)"
															}
														},
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 562,
																		"name": "wormhole",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "7809:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWormhole_$2948",
																			"typeString": "contract IWormhole"
																		}
																	},
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7818:10:2",
																	"memberName": "messageFee",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2870,
																	"src": "7809:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7809:21:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "7750:91:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint16_$_t_bytes32_$_t_uint32_$_t_bytes_memory_ptr_$returns$_t_uint64_$value",
															"typeString": "function (address,uint256,uint16,bytes32,uint32,bytes memory) payable external returns (uint64)"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7750:253:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7732:271:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 580,
																			"name": "tokenBridge",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 278,
																			"src": "8101:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ITokenBridge_$2618",
																				"typeString": "contract ITokenBridge"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ITokenBridge_$2618",
																				"typeString": "contract ITokenBridge"
																			}
																		],
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8093:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 578,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8093:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8093:20:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 577,
																"name": "toWormholeFormat",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1991,
																"src": "8076:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
																	"typeString": "function (address) pure returns (bytes32)"
																}
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8076:38:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 583,
																	"name": "wormhole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "8142:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWormhole_$2948",
																		"typeString": "contract IWormhole"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8151:7:2",
																"memberName": "chainId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2850,
																"src": "8142:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
																	"typeString": "function () view external returns (uint16)"
																}
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8142:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 586,
															"name": "sequence",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "8189:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 576,
														"name": "VaaKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2977,
														"src": "8034:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_VaaKey_$2977_storage_ptr_$",
															"typeString": "type(struct VaaKey storage pointer)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"8060:14:2",
														"8133:7:2",
														"8179:8:2"
													],
													"names": [
														"emitterAddress",
														"chainId",
														"sequence"
													],
													"nodeType": "FunctionCall",
													"src": "8034:179:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$2977_memory_ptr",
														"typeString": "struct VaaKey memory"
													}
												},
												"functionReturnParameters": 546,
												"id": 588,
												"nodeType": "Return",
												"src": "8014:199:2"
											}
										]
									},
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "6564:884:2",
										"text": " transferTokens wraps common boilerplate for sending tokens to another chain using IWormholeRelayer.\n A payload can be included in the transfer vaa. By including a payload here instead of the deliveryVaa,\n fewer trust assumptions are placed on the WormholeRelayer contract.\n - approves tokenBridge to spend 'amount' of 'token'\n - emits token transfer VAA\n - returns VAA key for inclusion in WormholeRelayer `additionalVaas` argument\n Note: this function uses transferTokensWithPayload instead of transferTokens since the former requires that only the targetAddress\n       can redeem transfers. Otherwise it's possible for another address to redeem the transfer before the targetContract is invoked by\n       the offchain relayer and the target contract would have to be hardened against this."
									},
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "7463:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7496:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "7488:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7488:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7520:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "7512:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7512:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "7544:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "7537:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 536,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "7537:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "7574:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "7566:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "7611:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "7598:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 540,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7598:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7477:148:2"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "7644:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VaaKey_$2977_memory_ptr",
													"typeString": "struct VaaKey"
												},
												"typeName": {
													"id": 544,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 543,
														"name": "VaaKey",
														"nameLocations": [
															"7644:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2977,
														"src": "7644:6:2"
													},
													"referencedDeclaration": 2977,
													"src": "7644:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$2977_storage_ptr",
														"typeString": "struct VaaKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7643:15:2"
									},
									"scope": 735,
									"src": "7454:767:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "9039:594:2",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "vaaKeys",
														"nameLocation": "9066:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 658,
														"src": "9050:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct VaaKey[]"
														},
														"typeName": {
															"baseType": {
																"id": 611,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 610,
																	"name": "VaaKey",
																	"nameLocations": [
																		"9050:6:2"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2977,
																	"src": "9050:6:2"
																},
																"referencedDeclaration": 2977,
																"src": "9050:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaaKey_$2977_storage_ptr",
																	"typeString": "struct VaaKey"
																}
															},
															"id": 612,
															"nodeType": "ArrayTypeName",
															"src": "9050:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_storage_$dyn_storage_ptr",
																"typeString": "struct VaaKey[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9089:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 617,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9076:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct VaaKey memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 615,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 614,
																	"name": "VaaKey",
																	"nameLocations": [
																		"9080:6:2"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2977,
																	"src": "9080:6:2"
																},
																"referencedDeclaration": 2977,
																"src": "9080:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaaKey_$2977_storage_ptr",
																	"typeString": "struct VaaKey"
																}
															},
															"id": 616,
															"nodeType": "ArrayTypeName",
															"src": "9080:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_storage_$dyn_storage_ptr",
																"typeString": "struct VaaKey[]"
															}
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9076:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct VaaKey memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9050:41:2"
											},
											{
												"expression": {
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 621,
															"name": "vaaKeys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "9102:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct VaaKey memory[] memory"
															}
														},
														"id": 623,
														"indexExpression": {
															"hexValue": "30",
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9110:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9102:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$2977_memory_ptr",
															"typeString": "struct VaaKey memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 625,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "9130:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 626,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "9137:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 627,
																"name": "targetChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "9145:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 628,
																"name": "targetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "9158:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 624,
															"name": "transferTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																530,
																590
															],
															"referencedDeclaration": 530,
															"src": "9115:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint16_$_t_address_$returns$_t_struct$_VaaKey_$2977_memory_ptr_$",
																"typeString": "function (address,uint256,uint16,address) returns (struct VaaKey memory)"
															}
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9115:57:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$2977_memory_ptr",
															"typeString": "struct VaaKey memory"
														}
													},
													"src": "9102:70:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$2977_memory_ptr",
														"typeString": "struct VaaKey memory"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "9102:70:2"
											},
											{
												"assignments": [
													633,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 633,
														"mutability": "mutable",
														"name": "cost",
														"nameLocation": "9194:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 658,
														"src": "9186:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 632,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9186:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 640,
												"initialValue": {
													"arguments": [
														{
															"id": 636,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "9256:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 637,
															"name": "receiverValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "9282:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 638,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "9310:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 634,
															"name": "wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "9204:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWormholeRelayer_$3382",
																"typeString": "contract IWormholeRelayer"
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9220:21:2",
														"memberName": "quoteEVMDeliveryPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3276,
														"src": "9204:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint16_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint16,uint256,uint256) view external returns (uint256,uint256)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9204:125:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9185:144:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 645,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "9421:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 646,
															"name": "targetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "9451:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 649,
																		"name": "Transfer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "9494:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Transfer_$281_$",
																			"typeString": "type(enum CCTPAndTokenBase.Transfer)"
																		}
																	},
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "9503:12:2",
																	"memberName": "TOKEN_BRIDGE",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 279,
																	"src": "9494:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Transfer_$281",
																		"typeString": "enum CCTPAndTokenBase.Transfer"
																	}
																},
																{
																	"id": 651,
																	"name": "payload",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "9517:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Transfer_$281",
																		"typeString": "enum CCTPAndTokenBase.Transfer"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 647,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9483:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9487:6:2",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "9483:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9483:42:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 653,
															"name": "receiverValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "9544:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 654,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "9576:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 655,
															"name": "vaaKeys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "9603:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct VaaKey memory[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct VaaKey memory[] memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct VaaKey memory[] memory"
																}
															],
															"expression": {
																"id": 641,
																"name": "wormholeRelayer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "9360:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWormholeRelayer_$3382",
																	"typeString": "contract IWormholeRelayer"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9376:13:2",
															"memberName": "sendVaasToEvm",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3084,
															"src": "9360:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr_$returns$_t_uint64_$",
																"typeString": "function (uint16,address,bytes memory,uint256,uint256,struct VaaKey memory[] memory) payable external returns (uint64)"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 643,
																"name": "cost",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "9397:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "9360:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr_$returns$_t_uint64_$value",
															"typeString": "function (uint16,address,bytes memory,uint256,uint256,struct VaaKey memory[] memory) payable external returns (uint64)"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9360:265:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 608,
												"id": 657,
												"nodeType": "Return",
												"src": "9340:285:2"
											}
										]
									},
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendTokenWithPayloadToEvm",
									"nameLocation": "8780:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "8823:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "8816:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 591,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8816:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "8853:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "8845:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8845:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "8890:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "8877:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 595,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8877:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "8916:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "8908:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "8948:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "8940:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8940:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "8967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8999:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "8991:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8991:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8805:207:2"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "9031:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 606,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "9031:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9030:8:2"
									},
									"scope": 735,
									"src": "8771:862:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "9970:656:2",
										"statements": [
											{
												"assignments": [
													686
												],
												"declarations": [
													{
														"constant": false,
														"id": 686,
														"mutability": "mutable",
														"name": "vaaKeys",
														"nameLocation": "9997:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 733,
														"src": "9981:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct VaaKey[]"
														},
														"typeName": {
															"baseType": {
																"id": 684,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 683,
																	"name": "VaaKey",
																	"nameLocations": [
																		"9981:6:2"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2977,
																	"src": "9981:6:2"
																},
																"referencedDeclaration": 2977,
																"src": "9981:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaaKey_$2977_storage_ptr",
																	"typeString": "struct VaaKey"
																}
															},
															"id": 685,
															"nodeType": "ArrayTypeName",
															"src": "9981:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_storage_$dyn_storage_ptr",
																"typeString": "struct VaaKey[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 693,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10020:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "10007:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct VaaKey memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 688,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 687,
																	"name": "VaaKey",
																	"nameLocations": [
																		"10011:6:2"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2977,
																	"src": "10011:6:2"
																},
																"referencedDeclaration": 2977,
																"src": "10011:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaaKey_$2977_storage_ptr",
																	"typeString": "struct VaaKey"
																}
															},
															"id": 689,
															"nodeType": "ArrayTypeName",
															"src": "10011:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_storage_$dyn_storage_ptr",
																"typeString": "struct VaaKey[]"
															}
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10007:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct VaaKey memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9981:41:2"
											},
											{
												"expression": {
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 694,
															"name": "vaaKeys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "10033:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct VaaKey memory[] memory"
															}
														},
														"id": 696,
														"indexExpression": {
															"hexValue": "30",
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10041:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10033:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$2977_memory_ptr",
															"typeString": "struct VaaKey memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 698,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "10061:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 699,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "10068:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 700,
																"name": "targetChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 661,
																"src": "10076:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 701,
																"name": "targetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "10089:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 697,
															"name": "transferTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																530,
																590
															],
															"referencedDeclaration": 530,
															"src": "10046:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint16_$_t_address_$returns$_t_struct$_VaaKey_$2977_memory_ptr_$",
																"typeString": "function (address,uint256,uint16,address) returns (struct VaaKey memory)"
															}
														},
														"id": 702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10046:57:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$2977_memory_ptr",
															"typeString": "struct VaaKey memory"
														}
													},
													"src": "10033:70:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$2977_memory_ptr",
														"typeString": "struct VaaKey memory"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "10033:70:2"
											},
											{
												"assignments": [
													706,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "cost",
														"nameLocation": "10125:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 733,
														"src": "10117:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10117:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 713,
												"initialValue": {
													"arguments": [
														{
															"id": 709,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "10187:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 710,
															"name": "receiverValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "10213:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 711,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "10241:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 707,
															"name": "wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "10135:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWormholeRelayer_$3382",
																"typeString": "contract IWormholeRelayer"
															}
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10151:21:2",
														"memberName": "quoteEVMDeliveryPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3276,
														"src": "10135:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint16_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint16,uint256,uint256) view external returns (uint256,uint256)"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10135:125:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10116:144:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 718,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "10352:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 719,
															"name": "targetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "10382:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 722,
																		"name": "Transfer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "10425:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Transfer_$281_$",
																			"typeString": "type(enum CCTPAndTokenBase.Transfer)"
																		}
																	},
																	"id": 723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "10434:12:2",
																	"memberName": "TOKEN_BRIDGE",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 279,
																	"src": "10425:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Transfer_$281",
																		"typeString": "enum CCTPAndTokenBase.Transfer"
																	}
																},
																{
																	"id": 724,
																	"name": "payload",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "10448:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Transfer_$281",
																		"typeString": "enum CCTPAndTokenBase.Transfer"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 720,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "10414:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "10418:6:2",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "10414:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10414:42:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 726,
															"name": "receiverValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "10475:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 727,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "10507:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 728,
															"name": "vaaKeys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "10534:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct VaaKey memory[] memory"
															}
														},
														{
															"id": 729,
															"name": "refundChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "10560:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 730,
															"name": "refundAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "10590:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct VaaKey memory[] memory"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct VaaKey memory[] memory"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 714,
																"name": "wormholeRelayer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "10291:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWormholeRelayer_$3382",
																	"typeString": "contract IWormholeRelayer"
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10307:13:2",
															"memberName": "sendVaasToEvm",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3108,
															"src": "10291:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr_$_t_uint16_$_t_address_$returns$_t_uint64_$",
																"typeString": "function (uint16,address,bytes memory,uint256,uint256,struct VaaKey memory[] memory,uint16,address) payable external returns (uint64)"
															}
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 716,
																"name": "cost",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 706,
																"src": "10328:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "10291:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr_$_t_uint16_$_t_address_$returns$_t_uint64_$value",
															"typeString": "function (uint16,address,bytes memory,uint256,uint256,struct VaaKey memory[] memory,uint16,address) payable external returns (uint64)"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10291:327:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 681,
												"id": 732,
												"nodeType": "Return",
												"src": "10271:347:2"
											}
										]
									},
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendTokenWithPayloadToEvm",
									"nameLocation": "9650:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "9693:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "9686:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 660,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9686:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "9723:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "9715:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "9760:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "9747:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 664,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9747:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "9786:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "9778:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "9818:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "9810:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9810:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9845:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "9837:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9837:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9869:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "9861:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9861:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "refundChain",
												"nameLocation": "9893:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "9886:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 674,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9886:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "refundAddress",
												"nameLocation": "9923:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "9915:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9915:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9675:268:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "9962:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 679,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "9962:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9961:8:2"
									},
									"scope": 735,
									"src": "9641:985:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1145,
							"src": "1071:9558:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 736,
										"name": "CCTPAndTokenBase",
										"nameLocations": [
											"10675:16:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 312,
										"src": "10675:16:2"
									},
									"id": 737,
									"nodeType": "InheritanceSpecifier",
									"src": "10675:16:2"
								}
							],
							"canonicalName": "CCTPAndTokenReceiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1144,
							"linearizedBaseContracts": [
								1144,
								312,
								1221,
								261
							],
							"name": "CCTPAndTokenReceiver",
							"nameLocation": "10651:20:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "10795:357:2",
										"statements": [
											{
												"assignments": [
													745,
													747
												],
												"declarations": [
													{
														"constant": false,
														"id": 745,
														"mutability": "mutable",
														"name": "message",
														"nameLocation": "10820:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "10807:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 744,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10807:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 747,
														"mutability": "mutable",
														"name": "signature",
														"nameLocation": "10842:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "10829:22:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 746,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10829:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 757,
												"initialValue": {
													"arguments": [
														{
															"id": 750,
															"name": "cctpMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "10880:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10907:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 751,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "10907:5:2",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10914:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 753,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "10914:5:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 755,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10906:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(bytes storage pointer),type(bytes storage pointer))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(bytes storage pointer),type(bytes storage pointer))"
															}
														],
														"expression": {
															"id": 748,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "10855:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10859:6:2",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "10855:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10855:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bytes memory,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10806:125:2"
											},
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "beforeBalance",
														"nameLocation": "10950:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 789,
														"src": "10942:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 758,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10942:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 769,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 766,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10997:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CCTPAndTokenReceiver_$1144",
																		"typeString": "contract CCTPAndTokenReceiver"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CCTPAndTokenReceiver_$1144",
																		"typeString": "contract CCTPAndTokenReceiver"
																	}
																],
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10989:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 764,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10989:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10989:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 761,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "10973:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 760,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2218,
																"src": "10966:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$2218_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10966:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2218",
																"typeString": "contract IERC20"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10979:9:2",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2175,
														"src": "10966:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10966:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10942:61:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 773,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "11054:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 774,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "11063:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 770,
															"name": "circleMessageTransmitter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "11014:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMessageTransmitter_$2065",
																"typeString": "contract IMessageTransmitter"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11039:14:2",
														"memberName": "receiveMessage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2078,
														"src": "11014:39:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory,bytes memory) external returns (bool)"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11014:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "11014:59:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 783,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "11122:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CCTPAndTokenReceiver_$1144",
																			"typeString": "contract CCTPAndTokenReceiver"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CCTPAndTokenReceiver_$1144",
																			"typeString": "contract CCTPAndTokenReceiver"
																		}
																	],
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11114:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 781,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11114:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11114:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 778,
																		"name": "USDC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1178,
																		"src": "11098:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 777,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2218,
																	"src": "11091:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$2218_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11091:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$2218",
																	"typeString": "contract IERC20"
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11104:9:2",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2175,
															"src": "11091:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11091:37:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 786,
														"name": "beforeBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "11131:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11091:53:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 743,
												"id": 788,
												"nodeType": "Return",
												"src": "11084:60:2"
											}
										]
									},
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "redeemUSDC",
									"nameLocation": "10708:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "cctpMessage",
												"nameLocation": "10742:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "10729:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 738,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10729:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10718:42:2"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10787:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "10779:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10778:16:2"
									},
									"scope": 1144,
									"src": "10699:453:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "CCTPAndTokenReceiver.TokenReceived",
									"id": 801,
									"members": [
										{
											"constant": false,
											"id": 792,
											"mutability": "mutable",
											"name": "tokenHomeAddress",
											"nameLocation": "11200:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 801,
											"src": "11192:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 791,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "11192:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 794,
											"mutability": "mutable",
											"name": "tokenHomeChain",
											"nameLocation": "11234:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 801,
											"src": "11227:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 793,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "11227:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 796,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "11267:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 801,
											"src": "11259:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 795,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11259:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 798,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "11397:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 801,
											"src": "11389:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 797,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11389:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 800,
											"mutability": "mutable",
											"name": "amountNormalized",
											"nameLocation": "11422:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 801,
											"src": "11414:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 799,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11414:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenReceived",
									"nameLocation": "11167:13:2",
									"nodeType": "StructDefinition",
									"scope": 1144,
									"src": "11160:337:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "11603:234:2",
										"statements": [
											{
												"assignments": [
													null,
													809
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 809,
														"mutability": "mutable",
														"name": "queriedDecimals",
														"nameLocation": "11657:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 831,
														"src": "11644:28:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 808,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "11644:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 820,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "646563696d616c732829",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11747:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_313ce567add4d438edf58b94ff345d7d38c45b17dfc0f947988d7819dca364f9",
																		"typeString": "literal_string \"decimals()\""
																	},
																	"value": "decimals()"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_313ce567add4d438edf58b94ff345d7d38c45b17dfc0f947988d7819dca364f9",
																		"typeString": "literal_string \"decimals()\""
																	}
																],
																"expression": {
																	"id": 815,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "11723:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "11727:19:2",
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "11723:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11723:37:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 812,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "11684:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11676:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 810,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11676:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11676:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11698:10:2",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "11676:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11676:95:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11641:130:2"
											},
											{
												"expression": {
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 821,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "11782:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 824,
																"name": "queriedDecimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "11804:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"components": [
																	{
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11822:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 825,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "11822:5:2",
																			"typeDescriptions": {}
																		}
																	}
																],
																"id": 827,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11821:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																}
															],
															"expression": {
																"id": 822,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "11793:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "11797:6:2",
															"memberName": "decode",
															"nodeType": "MemberAccess",
															"src": "11793:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11793:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "11782:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "11782:47:2"
											}
										]
									},
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDecimals",
									"nameLocation": "11514:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "11544:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "11536:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11536:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11525:38:2"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "11593:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "11587:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 805,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11587:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11586:16:2"
									},
									"scope": 1144,
									"src": "11505:332:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "12011:209:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 841,
															"name": "tokenHomeChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "12042:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 842,
																	"name": "wormhole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "12060:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWormhole_$2948",
																		"typeString": "contract IWormhole"
																	}
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12069:7:2",
																"memberName": "chainId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2850,
																"src": "12060:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
																	"typeString": "function () view external returns (uint16)"
																}
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12060:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "12042:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 851,
																"name": "tokenHomeChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "12179:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 852,
																"name": "tokenHomeAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 836,
																"src": "12195:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 849,
																"name": "tokenBridge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "12154:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ITokenBridge_$2618",
																	"typeString": "contract ITokenBridge"
																}
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12166:12:2",
															"memberName": "wrappedAsset",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2533,
															"src": "12154:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint16_$_t_bytes32_$returns$_t_address_$",
																"typeString": "function (uint16,bytes32) view external returns (address)"
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12154:58:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "12042:170:2",
													"trueExpression": {
														"arguments": [
															{
																"id": 847,
																"name": "tokenHomeAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 836,
																"src": "12117:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 846,
															"name": "fromWormholeFormat",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "12098:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_address_$",
																"typeString": "function (bytes32) pure returns (address)"
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12098:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 840,
												"id": 855,
												"nodeType": "Return",
												"src": "12022:190:2"
											}
										]
									},
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenAddressOnThisChain",
									"nameLocation": "11854:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "tokenHomeChain",
												"nameLocation": "11898:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "11891:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 833,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "11891:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "tokenHomeAddress",
												"nameLocation": "11931:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "11923:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 835,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11923:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11880:74:2"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "tokenAddressOnThisChain",
												"nameLocation": "11986:23:2",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "11978:31:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11978:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11977:33:2"
									},
									"scope": 1144,
									"src": "11845:375:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "12452:3819:2",
										"statements": [
											{
												"assignments": [
													873
												],
												"declarations": [
													{
														"constant": false,
														"id": 873,
														"mutability": "mutable",
														"name": "transferType",
														"nameLocation": "12472:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 1112,
														"src": "12463:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Transfer_$281",
															"typeString": "enum CCTPAndTokenBase.Transfer"
														},
														"typeName": {
															"id": 872,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 871,
																"name": "Transfer",
																"nameLocations": [
																	"12463:8:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 281,
																"src": "12463:8:2"
															},
															"referencedDeclaration": 281,
															"src": "12463:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Transfer_$281",
																"typeString": "enum CCTPAndTokenBase.Transfer"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 880,
												"initialValue": {
													"arguments": [
														{
															"id": 876,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "12498:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 877,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "12508:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Transfer_$281_$",
																		"typeString": "type(enum CCTPAndTokenBase.Transfer)"
																	}
																}
															],
															"id": 878,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "12507:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Transfer_$281_$",
																"typeString": "type(enum CCTPAndTokenBase.Transfer)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_type$_t_enum$_Transfer_$281_$",
																"typeString": "type(enum CCTPAndTokenBase.Transfer)"
															}
														],
														"expression": {
															"id": 874,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "12487:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12491:6:2",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "12487:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12487:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Transfer_$281",
														"typeString": "enum CCTPAndTokenBase.Transfer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12463:55:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Transfer_$281",
														"typeString": "enum CCTPAndTokenBase.Transfer"
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 881,
														"name": "transferType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "12533:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Transfer_$281",
															"typeString": "enum CCTPAndTokenBase.Transfer"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 882,
															"name": "Transfer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "12549:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Transfer_$281_$",
																"typeString": "type(enum CCTPAndTokenBase.Transfer)"
															}
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12558:12:2",
														"memberName": "TOKEN_BRIDGE",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "12549:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Transfer_$281",
															"typeString": "enum CCTPAndTokenBase.Transfer"
														}
													},
													"src": "12533:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_Transfer_$281",
															"typeString": "enum CCTPAndTokenBase.Transfer"
														},
														"id": 1048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1045,
															"name": "transferType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "14797:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Transfer_$281",
																"typeString": "enum CCTPAndTokenBase.Transfer"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1046,
																"name": "Transfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "14813:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Transfer_$281_$",
																	"typeString": "type(enum CCTPAndTokenBase.Transfer)"
																}
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "14822:4:2",
															"memberName": "CCTP",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 280,
															"src": "14813:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Transfer_$281",
																"typeString": "enum CCTPAndTokenBase.Transfer"
															}
														},
														"src": "14797:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1109,
														"nodeType": "Block",
														"src": "16206:58:2",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "496e76616c6964207472616e736665722074797065",
																			"id": 1106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16228:23:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_ebb9bf36d3adcafe771c5c8ee6431ea47a39833a16d4d42adfad87feb35493d2",
																				"typeString": "literal_string \"Invalid transfer type\""
																			},
																			"value": "Invalid transfer type"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_ebb9bf36d3adcafe771c5c8ee6431ea47a39833a16d4d42adfad87feb35493d2",
																				"typeString": "literal_string \"Invalid transfer type\""
																			}
																		],
																		"id": 1105,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "16221:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 1107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16221:31:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1108,
																"nodeType": "ExpressionStatement",
																"src": "16221:31:2"
															}
														]
													},
													"id": 1110,
													"nodeType": "IfStatement",
													"src": "14793:1471:2",
													"trueBody": {
														"id": 1104,
														"nodeType": "Block",
														"src": "14828:1372:2",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1050,
																					"name": "additionalMessages",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 862,
																					"src": "15231:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																						"typeString": "bytes memory[] memory"
																					}
																				},
																				"id": 1051,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "15250:6:2",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "15231:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15260:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "15231:30:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "434354503a204174206d6f7374206f6e65204d65737361676520697320737570706f72746564",
																			"id": 1054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15280:40:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_95c2a5457827ff1d830352d4d883397dc3debe8649a9022b6a18da70b36679cb",
																				"typeString": "literal_string \"CCTP: At most one Message is supported\""
																			},
																			"value": "CCTP: At most one Message is supported"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_95c2a5457827ff1d830352d4d883397dc3debe8649a9022b6a18da70b36679cb",
																				"typeString": "literal_string \"CCTP: At most one Message is supported\""
																			}
																		],
																		"id": 1049,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "15205:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15205:130:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1056,
																"nodeType": "ExpressionStatement",
																"src": "15205:130:2"
															},
															{
																"assignments": [
																	1058
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1058,
																		"mutability": "mutable",
																		"name": "amountUSDCReceived",
																		"nameLocation": "15360:18:2",
																		"nodeType": "VariableDeclaration",
																		"scope": 1104,
																		"src": "15352:26:2",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1057,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "15352:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1059,
																"nodeType": "VariableDeclarationStatement",
																"src": "15352:26:2"
															},
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1060,
																			"name": "additionalMessages",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 862,
																			"src": "15397:18:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																				"typeString": "bytes memory[] memory"
																			}
																		},
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15416:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "15397:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15426:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "15397:30:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1073,
																"nodeType": "IfStatement",
																"src": "15393:125:2",
																"trueBody": {
																	"id": 1072,
																	"nodeType": "Block",
																	"src": "15429:89:2",
																	"statements": [
																		{
																			"expression": {
																				"id": 1070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1064,
																					"name": "amountUSDCReceived",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1058,
																					"src": "15448:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"baseExpression": {
																								"id": 1066,
																								"name": "additionalMessages",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 862,
																								"src": "15480:18:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																									"typeString": "bytes memory[] memory"
																								}
																							},
																							"id": 1068,
																							"indexExpression": {
																								"hexValue": "30",
																								"id": 1067,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "15499:1:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								},
																								"value": "0"
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "15480:21:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						],
																						"id": 1065,
																						"name": "redeemUSDC",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 790,
																						"src": "15469:10:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_uint256_$",
																							"typeString": "function (bytes memory) returns (uint256)"
																						}
																					},
																					"id": 1069,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "15469:33:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15448:54:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1071,
																			"nodeType": "ExpressionStatement",
																			"src": "15448:54:2"
																		}
																	]
																}
															},
															{
																"assignments": [
																	null,
																	1075,
																	1077
																],
																"declarations": [
																	null,
																	{
																		"constant": false,
																		"id": 1075,
																		"mutability": "mutable",
																		"name": "amount",
																		"nameLocation": "15545:6:2",
																		"nodeType": "VariableDeclaration",
																		"scope": 1104,
																		"src": "15537:14:2",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1074,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "15537:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	},
																	{
																		"constant": false,
																		"id": 1077,
																		"mutability": "mutable",
																		"name": "userPayload",
																		"nameLocation": "15566:11:2",
																		"nodeType": "VariableDeclaration",
																		"scope": 1104,
																		"src": "15553:24:2",
																		"stateVariable": false,
																		"storageLocation": "memory",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes"
																		},
																		"typeName": {
																			"id": 1076,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "15553:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_storage_ptr",
																				"typeString": "bytes"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1088,
																"initialValue": {
																	"arguments": [
																		{
																			"id": 1080,
																			"name": "payload",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 859,
																			"src": "15610:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		{
																			"components": [
																				{
																					"id": 1081,
																					"name": "Transfer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 281,
																					"src": "15637:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_Transfer_$281_$",
																						"typeString": "type(enum CCTPAndTokenBase.Transfer)"
																					}
																				},
																				{
																					"id": 1083,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "15647:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1082,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "15647:7:2",
																						"typeDescriptions": {}
																					}
																				},
																				{
																					"id": 1085,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "15656:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 1084,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "15656:5:2",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"id": 1086,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "15636:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_type$_t_enum$_Transfer_$281_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
																				"typeString": "tuple(type(enum CCTPAndTokenBase.Transfer),type(uint256),type(bytes storage pointer))"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			},
																			{
																				"typeIdentifier": "t_tuple$_t_type$_t_enum$_Transfer_$281_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
																				"typeString": "tuple(type(enum CCTPAndTokenBase.Transfer),type(uint256),type(bytes storage pointer))"
																			}
																		],
																		"expression": {
																			"id": 1078,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "15581:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "15585:6:2",
																		"memberName": "decode",
																		"nodeType": "MemberAccess",
																		"src": "15581:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15581:96:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_enum$_Transfer_$281_$_t_uint256_$_t_bytes_memory_ptr_$",
																		"typeString": "tuple(enum CCTPAndTokenBase.Transfer,uint256,bytes memory)"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "15534:143:2"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1090,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1075,
																				"src": "15921:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1091,
																				"name": "amountUSDCReceived",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1058,
																				"src": "15931:18:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15921:28:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "57726f6e6720616d6f756e74207265636569766564",
																			"id": 1093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15951:23:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_6781022867e86356be9e3ec78a96895f20619f3a7ac0506f4a950d1c3599a266",
																				"typeString": "literal_string \"Wrong amount received\""
																			},
																			"value": "Wrong amount received"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_6781022867e86356be9e3ec78a96895f20619f3a7ac0506f4a950d1c3599a266",
																				"typeString": "literal_string \"Wrong amount received\""
																			}
																		],
																		"id": 1089,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "15913:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15913:62:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1095,
																"nodeType": "ExpressionStatement",
																"src": "15913:62:2"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1097,
																			"name": "userPayload",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1077,
																			"src": "16032:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		{
																			"id": 1098,
																			"name": "amountUSDCReceived",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1058,
																			"src": "16062:18:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1099,
																			"name": "sourceAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 864,
																			"src": "16099:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 1100,
																			"name": "sourceChain",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 866,
																			"src": "16131:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		{
																			"id": 1101,
																			"name": "deliveryHash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 868,
																			"src": "16161:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			},
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1096,
																		"name": "receivePayloadAndUSDC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1127,
																		"src": "15992:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes32_$_t_uint16_$_t_bytes32_$returns$__$",
																			"typeString": "function (bytes memory,uint256,bytes32,uint16,bytes32)"
																		}
																	},
																	"id": 1102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15992:196:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1103,
																"nodeType": "ExpressionStatement",
																"src": "15992:196:2"
															}
														]
													}
												},
												"id": 1111,
												"nodeType": "IfStatement",
												"src": "12529:3735:2",
												"trueBody": {
													"id": 1044,
													"nodeType": "Block",
													"src": "12572:2215:2",
													"statements": [
														{
															"assignments": [
																889
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 889,
																	"mutability": "mutable",
																	"name": "receivedTokens",
																	"nameLocation": "12610:14:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1044,
																	"src": "12587:37:2",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_TokenReceived_$801_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct CCTPAndTokenReceiver.TokenReceived[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 887,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 886,
																				"name": "TokenReceived",
																				"nameLocations": [
																					"12587:13:2"
																				],
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 801,
																				"src": "12587:13:2"
																			},
																			"referencedDeclaration": 801,
																			"src": "12587:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenReceived_$801_storage_ptr",
																				"typeString": "struct CCTPAndTokenReceiver.TokenReceived"
																			}
																		},
																		"id": 888,
																		"nodeType": "ArrayTypeName",
																		"src": "12587:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_TokenReceived_$801_storage_$dyn_storage_ptr",
																			"typeString": "struct CCTPAndTokenReceiver.TokenReceived[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 897,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 894,
																			"name": "additionalMessages",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 862,
																			"src": "12665:18:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																				"typeString": "bytes memory[] memory"
																			}
																		},
																		"id": 895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12684:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "12665:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "12627:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TokenReceived_$801_memory_ptr_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (struct CCTPAndTokenReceiver.TokenReceived memory[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 891,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 890,
																				"name": "TokenReceived",
																				"nameLocations": [
																					"12631:13:2"
																				],
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 801,
																				"src": "12631:13:2"
																			},
																			"referencedDeclaration": 801,
																			"src": "12631:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenReceived_$801_storage_ptr",
																				"typeString": "struct CCTPAndTokenReceiver.TokenReceived"
																			}
																		},
																		"id": 892,
																		"nodeType": "ArrayTypeName",
																		"src": "12631:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_TokenReceived_$801_storage_$dyn_storage_ptr",
																			"typeString": "struct CCTPAndTokenReceiver.TokenReceived[]"
																		}
																	}
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12627:78:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_TokenReceived_$801_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct CCTPAndTokenReceiver.TokenReceived memory[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12587:118:2"
														},
														{
															"body": {
																"id": 1023,
																"nodeType": "Block",
																"src": "12778:1609:2",
																"statements": [
																	{
																		"assignments": [
																			913
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 913,
																				"mutability": "mutable",
																				"name": "parsed",
																				"nameLocation": "12817:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1023,
																				"src": "12797:26:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_VM_$2674_memory_ptr",
																					"typeString": "struct IWormhole.VM"
																				},
																				"typeName": {
																					"id": 912,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 911,
																						"name": "IWormhole.VM",
																						"nameLocations": [
																							"12797:9:2",
																							"12807:2:2"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 2674,
																						"src": "12797:12:2"
																					},
																					"referencedDeclaration": 2674,
																					"src": "12797:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_VM_$2674_storage_ptr",
																						"typeString": "struct IWormhole.VM"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 920,
																		"initialValue": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 916,
																						"name": "additionalMessages",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 862,
																						"src": "12865:18:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																							"typeString": "bytes memory[] memory"
																						}
																					},
																					"id": 918,
																					"indexExpression": {
																						"id": 917,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 899,
																						"src": "12884:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "12865:21:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"expression": {
																					"id": 914,
																					"name": "wormhole",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 174,
																					"src": "12826:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IWormhole_$2948",
																						"typeString": "contract IWormhole"
																					}
																				},
																				"id": 915,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "12835:7:2",
																				"memberName": "parseVM",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2806,
																				"src": "12826:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_struct$_VM_$2674_memory_ptr_$",
																					"typeString": "function (bytes memory) pure external returns (struct IWormhole.VM memory)"
																				}
																			},
																			"id": 919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12826:79:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_VM_$2674_memory_ptr",
																				"typeString": "struct IWormhole.VM memory"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12797:108:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					"id": 929,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 922,
																							"name": "parsed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 913,
																							"src": "12954:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_VM_$2674_memory_ptr",
																								"typeString": "struct IWormhole.VM memory"
																							}
																						},
																						"id": 923,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "12961:14:2",
																						"memberName": "emitterAddress",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2659,
																						"src": "12954:21:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 926,
																									"name": "parsed",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 913,
																									"src": "13032:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_VM_$2674_memory_ptr",
																										"typeString": "struct IWormhole.VM memory"
																									}
																								},
																								"id": 927,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "13039:14:2",
																								"memberName": "emitterChainId",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2657,
																								"src": "13032:21:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint16",
																									"typeString": "uint16"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint16",
																									"typeString": "uint16"
																								}
																							],
																							"expression": {
																								"id": 924,
																								"name": "tokenBridge",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 278,
																								"src": "13004:11:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_ITokenBridge_$2618",
																									"typeString": "contract ITokenBridge"
																								}
																							},
																							"id": 925,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "13016:15:2",
																							"memberName": "bridgeContracts",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2540,
																							"src": "13004:27:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_view$_t_uint16_$returns$_t_bytes32_$",
																								"typeString": "function (uint16) view external returns (bytes32)"
																							}
																						},
																						"id": 928,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "13004:50:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "12954:100:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "4e6f74206120546f6b656e2042726964676520564141",
																					"id": 930,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13077:24:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_97f7701d47a07e774ac5a8a9759768a55db9a0927dcdf2b109ecb87275183f9e",
																						"typeString": "literal_string \"Not a Token Bridge VAA\""
																					},
																					"value": "Not a Token Bridge VAA"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_97f7701d47a07e774ac5a8a9759768a55db9a0927dcdf2b109ecb87275183f9e",
																						"typeString": "literal_string \"Not a Token Bridge VAA\""
																					}
																				],
																				"id": 921,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "12924:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12924:196:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 932,
																		"nodeType": "ExpressionStatement",
																		"src": "12924:196:2"
																	},
																	{
																		"assignments": [
																			937
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 937,
																				"mutability": "mutable",
																				"name": "transfer",
																				"nameLocation": "13179:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1023,
																				"src": "13139:48:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TransferWithPayload_$2254_memory_ptr",
																					"typeString": "struct ITokenBridge.TransferWithPayload"
																				},
																				"typeName": {
																					"id": 936,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 935,
																						"name": "ITokenBridge.TransferWithPayload",
																						"nameLocations": [
																							"13139:12:2",
																							"13152:19:2"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 2254,
																						"src": "13139:32:2"
																					},
																					"referencedDeclaration": 2254,
																					"src": "13139:32:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TransferWithPayload_$2254_storage_ptr",
																						"typeString": "struct ITokenBridge.TransferWithPayload"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 943,
																		"initialValue": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 940,
																						"name": "parsed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 913,
																						"src": "13249:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_VM_$2674_memory_ptr",
																							"typeString": "struct IWormhole.VM memory"
																						}
																					},
																					"id": 941,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "13256:7:2",
																					"memberName": "payload",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2665,
																					"src": "13249:14:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"expression": {
																					"id": 938,
																					"name": "tokenBridge",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 278,
																					"src": "13190:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ITokenBridge_$2618",
																						"typeString": "contract ITokenBridge"
																					}
																				},
																				"id": 939,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13224:24:2",
																				"memberName": "parseTransferWithPayload",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2472,
																				"src": "13190:58:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_struct$_TransferWithPayload_$2254_memory_ptr_$",
																					"typeString": "function (bytes memory) pure external returns (struct ITokenBridge.TransferWithPayload memory)"
																				}
																			},
																			"id": 942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13190:74:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferWithPayload_$2254_memory_ptr",
																				"typeString": "struct ITokenBridge.TransferWithPayload memory"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13139:125:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 960,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 953,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 945,
																								"name": "transfer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 937,
																								"src": "13313:8:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TransferWithPayload_$2254_memory_ptr",
																									"typeString": "struct ITokenBridge.TransferWithPayload memory"
																								}
																							},
																							"id": 946,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "13322:2:2",
																							"memberName": "to",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2247,
																							"src": "13313:11:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"id": 950,
																											"name": "this",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967268,
																											"src": "13353:4:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_contract$_CCTPAndTokenReceiver_$1144",
																												"typeString": "contract CCTPAndTokenReceiver"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_contract$_CCTPAndTokenReceiver_$1144",
																												"typeString": "contract CCTPAndTokenReceiver"
																											}
																										],
																										"id": 949,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "13345:7:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_address_$",
																											"typeString": "type(address)"
																										},
																										"typeName": {
																											"id": 948,
																											"name": "address",
																											"nodeType": "ElementaryTypeName",
																											"src": "13345:7:2",
																											"typeDescriptions": {}
																										}
																									},
																									"id": 951,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "13345:13:2",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 947,
																								"name": "toWormholeFormat",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1991,
																								"src": "13328:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
																									"typeString": "function (address) pure returns (bytes32)"
																								}
																							},
																							"id": 952,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "13328:31:2",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"src": "13313:46:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&&",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						},
																						"id": 959,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 954,
																								"name": "transfer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 937,
																								"src": "13388:8:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_TransferWithPayload_$2254_memory_ptr",
																									"typeString": "struct ITokenBridge.TransferWithPayload memory"
																								}
																							},
																							"id": 955,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "13397:7:2",
																							"memberName": "toChain",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2249,
																							"src": "13388:16:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint16",
																								"typeString": "uint16"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"expression": {
																									"id": 956,
																									"name": "wormhole",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 174,
																									"src": "13408:8:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_IWormhole_$2948",
																										"typeString": "contract IWormhole"
																									}
																								},
																								"id": 957,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "13417:7:2",
																								"memberName": "chainId",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2850,
																								"src": "13408:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
																									"typeString": "function () view external returns (uint16)"
																								}
																							},
																							"id": 958,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "13408:18:2",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint16",
																								"typeString": "uint16"
																							}
																						},
																						"src": "13388:38:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "13313:113:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "546f6b656e20776173206e6f742073656e7420746f20746869732061646472657373",
																					"id": 961,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13449:36:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_b88badcf55119d90f630b7846c67cf9afe587a0e49b80236232c807bbbb764b2",
																						"typeString": "literal_string \"Token was not sent to this address\""
																					},
																					"value": "Token was not sent to this address"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_b88badcf55119d90f630b7846c67cf9afe587a0e49b80236232c807bbbb764b2",
																						"typeString": "literal_string \"Token was not sent to this address\""
																					}
																				],
																				"id": 944,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "13283:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13283:221:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 963,
																		"nodeType": "ExpressionStatement",
																		"src": "13283:221:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 967,
																						"name": "additionalMessages",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 862,
																						"src": "13565:18:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																							"typeString": "bytes memory[] memory"
																						}
																					},
																					"id": 969,
																					"indexExpression": {
																						"id": 968,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 899,
																						"src": "13584:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "13565:21:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"expression": {
																					"id": 964,
																					"name": "tokenBridge",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 278,
																					"src": "13525:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ITokenBridge_$2618",
																						"typeString": "contract ITokenBridge"
																					}
																				},
																				"id": 966,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13537:27:2",
																				"memberName": "completeTransferWithPayload",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2400,
																				"src": "13525:39:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function (bytes memory) external returns (bytes memory)"
																				}
																			},
																			"id": 970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13525:62:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 971,
																		"nodeType": "ExpressionStatement",
																		"src": "13525:62:2"
																	},
																	{
																		"assignments": [
																			973
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 973,
																				"mutability": "mutable",
																				"name": "thisChainTokenAddress",
																				"nameLocation": "13616:21:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1023,
																				"src": "13608:29:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"typeName": {
																					"id": 972,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "13608:7:2",
																					"stateMutability": "nonpayable",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 980,
																		"initialValue": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 975,
																						"name": "transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 937,
																						"src": "13689:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TransferWithPayload_$2254_memory_ptr",
																							"typeString": "struct ITokenBridge.TransferWithPayload memory"
																						}
																					},
																					"id": 976,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "13698:10:2",
																					"memberName": "tokenChain",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2245,
																					"src": "13689:19:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				},
																				{
																					"expression": {
																						"id": 977,
																						"name": "transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 937,
																						"src": "13731:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TransferWithPayload_$2254_memory_ptr",
																							"typeString": "struct ITokenBridge.TransferWithPayload memory"
																						}
																					},
																					"id": 978,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "13740:12:2",
																					"memberName": "tokenAddress",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2243,
																					"src": "13731:21:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 974,
																				"name": "getTokenAddressOnThisChain",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 857,
																				"src": "13640:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint16_$_t_bytes32_$returns$_t_address_$",
																					"typeString": "function (uint16,bytes32) view returns (address)"
																				}
																			},
																			"id": 979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13640:131:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13608:163:2"
																	},
																	{
																		"assignments": [
																			982
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 982,
																				"mutability": "mutable",
																				"name": "decimals",
																				"nameLocation": "13796:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1023,
																				"src": "13790:14:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"typeName": {
																					"id": 981,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "13790:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 986,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 984,
																					"name": "thisChainTokenAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 973,
																					"src": "13819:21:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 983,
																				"name": "getDecimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 832,
																				"src": "13807:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint8_$",
																					"typeString": "function (address) view returns (uint8)"
																				}
																			},
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13807:34:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13790:51:2"
																	},
																	{
																		"assignments": [
																			988
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 988,
																				"mutability": "mutable",
																				"name": "denormalizedAmount",
																				"nameLocation": "13868:18:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1023,
																				"src": "13860:26:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 987,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13860:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 991,
																		"initialValue": {
																			"expression": {
																				"id": 989,
																				"name": "transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 937,
																				"src": "13889:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TransferWithPayload_$2254_memory_ptr",
																					"typeString": "struct ITokenBridge.TransferWithPayload memory"
																				}
																			},
																			"id": 990,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "13898:6:2",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2241,
																			"src": "13889:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13860:44:2"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 992,
																				"name": "decimals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 982,
																				"src": "13927:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 993,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13938:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "13927:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1007,
																		"nodeType": "IfStatement",
																		"src": "13923:90:2",
																		"trueBody": {
																			"expression": {
																				"id": 1005,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 995,
																					"name": "denormalizedAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "13962:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "*=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1004,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"hexValue": "3130",
																								"id": 998,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "13992:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								}
																							],
																							"id": 997,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "13984:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 996,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "13984:7:2",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 999,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "13984:11:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 1002,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1000,
																									"name": "decimals",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 982,
																									"src": "14000:8:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 1001,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14011:1:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "14000:12:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"id": 1003,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "13999:14:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "13984:29:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13962:51:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1006,
																			"nodeType": "ExpressionStatement",
																			"src": "13962:51:2"
																		}
																	},
																	{
																		"expression": {
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1008,
																					"name": "receivedTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 889,
																					"src": "14034:14:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_TokenReceived_$801_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct CCTPAndTokenReceiver.TokenReceived memory[] memory"
																					}
																				},
																				"id": 1010,
																				"indexExpression": {
																					"id": 1009,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 899,
																					"src": "14049:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "14034:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenReceived_$801_memory_ptr",
																					"typeString": "struct CCTPAndTokenReceiver.TokenReceived memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1012,
																							"name": "transfer",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 937,
																							"src": "14109:8:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TransferWithPayload_$2254_memory_ptr",
																								"typeString": "struct ITokenBridge.TransferWithPayload memory"
																							}
																						},
																						"id": 1013,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14118:12:2",
																						"memberName": "tokenAddress",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2243,
																						"src": "14109:21:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"expression": {
																							"id": 1014,
																							"name": "transfer",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 937,
																							"src": "14169:8:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TransferWithPayload_$2254_memory_ptr",
																								"typeString": "struct ITokenBridge.TransferWithPayload memory"
																							}
																						},
																						"id": 1015,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14178:10:2",
																						"memberName": "tokenChain",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2245,
																						"src": "14169:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					},
																					{
																						"id": 1016,
																						"name": "thisChainTokenAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 973,
																						"src": "14225:21:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 1017,
																						"name": "denormalizedAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 988,
																						"src": "14277:18:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 1018,
																							"name": "transfer",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 937,
																							"src": "14336:8:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TransferWithPayload_$2254_memory_ptr",
																								"typeString": "struct ITokenBridge.TransferWithPayload memory"
																							}
																						},
																						"id": 1019,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14345:6:2",
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2241,
																						"src": "14336:15:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						{
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1011,
																					"name": "TokenReceived",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 801,
																					"src": "14054:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_struct$_TokenReceived_$801_storage_ptr_$",
																						"typeString": "type(struct CCTPAndTokenReceiver.TokenReceived storage pointer)"
																					}
																				},
																				"id": 1020,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "structConstructorCall",
																				"lValueRequested": false,
																				"nameLocations": [
																					"14091:16:2",
																					"14153:14:2",
																					"14211:12:2",
																					"14269:6:2",
																					"14318:16:2"
																				],
																				"names": [
																					"tokenHomeAddress",
																					"tokenHomeChain",
																					"tokenAddress",
																					"amount",
																					"amountNormalized"
																				],
																				"nodeType": "FunctionCall",
																				"src": "14054:317:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TokenReceived_$801_memory_ptr",
																					"typeString": "struct CCTPAndTokenReceiver.TokenReceived memory"
																				}
																			},
																			"src": "14034:337:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenReceived_$801_memory_ptr",
																				"typeString": "struct CCTPAndTokenReceiver.TokenReceived memory"
																			}
																		},
																		"id": 1022,
																		"nodeType": "ExpressionStatement",
																		"src": "14034:337:2"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 902,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 899,
																	"src": "12742:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 903,
																		"name": "additionalMessages",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 862,
																		"src": "12746:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																			"typeString": "bytes memory[] memory"
																		}
																	},
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12765:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "12746:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12742:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1024,
															"initializationExpression": {
																"assignments": [
																	899
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 899,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "12735:1:2",
																		"nodeType": "VariableDeclaration",
																		"scope": 1024,
																		"src": "12727:9:2",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 898,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12727:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 901,
																"initialValue": {
																	"hexValue": "30",
																	"id": 900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12739:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "12727:13:2"
															},
															"loopExpression": {
																"expression": {
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "12773:3:2",
																	"subExpression": {
																		"id": 906,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "12775:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 908,
																"nodeType": "ExpressionStatement",
																"src": "12773:3:2"
															},
															"nodeType": "ForStatement",
															"src": "12722:1665:2"
														},
														{
															"assignments": [
																null,
																1026
															],
															"declarations": [
																null,
																{
																	"constant": false,
																	"id": 1026,
																	"mutability": "mutable",
																	"name": "userPayload",
																	"nameLocation": "14419:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1044,
																	"src": "14406:24:2",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1025,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "14406:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1035,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1029,
																		"name": "payload",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 859,
																		"src": "14463:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 1030,
																				"name": "Transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 281,
																				"src": "14490:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_Transfer_$281_$",
																					"typeString": "type(enum CCTPAndTokenBase.Transfer)"
																				}
																			},
																			{
																				"id": 1032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14500:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 1031,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14500:5:2",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 1033,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "14489:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_type$_t_enum$_Transfer_$281_$_$_t_type$_t_bytes_storage_ptr_$_$",
																			"typeString": "tuple(type(enum CCTPAndTokenBase.Transfer),type(bytes storage pointer))"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_tuple$_t_type$_t_enum$_Transfer_$281_$_$_t_type$_t_bytes_storage_ptr_$_$",
																			"typeString": "tuple(type(enum CCTPAndTokenBase.Transfer),type(bytes storage pointer))"
																		}
																	],
																	"expression": {
																		"id": 1027,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "14434:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "14438:6:2",
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "14434:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14434:87:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_enum$_Transfer_$281_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(enum CCTPAndTokenBase.Transfer,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14403:118:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1037,
																		"name": "userPayload",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1026,
																		"src": "14623:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1038,
																		"name": "receivedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 889,
																		"src": "14653:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_TokenReceived_$801_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct CCTPAndTokenReceiver.TokenReceived memory[] memory"
																		}
																	},
																	{
																		"id": 1039,
																		"name": "sourceAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 864,
																		"src": "14686:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1040,
																		"name": "sourceChain",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 866,
																		"src": "14718:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	{
																		"id": 1041,
																		"name": "deliveryHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 868,
																		"src": "14748:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_struct$_TokenReceived_$801_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct CCTPAndTokenReceiver.TokenReceived memory[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1036,
																	"name": "receivePayloadAndTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1143,
																	"src": "14581:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_array$_t_struct$_TokenReceived_$801_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$_t_uint16_$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes memory,struct CCTPAndTokenReceiver.TokenReceived memory[] memory,bytes32,uint16,bytes32)"
																	}
																},
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14581:194:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1043,
															"nodeType": "ExpressionStatement",
															"src": "14581:194:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "529dca32",
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receiveWormholeMessages",
									"nameLocation": "12237:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "12284:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "12271:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12271:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "additionalMessages",
												"nameLocation": "12317:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "12302:33:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 860,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "12302:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 861,
													"nodeType": "ArrayTypeName",
													"src": "12302:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "12354:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "12346:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 863,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "12385:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "12378:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 865,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "12378:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "12415:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "12407:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 867,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12260:174:2"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12452:0:2"
									},
									"scope": 1144,
									"src": "12228:4043:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "16585:2:2",
										"statements": []
									},
									"id": 1127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receivePayloadAndUSDC",
									"nameLocation": "16379:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "16424:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "16411:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16411:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "amountUSDCReceived",
												"nameLocation": "16450:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "16442:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16442:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "16487:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "16479:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1118,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16479:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "16518:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "16511:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1120,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16511:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "16548:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "16540:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1122,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16540:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16400:167:2"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16585:0:2"
									},
									"scope": 1144,
									"src": "16370:217:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "16921:2:2",
										"statements": []
									},
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receivePayloadAndTokens",
									"nameLocation": "16702:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "16749:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "16736:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1128,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16736:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "receivedTokens",
												"nameLocation": "16790:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "16767:37:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenReceived_$801_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct CCTPAndTokenReceiver.TokenReceived[]"
												},
												"typeName": {
													"baseType": {
														"id": 1131,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1130,
															"name": "TokenReceived",
															"nameLocations": [
																"16767:13:2"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 801,
															"src": "16767:13:2"
														},
														"referencedDeclaration": 801,
														"src": "16767:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenReceived_$801_storage_ptr",
															"typeString": "struct CCTPAndTokenReceiver.TokenReceived"
														}
													},
													"id": 1132,
													"nodeType": "ArrayTypeName",
													"src": "16767:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenReceived_$801_storage_$dyn_storage_ptr",
														"typeString": "struct CCTPAndTokenReceiver.TokenReceived[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "16823:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "16815:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1134,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16815:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "16854:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "16847:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1136,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16847:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "16884:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "16876:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1138,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16725:178:2"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16921:0:2"
									},
									"scope": 1144,
									"src": "16693:230:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1145,
							"src": "10633:6293:2",
							"usedErrors": [
								3475
							],
							"usedEvents": []
						}
					],
					"src": "0:16928:2"
				},
				"id": 2
			},
			"Nebula-bridge-contracts/src/CCTPBase.sol": {
				"ast": {
					"absolutePath": "Nebula-bridge-contracts/src/CCTPBase.sol",
					"exportedSymbols": {
						"Base": [
							261
						],
						"CCTPBase": [
							1221
						],
						"CCTPMessageLib": [
							1168
						],
						"CCTPReceiver": [
							1550
						],
						"CCTPSender": [
							1411
						],
						"DeliveryProviderCannotReceivePayment": [
							3401
						],
						"DeliveryProviderDoesNotSupportMessageKeyType": [
							3405
						],
						"DeliveryProviderDoesNotSupportTargetChain": [
							3399
						],
						"IERC20": [
							2218
						],
						"IMessageTransmitter": [
							2065
						],
						"IReceiver": [
							2079
						],
						"IRelayer": [
							2121
						],
						"ITokenMessenger": [
							2140
						],
						"IWormhole": [
							2948
						],
						"IWormholeReceiver": [
							2967
						],
						"IWormholeRelayer": [
							3382
						],
						"IWormholeRelayerBase": [
							3025
						],
						"IWormholeRelayerDelivery": [
							3377
						],
						"IWormholeRelayerSend": [
							3327
						],
						"InsufficientRelayerFunds": [
							3471
						],
						"InvalidDeliveryVaa": [
							3435
						],
						"InvalidEmitter": [
							3443
						],
						"InvalidMsgValue": [
							3391
						],
						"InvalidOverrideGasLimit": [
							3461
						],
						"InvalidOverrideReceiverValue": [
							3463
						],
						"InvalidOverrideRefundPerGasUnused": [
							3465
						],
						"InvalidPayloadId": [
							3417
						],
						"InvalidPayloadLength": [
							3423
						],
						"InvalidVaaKeyType": [
							3427
						],
						"MessageKey": [
							2985
						],
						"MessageKeysLengthDoesNotMatchMessagesLength": [
							3449
						],
						"NotAnEvmAddress": [
							3475
						],
						"RETURNDATA_TRUNCATION_THRESHOLD": [
							3385
						],
						"ReentrantDelivery": [
							3411
						],
						"RequestedGasLimitTooLow": [
							3393
						],
						"RequesterNotWormholeRelayer": [
							3455
						],
						"TargetChainIsNotThisChain": [
							3459
						],
						"TooManyMessageKeys": [
							3431
						],
						"VAA_KEY_TYPE": [
							2980
						],
						"VaaKey": [
							2977
						],
						"VaaKeysDoNotMatchVaas": [
							3453
						],
						"addressToBytes32CCTP": [
							2036
						],
						"fromWormholeFormat": [
							2024
						],
						"toWormholeFormat": [
							1991
						]
					},
					"id": 1551,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1146,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:3"
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol",
							"file": "./interfaces/IWormholeReceiver.sol",
							"id": 1147,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1551,
							"sourceUnit": 2968,
							"src": "28:44:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol",
							"file": "./interfaces/IWormholeRelayer.sol",
							"id": 1148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1551,
							"sourceUnit": 3476,
							"src": "74:43:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 1150,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1551,
							"sourceUnit": 2219,
							"src": "119:47:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1149,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2218,
										"src": "127:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol",
							"file": "./interfaces/CCTPInterfaces/ITokenMessenger.sol",
							"id": 1151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1551,
							"sourceUnit": 2141,
							"src": "168:57:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol",
							"file": "./interfaces/CCTPInterfaces/IMessageTransmitter.sol",
							"id": 1152,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1551,
							"sourceUnit": 2066,
							"src": "227:61:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/Utils.sol",
							"file": "./Utils.sol",
							"id": 1153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1551,
							"sourceUnit": 2037,
							"src": "292:21:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/Base.sol",
							"file": "./Base.sol",
							"id": 1154,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1551,
							"sourceUnit": 262,
							"src": "315:20:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CCTPMessageLib",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1168,
							"linearizedBaseContracts": [
								1168
							],
							"name": "CCTPMessageLib",
							"nameLocation": "347:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1157,
									"mutability": "constant",
									"name": "CCTP_KEY_TYPE",
									"nameLocation": "749:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 1168,
									"src": "734:32:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1155,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "734:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1156,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "765:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "CCTPMessageLib.CCTPKey",
									"id": 1162,
									"members": [
										{
											"constant": false,
											"id": 1159,
											"mutability": "mutable",
											"name": "domain",
											"nameLocation": "862:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 1162,
											"src": "855:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1158,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "855:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1161,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "886:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 1162,
											"src": "879:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1160,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "879:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CCTPKey",
									"nameLocation": "836:7:3",
									"nodeType": "StructDefinition",
									"scope": 1168,
									"src": "829:70:3",
									"visibility": "public"
								},
								{
									"canonicalName": "CCTPMessageLib.CCTPMessage",
									"id": 1167,
									"members": [
										{
											"constant": false,
											"id": 1164,
											"mutability": "mutable",
											"name": "message",
											"nameLocation": "996:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 1167,
											"src": "990:13:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1163,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "990:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1166,
											"mutability": "mutable",
											"name": "signature",
											"nameLocation": "1020:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 1167,
											"src": "1014:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1165,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1014:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CCTPMessage",
									"nameLocation": "967:11:3",
									"nodeType": "StructDefinition",
									"scope": 1168,
									"src": "960:77:3",
									"visibility": "public"
								}
							],
							"scope": 1551,
							"src": "339:701:3",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1169,
										"name": "Base",
										"nameLocations": [
											"1074:4:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 261,
										"src": "1074:4:3"
									},
									"id": 1170,
									"nodeType": "InheritanceSpecifier",
									"src": "1074:4:3"
								}
							],
							"canonicalName": "CCTPBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1221,
							"linearizedBaseContracts": [
								1221,
								261
							],
							"name": "CCTPBase",
							"nameLocation": "1062:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1173,
									"mutability": "mutable",
									"name": "circleTokenMessenger",
									"nameLocation": "1102:20:3",
									"nodeType": "VariableDeclaration",
									"scope": 1221,
									"src": "1086:36:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ITokenMessenger_$2140",
										"typeString": "contract ITokenMessenger"
									},
									"typeName": {
										"id": 1172,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1171,
											"name": "ITokenMessenger",
											"nameLocations": [
												"1086:15:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2140,
											"src": "1086:15:3"
										},
										"referencedDeclaration": 2140,
										"src": "1086:15:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ITokenMessenger_$2140",
											"typeString": "contract ITokenMessenger"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1176,
									"mutability": "mutable",
									"name": "circleMessageTransmitter",
									"nameLocation": "1149:24:3",
									"nodeType": "VariableDeclaration",
									"scope": 1221,
									"src": "1129:44:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IMessageTransmitter_$2065",
										"typeString": "contract IMessageTransmitter"
									},
									"typeName": {
										"id": 1175,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1174,
											"name": "IMessageTransmitter",
											"nameLocations": [
												"1129:19:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2065,
											"src": "1129:19:3"
										},
										"referencedDeclaration": 2065,
										"src": "1129:19:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMessageTransmitter_$2065",
											"typeString": "contract IMessageTransmitter"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1178,
									"mutability": "mutable",
									"name": "USDC",
									"nameLocation": "1188:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 1221,
									"src": "1180:12:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1177,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1180:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1180,
									"mutability": "mutable",
									"name": "cctpConfigurationOwner",
									"nameLocation": "1207:22:3",
									"nodeType": "VariableDeclaration",
									"scope": 1221,
									"src": "1199:30:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1179,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1199:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "1447:307:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1194,
															"name": "_wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "1468:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1195,
															"name": "_wormhole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "1487:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1193,
														"name": "_initBase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "1458:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1458:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "1458:39:3"
											},
											{
												"expression": {
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1198,
														"name": "circleTokenMessenger",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "1508:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokenMessenger_$2140",
															"typeString": "contract ITokenMessenger"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1200,
																"name": "_circleTokenMessenger",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "1547:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1199,
															"name": "ITokenMessenger",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2140,
															"src": "1531:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ITokenMessenger_$2140_$",
																"typeString": "type(contract ITokenMessenger)"
															}
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1531:38:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokenMessenger_$2140",
															"typeString": "contract ITokenMessenger"
														}
													},
													"src": "1508:61:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITokenMessenger_$2140",
														"typeString": "contract ITokenMessenger"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "1508:61:3"
											},
											{
												"expression": {
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1204,
														"name": "circleMessageTransmitter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "1580:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMessageTransmitter_$2065",
															"typeString": "contract IMessageTransmitter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1206,
																"name": "_circleMessageTransmitter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "1641:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1205,
															"name": "IMessageTransmitter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2065,
															"src": "1607:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IMessageTransmitter_$2065_$",
																"typeString": "type(contract IMessageTransmitter)"
															}
														},
														"id": 1207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1607:70:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IMessageTransmitter_$2065",
															"typeString": "contract IMessageTransmitter"
														}
													},
													"src": "1580:97:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IMessageTransmitter_$2065",
														"typeString": "contract IMessageTransmitter"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "1580:97:3"
											},
											{
												"expression": {
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1210,
														"name": "USDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "1688:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1211,
														"name": "_USDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "1695:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1688:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "1688:12:3"
											},
											{
												"expression": {
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1214,
														"name": "cctpConfigurationOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "1711:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1215,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1736:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1740:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1736:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1711:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1218,
												"nodeType": "ExpressionStatement",
												"src": "1711:35:3"
											}
										]
									},
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initCCTPBase",
									"nameLocation": "1247:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "_wormholeRelayer",
												"nameLocation": "1279:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "1271:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "_wormhole",
												"nameLocation": "1314:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "1306:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "_circleMessageTransmitter",
												"nameLocation": "1342:25:3",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "1334:33:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "_circleTokenMessenger",
												"nameLocation": "1386:21:3",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "1378:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "_USDC",
												"nameLocation": "1426:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "1418:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:178:3"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1447:0:3"
									},
									"scope": 1221,
									"src": "1238:516:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1551,
							"src": "1044:713:3",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1222,
										"name": "CCTPBase",
										"nameLocations": [
											"1793:8:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1221,
										"src": "1793:8:3"
									},
									"id": 1223,
									"nodeType": "InheritanceSpecifier",
									"src": "1793:8:3"
								}
							],
							"canonicalName": "CCTPSender",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1411,
							"linearizedBaseContracts": [
								1411,
								1221,
								261
							],
							"name": "CCTPSender",
							"nameLocation": "1779:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1226,
									"mutability": "constant",
									"name": "CONSISTENCY_LEVEL_FINALIZED",
									"nameLocation": "1833:27:3",
									"nodeType": "VariableDeclaration",
									"scope": 1411,
									"src": "1809:56:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1224,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1809:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 1225,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1863:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "internal"
								},
								{
									"global": false,
									"id": 1228,
									"libraryName": {
										"id": 1227,
										"name": "CCTPMessageLib",
										"nameLocations": [
											"1880:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1168,
										"src": "1880:14:3"
									},
									"nodeType": "UsingForDirective",
									"src": "1874:27:3"
								},
								{
									"constant": false,
									"functionSelector": "3a57cd63",
									"id": 1232,
									"mutability": "mutable",
									"name": "chainIdToCCTPDomain",
									"nameLocation": "1942:19:3",
									"nodeType": "VariableDeclaration",
									"scope": 1411,
									"src": "1909:52:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint16_$_t_uint32_$",
										"typeString": "mapping(uint16 => uint32)"
									},
									"typeName": {
										"id": 1231,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1229,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "1917:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"nodeType": "Mapping",
										"src": "1909:25:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint16_$_t_uint32_$",
											"typeString": "mapping(uint16 => uint32)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1230,
											"name": "uint32",
											"nodeType": "ElementaryTypeName",
											"src": "1927:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "2826:185:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1241,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2859:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2863:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2859:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1243,
																"name": "cctpConfigurationOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "2873:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2859:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616c6c6f77656420746f20736574204343545020446f6d61696e",
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2910:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d1631ba72e816445bf0fa4abac33b00c0668922896e9b84defb141e7fcc6b48f",
																"typeString": "literal_string \"Not allowed to set CCTP Domain\""
															},
															"value": "Not allowed to set CCTP Domain"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d1631ba72e816445bf0fa4abac33b00c0668922896e9b84defb141e7fcc6b48f",
																"typeString": "literal_string \"Not allowed to set CCTP Domain\""
															}
														],
														"id": 1240,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2837:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2837:116:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "2837:116:3"
											},
											{
												"expression": {
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1248,
															"name": "chainIdToCCTPDomain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "2964:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint16_$_t_uint32_$",
																"typeString": "mapping(uint16 => uint32)"
															}
														},
														"id": 1250,
														"indexExpression": {
															"id": 1249,
															"name": "chain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "2984:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2964:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1251,
														"name": "cctpDomain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1237,
														"src": "2993:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "2964:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "2964:39:3"
											}
										]
									},
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "1970:787:3",
										"text": " Sets the CCTP Domain corresponding to chain 'chain' to be 'cctpDomain'\n So that transfers of USDC to chain 'chain' use the target CCTP domain 'cctpDomain'\n This action can only be performed by 'cctpConfigurationOwner', who is set to be the deployer\n Currently, cctp domains are:\n Ethereum: Wormhole chain id 2, cctp domain 0\n Avalanche: Wormhole chain id 6, cctp domain 1\n Optimism: Wormhole chain id 24, cctp domain 2\n Arbitrum: Wormhole chain id 23, cctp domain 3\n Base: Wormhole chain id 30, cctp domain 6\n These can be set via:\n setCCTPDomain(2, 0);\n setCCTPDomain(6, 1);\n setCCTPDomain(24, 2);\n setCCTPDomain(23, 3);\n setCCTPDomain(30, 6);"
									},
									"functionSelector": "c6a4fd1c",
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setCCTPDomain",
									"nameLocation": "2772:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "chain",
												"nameLocation": "2793:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2786:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1234,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2786:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "cctpDomain",
												"nameLocation": "2807:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2800:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1236,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2800:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2785:33:3"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2826:0:3"
									},
									"scope": 1411,
									"src": "2763:248:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "3087:52:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1262,
														"name": "chainIdToCCTPDomain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "3105:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint16_$_t_uint32_$",
															"typeString": "mapping(uint16 => uint32)"
														}
													},
													"id": 1264,
													"indexExpression": {
														"id": 1263,
														"name": "chain",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1257,
														"src": "3125:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3105:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1261,
												"id": 1265,
												"nodeType": "Return",
												"src": "3098:33:3"
											}
										]
									},
									"id": 1267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCCTPDomain",
									"nameLocation": "3028:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "chain",
												"nameLocation": "3049:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "3042:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1256,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3042:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3041:14:3"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "3079:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1259,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3079:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3078:8:3"
									},
									"scope": 1411,
									"src": "3019:120:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "3731:568:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1286,
																	"name": "circleTokenMessenger",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1173,
																	"src": "3771:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ITokenMessenger_$2140",
																		"typeString": "contract ITokenMessenger"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ITokenMessenger_$2140",
																		"typeString": "contract ITokenMessenger"
																	}
																],
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3763:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1284,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3763:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3763:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1288,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "3794:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1281,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "3749:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1280,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2218,
																"src": "3742:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$2218_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3742:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2218",
																"typeString": "contract IERC20"
															}
														},
														"id": 1283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3755:7:3",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2205,
														"src": "3742:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3742:59:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "3742:59:3"
											},
											{
												"assignments": [
													1292
												],
												"declarations": [
													{
														"constant": false,
														"id": 1292,
														"mutability": "mutable",
														"name": "targetAddressBytes32",
														"nameLocation": "3820:20:3",
														"nodeType": "VariableDeclaration",
														"scope": 1324,
														"src": "3812:28:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1291,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3812:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1296,
												"initialValue": {
													"arguments": [
														{
															"id": 1294,
															"name": "targetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "3864:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1293,
														"name": "addressToBytes32CCTP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2036,
														"src": "3843:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
															"typeString": "function (address) pure returns (bytes32)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3843:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3812:66:3"
											},
											{
												"assignments": [
													1298
												],
												"declarations": [
													{
														"constant": false,
														"id": 1298,
														"mutability": "mutable",
														"name": "nonce",
														"nameLocation": "3896:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1324,
														"src": "3889:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 1297,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "3889:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1309,
												"initialValue": {
													"arguments": [
														{
															"id": 1301,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "3964:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1303,
																	"name": "targetChain",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "3999:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"id": 1302,
																"name": "getCCTPDomain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1267,
																"src": "3985:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint16_$returns$_t_uint32_$",
																	"typeString": "function (uint16) view returns (uint32)"
																}
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3985:26:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 1305,
															"name": "targetAddressBytes32",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "4026:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1306,
															"name": "USDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "4061:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1307,
															"name": "targetAddressBytes32",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "4080:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1299,
															"name": "circleTokenMessenger",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "3904:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ITokenMessenger_$2140",
																"typeString": "contract ITokenMessenger"
															}
														},
														"id": 1300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3925:24:3",
														"memberName": "depositForBurnWithCaller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2139,
														"src": "3904:45:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint32_$_t_bytes32_$_t_address_$_t_bytes32_$returns$_t_uint64_$",
															"typeString": "function (uint256,uint32,bytes32,address,bytes32) external returns (uint64)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3904:207:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3889:222:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1311,
																"name": "CCTPMessageLib",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "4171:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_CCTPMessageLib_$1168_$",
																	"typeString": "type(library CCTPMessageLib)"
																}
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4186:13:3",
															"memberName": "CCTP_KEY_TYPE",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1157,
															"src": "4171:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1316,
																					"name": "wormhole",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 174,
																					"src": "4249:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IWormhole_$2948",
																						"typeString": "contract IWormhole"
																					}
																				},
																				"id": 1317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4258:7:3",
																				"memberName": "chainId",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2850,
																				"src": "4249:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
																					"typeString": "function () view external returns (uint16)"
																				}
																			},
																			"id": 1318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4249:18:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		],
																		"id": 1315,
																		"name": "getCCTPDomain",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1267,
																		"src": "4235:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint16_$returns$_t_uint32_$",
																			"typeString": "function (uint16) view returns (uint32)"
																		}
																	},
																	"id": 1319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4235:33:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																{
																	"id": 1320,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "4270:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	{
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																],
																"expression": {
																	"id": 1313,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4218:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4222:12:3",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "4218:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4218:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1310,
														"name": "MessageKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2985,
														"src": "4142:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_MessageKey_$2985_storage_ptr_$",
															"typeString": "type(struct MessageKey storage pointer)"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4142:149:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MessageKey_$2985_memory_ptr",
														"typeString": "struct MessageKey memory"
													}
												},
												"functionReturnParameters": 1279,
												"id": 1323,
												"nodeType": "Return",
												"src": "4122:169:3"
											}
										]
									},
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "3147:424:3",
										"text": " transferUSDC wraps common boilerplate for sending tokens to another chain using IWormholeRelayer\n - approves the Circle TokenMessenger contract to spend 'amount' of USDC\n - calls Circle's 'depositForBurnWithCaller'\n - returns key for inclusion in WormholeRelayer `additionalVaas` argument\n Note: this requires that only the targetAddress can redeem transfers."
									},
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferUSDC",
									"nameLocation": "3588:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3619:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "3611:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3611:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "3643:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "3636:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1271,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3636:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "3673:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "3665:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3665:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3600:93:3"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "3712:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MessageKey_$2985_memory_ptr",
													"typeString": "struct MessageKey"
												},
												"typeName": {
													"id": 1277,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1276,
														"name": "MessageKey",
														"nameLocations": [
															"3712:10:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2985,
														"src": "3712:10:3"
													},
													"referencedDeclaration": 2985,
													"src": "3712:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MessageKey_$2985_storage_ptr",
														"typeString": "struct MessageKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3711:19:3"
									},
									"scope": 1411,
									"src": "3579:720:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "5041:854:3",
										"statements": [
											{
												"assignments": [
													1346
												],
												"declarations": [
													{
														"constant": false,
														"id": 1346,
														"mutability": "mutable",
														"name": "messageKeys",
														"nameLocation": "5072:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 1409,
														"src": "5052:31:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_MessageKey_$2985_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct MessageKey[]"
														},
														"typeName": {
															"baseType": {
																"id": 1344,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1343,
																	"name": "MessageKey",
																	"nameLocations": [
																		"5052:10:3"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2985,
																	"src": "5052:10:3"
																},
																"referencedDeclaration": 2985,
																"src": "5052:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MessageKey_$2985_storage_ptr",
																	"typeString": "struct MessageKey"
																}
															},
															"id": 1345,
															"nodeType": "ArrayTypeName",
															"src": "5052:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MessageKey_$2985_storage_$dyn_storage_ptr",
																"typeString": "struct MessageKey[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1353,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5103:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "5086:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_MessageKey_$2985_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct MessageKey memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1348,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1347,
																	"name": "MessageKey",
																	"nameLocations": [
																		"5090:10:3"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2985,
																	"src": "5090:10:3"
																},
																"referencedDeclaration": 2985,
																"src": "5090:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MessageKey_$2985_storage_ptr",
																	"typeString": "struct MessageKey"
																}
															},
															"id": 1349,
															"nodeType": "ArrayTypeName",
															"src": "5090:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MessageKey_$2985_storage_$dyn_storage_ptr",
																"typeString": "struct MessageKey[]"
															}
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5086:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MessageKey_$2985_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct MessageKey memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5052:53:3"
											},
											{
												"expression": {
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1354,
															"name": "messageKeys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "5116:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MessageKey_$2985_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct MessageKey memory[] memory"
															}
														},
														"id": 1356,
														"indexExpression": {
															"hexValue": "30",
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5128:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5116:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MessageKey_$2985_memory_ptr",
															"typeString": "struct MessageKey memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1358,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1337,
																"src": "5146:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1359,
																"name": "targetChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "5154:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 1360,
																"name": "targetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1329,
																"src": "5167:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1357,
															"name": "transferUSDC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "5133:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint16_$_t_address_$returns$_t_struct$_MessageKey_$2985_memory_ptr_$",
																"typeString": "function (uint256,uint16,address) returns (struct MessageKey memory)"
															}
														},
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5133:48:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MessageKey_$2985_memory_ptr",
															"typeString": "struct MessageKey memory"
														}
													},
													"src": "5116:65:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MessageKey_$2985_memory_ptr",
														"typeString": "struct MessageKey memory"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "5116:65:3"
											},
											{
												"assignments": [
													1365
												],
												"declarations": [
													{
														"constant": false,
														"id": 1365,
														"mutability": "mutable",
														"name": "userPayload",
														"nameLocation": "5207:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 1409,
														"src": "5194:24:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1364,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5194:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1371,
												"initialValue": {
													"arguments": [
														{
															"id": 1368,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "5232:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1369,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "5240:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1366,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5221:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5225:6:3",
														"memberName": "encode",
														"nodeType": "MemberAccess",
														"src": "5221:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5221:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5194:54:3"
											},
											{
												"assignments": [
													1373
												],
												"declarations": [
													{
														"constant": false,
														"id": 1373,
														"mutability": "mutable",
														"name": "defaultDeliveryProvider",
														"nameLocation": "5267:23:3",
														"nodeType": "VariableDeclaration",
														"scope": 1409,
														"src": "5259:31:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1372,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5259:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1377,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1374,
															"name": "wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5293:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWormholeRelayer_$3382",
																"typeString": "contract IWormholeRelayer"
															}
														},
														"id": 1375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5323:26:3",
														"memberName": "getDefaultDeliveryProvider",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3326,
														"src": "5293:56:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5293:58:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5259:92:3"
											},
											{
												"assignments": [
													1379,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1379,
														"mutability": "mutable",
														"name": "cost",
														"nameLocation": "5373:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 1409,
														"src": "5365:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1378,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5365:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1386,
												"initialValue": {
													"arguments": [
														{
															"id": 1382,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "5435:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 1383,
															"name": "receiverValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "5461:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1384,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "5489:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1380,
															"name": "wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5383:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWormholeRelayer_$3382",
																"typeString": "contract IWormholeRelayer"
															}
														},
														"id": 1381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5399:21:3",
														"memberName": "quoteEVMDeliveryPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3276,
														"src": "5383:37:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint16_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint16,uint256,uint256) view external returns (uint256,uint256)"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5383:125:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5364:144:3"
											},
											{
												"expression": {
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1387,
														"name": "sequence",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "5521:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1392,
																"name": "targetChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "5585:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 1393,
																"name": "targetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1329,
																"src": "5611:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1394,
																"name": "userPayload",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "5639:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 1395,
																"name": "receiverValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1333,
																"src": "5665:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5693:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 1397,
																"name": "gasLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "5709:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1398,
																"name": "targetChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "5732:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 1401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5766:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5758:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1399,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5758:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5758:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1403,
																"name": "defaultDeliveryProvider",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "5785:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1404,
																"name": "messageKeys",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1346,
																"src": "5823:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_MessageKey_$2985_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct MessageKey memory[] memory"
																}
															},
															{
																"id": 1405,
																"name": "CONSISTENCY_LEVEL_FINALIZED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "5849:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_array$_t_struct$_MessageKey_$2985_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct MessageKey memory[] memory"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_array$_t_struct$_MessageKey_$2985_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct MessageKey memory[] memory"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"expression": {
																	"id": 1388,
																	"name": "wormholeRelayer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 171,
																	"src": "5532:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWormholeRelayer_$3382",
																		"typeString": "contract IWormholeRelayer"
																	}
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5548:9:3",
																"memberName": "sendToEvm",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3168,
																"src": "5532:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint16_$_t_address_$_t_address_$_t_array$_t_struct$_MessageKey_$2985_memory_ptr_$dyn_memory_ptr_$_t_uint8_$returns$_t_uint64_$",
																	"typeString": "function (uint16,address,bytes memory,uint256,uint256,uint256,uint16,address,address,struct MessageKey memory[] memory,uint8) payable external returns (uint64)"
																}
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"names": [
																"value"
															],
															"nodeType": "FunctionCallOptions",
															"options": [
																{
																	"id": 1390,
																	"name": "cost",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1379,
																	"src": "5565:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"src": "5532:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint16_$_t_address_$_t_address_$_t_array$_t_struct$_MessageKey_$2985_memory_ptr_$dyn_memory_ptr_$_t_uint8_$returns$_t_uint64_$value",
																"typeString": "function (uint16,address,bytes memory,uint256,uint256,uint256,uint16,address,address,struct MessageKey memory[] memory,uint8) payable external returns (uint64)"
															}
														},
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5532:355:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "5521:366:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "5521:366:3"
											}
										]
									},
									"id": 1410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendUSDCWithPayloadToEvm",
									"nameLocation": "4798:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "4840:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "4833:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1326,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4833:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "4870:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "4862:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4862:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "4907:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "4894:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1330,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4894:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "4933:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "4925:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4925:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "4965:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "4957:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4957:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4992:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "4984:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4984:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4822:183:3"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "5031:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "5024:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1339,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5024:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5023:17:3"
									},
									"scope": 1411,
									"src": "4789:1106:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1551,
							"src": "1761:4137:3",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1412,
										"name": "CCTPBase",
										"nameLocations": [
											"5936:8:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1221,
										"src": "5936:8:3"
									},
									"id": 1413,
									"nodeType": "InheritanceSpecifier",
									"src": "5936:8:3"
								}
							],
							"canonicalName": "CCTPReceiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1550,
							"linearizedBaseContracts": [
								1550,
								1221,
								261
							],
							"name": "CCTPReceiver",
							"nameLocation": "5920:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "6048:357:3",
										"statements": [
											{
												"assignments": [
													1421,
													1423
												],
												"declarations": [
													{
														"constant": false,
														"id": 1421,
														"mutability": "mutable",
														"name": "message",
														"nameLocation": "6073:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1465,
														"src": "6060:20:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1420,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6060:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1423,
														"mutability": "mutable",
														"name": "signature",
														"nameLocation": "6095:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 1465,
														"src": "6082:22:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1422,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6082:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1433,
												"initialValue": {
													"arguments": [
														{
															"id": 1426,
															"name": "cctpMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "6133:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6160:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1427,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "6160:5:3",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6167:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1429,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "6167:5:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1431,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6159:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(bytes storage pointer),type(bytes storage pointer))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(bytes storage pointer),type(bytes storage pointer))"
															}
														],
														"expression": {
															"id": 1424,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "6108:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6112:6:3",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "6108:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6108:76:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bytes memory,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6059:125:3"
											},
											{
												"assignments": [
													1435
												],
												"declarations": [
													{
														"constant": false,
														"id": 1435,
														"mutability": "mutable",
														"name": "beforeBalance",
														"nameLocation": "6203:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 1465,
														"src": "6195:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1434,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6195:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1445,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1442,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6250:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CCTPReceiver_$1550",
																		"typeString": "contract CCTPReceiver"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CCTPReceiver_$1550",
																		"typeString": "contract CCTPReceiver"
																	}
																],
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6242:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1440,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6242:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6242:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1437,
																	"name": "USDC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "6226:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1436,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2218,
																"src": "6219:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$2218_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6219:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2218",
																"typeString": "contract IERC20"
															}
														},
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6232:9:3",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2175,
														"src": "6219:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6219:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6195:61:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1449,
															"name": "message",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "6307:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1450,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "6316:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1446,
															"name": "circleMessageTransmitter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "6267:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMessageTransmitter_$2065",
																"typeString": "contract IMessageTransmitter"
															}
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6292:14:3",
														"memberName": "receiveMessage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2078,
														"src": "6267:39:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory,bytes memory) external returns (bool)"
														}
													},
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6267:59:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1452,
												"nodeType": "ExpressionStatement",
												"src": "6267:59:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1459,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6375:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CCTPReceiver_$1550",
																			"typeString": "contract CCTPReceiver"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CCTPReceiver_$1550",
																			"typeString": "contract CCTPReceiver"
																		}
																	],
																	"id": 1458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6367:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1457,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6367:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6367:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1454,
																		"name": "USDC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1178,
																		"src": "6351:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1453,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2218,
																	"src": "6344:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$2218_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6344:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$2218",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6357:9:3",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2175,
															"src": "6344:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 1461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6344:37:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1462,
														"name": "beforeBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1435,
														"src": "6384:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6344:53:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1419,
												"id": 1464,
												"nodeType": "Return",
												"src": "6337:60:3"
											}
										]
									},
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "redeemUSDC",
									"nameLocation": "5961:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "cctpMessage",
												"nameLocation": "5995:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "5982:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5982:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5971:42:3"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6040:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "6032:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6031:16:3"
									},
									"scope": 1550,
									"src": "5952:453:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "6637:1248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1481,
																	"name": "additionalMessages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1471,
																	"src": "7016:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																		"typeString": "bytes memory[] memory"
																	}
																},
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7035:6:3",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7016:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7045:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "7016:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "434354503a204174206d6f7374206f6e65204d65737361676520697320737570706f72746564",
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7061:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95c2a5457827ff1d830352d4d883397dc3debe8649a9022b6a18da70b36679cb",
																"typeString": "literal_string \"CCTP: At most one Message is supported\""
															},
															"value": "CCTP: At most one Message is supported"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_95c2a5457827ff1d830352d4d883397dc3debe8649a9022b6a18da70b36679cb",
																"typeString": "literal_string \"CCTP: At most one Message is supported\""
															}
														],
														"id": 1480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6994:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6994:118:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1487,
												"nodeType": "ExpressionStatement",
												"src": "6994:118:3"
											},
											{
												"assignments": [
													1489
												],
												"declarations": [
													{
														"constant": false,
														"id": 1489,
														"mutability": "mutable",
														"name": "amountUSDCReceived",
														"nameLocation": "7133:18:3",
														"nodeType": "VariableDeclaration",
														"scope": 1534,
														"src": "7125:26:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1488,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7125:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1490,
												"nodeType": "VariableDeclarationStatement",
												"src": "7125:26:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1491,
															"name": "additionalMessages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "7166:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																"typeString": "bytes memory[] memory"
															}
														},
														"id": 1492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7185:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7166:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7195:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7166:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1504,
												"nodeType": "IfStatement",
												"src": "7162:117:3",
												"trueBody": {
													"id": 1503,
													"nodeType": "Block",
													"src": "7198:81:3",
													"statements": [
														{
															"expression": {
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1495,
																	"name": "amountUSDCReceived",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1489,
																	"src": "7213:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1497,
																				"name": "additionalMessages",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1471,
																				"src": "7245:18:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																					"typeString": "bytes memory[] memory"
																				}
																			},
																			"id": 1499,
																			"indexExpression": {
																				"hexValue": "30",
																				"id": 1498,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7264:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7245:21:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1496,
																		"name": "redeemUSDC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1466,
																		"src": "7234:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_uint256_$",
																			"typeString": "function (bytes memory) returns (uint256)"
																		}
																	},
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7234:33:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7213:54:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1502,
															"nodeType": "ExpressionStatement",
															"src": "7213:54:3"
														}
													]
												}
											},
											{
												"assignments": [
													1506,
													1508
												],
												"declarations": [
													{
														"constant": false,
														"id": 1506,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "7300:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1534,
														"src": "7292:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7292:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1508,
														"mutability": "mutable",
														"name": "userPayload",
														"nameLocation": "7321:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 1534,
														"src": "7308:24:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1507,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7308:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1518,
												"initialValue": {
													"arguments": [
														{
															"id": 1511,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "7361:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 1513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7384:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1512,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7384:7:3",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7393:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1514,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "7393:5:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1516,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7383:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(uint256),type(bytes storage pointer))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$",
																"typeString": "tuple(type(uint256),type(bytes storage pointer))"
															}
														],
														"expression": {
															"id": 1509,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "7336:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7340:6:3",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "7336:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7336:74:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(uint256,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7291:119:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1520,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1506,
																"src": "7638:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1521,
																"name": "amountUSDCReceived",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1489,
																"src": "7648:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7638:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57726f6e6720616d6f756e74207265636569766564",
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7668:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6781022867e86356be9e3ec78a96895f20619f3a7ac0506f4a950d1c3599a266",
																"typeString": "literal_string \"Wrong amount received\""
															},
															"value": "Wrong amount received"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6781022867e86356be9e3ec78a96895f20619f3a7ac0506f4a950d1c3599a266",
																"typeString": "literal_string \"Wrong amount received\""
															}
														],
														"id": 1519,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7630:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7630:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1525,
												"nodeType": "ExpressionStatement",
												"src": "7630:62:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1527,
															"name": "userPayload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "7741:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1528,
															"name": "amountUSDCReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "7767:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1529,
															"name": "sourceAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "7800:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1530,
															"name": "sourceChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "7828:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 1531,
															"name": "deliveryHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "7854:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1526,
														"name": "receivePayloadAndUSDC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "7705:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes32_$_t_uint16_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes memory,uint256,bytes32,uint16,bytes32)"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7705:172:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "7705:172:3"
											}
										]
									},
									"functionSelector": "529dca32",
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receiveWormholeMessages",
									"nameLocation": "6422:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "6469:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "6456:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6456:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "additionalMessages",
												"nameLocation": "6502:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "6487:33:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 1469,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "6487:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 1470,
													"nodeType": "ArrayTypeName",
													"src": "6487:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "6539:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "6531:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1472,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6531:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "6570:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "6563:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1474,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6563:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "6600:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "6592:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1476,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6592:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6445:174:3"
									},
									"returnParameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6637:0:3"
									},
									"scope": 1550,
									"src": "6413:1472:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "8199:2:3",
										"statements": []
									},
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receivePayloadAndUSDC",
									"nameLocation": "7993:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "8038:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "8025:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1536,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8025:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "amountUSDCReceived",
												"nameLocation": "8064:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "8056:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8056:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "8101:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "8093:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1540,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8093:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "8132:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "8125:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1542,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8125:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "8162:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "8154:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1544,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8154:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8014:167:3"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8199:0:3"
									},
									"scope": 1550,
									"src": "7984:217:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1551,
							"src": "5902:2302:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:8206:3"
				},
				"id": 3
			},
			"Nebula-bridge-contracts/src/TokenBase.sol": {
				"ast": {
					"absolutePath": "Nebula-bridge-contracts/src/TokenBase.sol",
					"exportedSymbols": {
						"Base": [
							261
						],
						"DeliveryProviderCannotReceivePayment": [
							3401
						],
						"DeliveryProviderDoesNotSupportMessageKeyType": [
							3405
						],
						"DeliveryProviderDoesNotSupportTargetChain": [
							3399
						],
						"IERC20": [
							2218
						],
						"ITokenBridge": [
							2618
						],
						"IWETH": [
							2632
						],
						"IWormhole": [
							2948
						],
						"IWormholeReceiver": [
							2967
						],
						"IWormholeRelayer": [
							3382
						],
						"IWormholeRelayerBase": [
							3025
						],
						"IWormholeRelayerDelivery": [
							3377
						],
						"IWormholeRelayerSend": [
							3327
						],
						"Inputs": [
							162
						],
						"InsufficientRelayerFunds": [
							3471
						],
						"InvalidDeliveryVaa": [
							3435
						],
						"InvalidEmitter": [
							3443
						],
						"InvalidMsgValue": [
							3391
						],
						"InvalidOverrideGasLimit": [
							3461
						],
						"InvalidOverrideReceiverValue": [
							3463
						],
						"InvalidOverrideRefundPerGasUnused": [
							3465
						],
						"InvalidPayloadId": [
							3417
						],
						"InvalidPayloadLength": [
							3423
						],
						"InvalidVaaKeyType": [
							3427
						],
						"MessageKey": [
							2985
						],
						"MessageKeysLengthDoesNotMatchMessagesLength": [
							3449
						],
						"NotAnEvmAddress": [
							3475
						],
						"RETURNDATA_TRUNCATION_THRESHOLD": [
							3385
						],
						"ReentrantDelivery": [
							3411
						],
						"RequestedGasLimitTooLow": [
							3393
						],
						"RequesterNotWormholeRelayer": [
							3455
						],
						"Structs": [
							133
						],
						"TargetChainIsNotThisChain": [
							3459
						],
						"TokenBase": [
							1588
						],
						"TokenReceiver": [
							1969
						],
						"TokenSender": [
							1725
						],
						"TooManyMessageKeys": [
							3431
						],
						"VAA_KEY_TYPE": [
							2980
						],
						"VaaKey": [
							2977
						],
						"VaaKeysDoNotMatchVaas": [
							3453
						],
						"addressToBytes32CCTP": [
							2036
						],
						"fromWormholeFormat": [
							2024
						],
						"toWormholeFormat": [
							1991
						]
					},
					"id": 1970,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1552,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:4"
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol",
							"file": "./interfaces/IWormholeReceiver.sol",
							"id": 1553,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1970,
							"sourceUnit": 2968,
							"src": "28:44:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol",
							"file": "./interfaces/IWormholeRelayer.sol",
							"id": 1554,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1970,
							"sourceUnit": 3476,
							"src": "74:43:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/ITokenBridge.sol",
							"file": "./interfaces/ITokenBridge.sol",
							"id": 1555,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1970,
							"sourceUnit": 2619,
							"src": "119:39:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 1557,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1970,
							"sourceUnit": 2219,
							"src": "160:47:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1556,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2218,
										"src": "168:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/WormholeRelayerSDK.sol",
							"file": "./WormholeRelayerSDK.sol",
							"id": 1559,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1970,
							"sourceUnit": 2056,
							"src": "209:46:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1558,
										"name": "Base",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 261,
										"src": "217:4:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/lib.d.sol",
							"file": "../lib.d.sol",
							"id": 1560,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1970,
							"sourceUnit": 163,
							"src": "257:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/Utils.sol",
							"file": "./Utils.sol",
							"id": 1561,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1970,
							"sourceUnit": 2037,
							"src": "281:21:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1562,
										"name": "Base",
										"nameLocations": [
											"337:4:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 261,
										"src": "337:4:4"
									},
									"id": 1563,
									"nodeType": "InheritanceSpecifier",
									"src": "337:4:4"
								}
							],
							"canonicalName": "TokenBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1588,
							"linearizedBaseContracts": [
								1588,
								261
							],
							"name": "TokenBase",
							"nameLocation": "324:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c6328a46",
									"id": 1566,
									"mutability": "mutable",
									"name": "tokenBridge",
									"nameLocation": "369:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1588,
									"src": "349:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ITokenBridge_$2618",
										"typeString": "contract ITokenBridge"
									},
									"typeName": {
										"id": 1565,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1564,
											"name": "ITokenBridge",
											"nameLocations": [
												"349:12:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2618,
											"src": "349:12:4"
										},
										"referencedDeclaration": 2618,
										"src": "349:12:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ITokenBridge_$2618",
											"typeString": "contract ITokenBridge"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1586,
										"nodeType": "Block",
										"src": "495:109:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1576,
															"name": "_wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "516:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1577,
															"name": "_wormhole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "535:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1575,
														"name": "_initBase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "506:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "506:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "506:39:4"
											},
											{
												"expression": {
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1580,
														"name": "tokenBridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "556:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokenBridge_$2618",
															"typeString": "contract ITokenBridge"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1582,
																"name": "_tokenBridge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1570,
																"src": "583:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1581,
															"name": "ITokenBridge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2618,
															"src": "570:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ITokenBridge_$2618_$",
																"typeString": "type(contract ITokenBridge)"
															}
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "570:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITokenBridge_$2618",
															"typeString": "contract ITokenBridge"
														}
													},
													"src": "556:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITokenBridge_$2618",
														"typeString": "contract ITokenBridge"
													}
												},
												"id": 1585,
												"nodeType": "ExpressionStatement",
												"src": "556:40:4"
											}
										]
									},
									"id": 1587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initTokenBase",
									"nameLocation": "399:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "_wormholeRelayer",
												"nameLocation": "422:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "414:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "_tokenBridge",
												"nameLocation": "447:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "439:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "_wormhole",
												"nameLocation": "468:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "460:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:65:4"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "495:0:4"
									},
									"scope": 1588,
									"src": "389:215:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1970,
							"src": "306:301:4",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1589,
										"name": "TokenBase",
										"nameLocations": [
											"644:9:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1588,
										"src": "644:9:4"
									},
									"id": 1590,
									"nodeType": "InheritanceSpecifier",
									"src": "644:9:4"
								}
							],
							"canonicalName": "TokenSender",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1725,
							"linearizedBaseContracts": [
								1725,
								1588,
								261
							],
							"name": "TokenSender",
							"nameLocation": "629:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1649,
										"nodeType": "Block",
										"src": "1758:562:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1613,
																	"name": "tokenBridge",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "1799:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ITokenBridge_$2618",
																		"typeString": "contract ITokenBridge"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ITokenBridge_$2618",
																		"typeString": "contract ITokenBridge"
																	}
																],
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1791:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1611,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1791:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1791:20:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1615,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "1813:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1608,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1593,
																	"src": "1776:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1607,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2218,
																"src": "1769:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$2218_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1769:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2218",
																"typeString": "contract IERC20"
															}
														},
														"id": 1610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1783:7:4",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2205,
														"src": "1769:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1769:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1617,
												"nodeType": "ExpressionStatement",
												"src": "1769:51:4"
											},
											{
												"assignments": [
													1619
												],
												"declarations": [
													{
														"constant": false,
														"id": 1619,
														"mutability": "mutable",
														"name": "sequence",
														"nameLocation": "1838:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 1649,
														"src": "1831:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 1618,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "1831:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1635,
												"initialValue": {
													"arguments": [
														{
															"id": 1626,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "1955:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1627,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "1975:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1628,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "1996:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"arguments": [
																{
																	"id": 1630,
																	"name": "targetAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1599,
																	"src": "2039:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1629,
																"name": "toWormholeFormat",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1991,
																"src": "2022:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
																	"typeString": "function (address) pure returns (bytes32)"
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2022:31:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "30",
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2068:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1633,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1601,
															"src": "2084:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1620,
																"name": "tokenBridge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1566,
																"src": "1849:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ITokenBridge_$2618",
																	"typeString": "contract ITokenBridge"
																}
															},
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1861:25:4",
															"memberName": "transferTokensWithPayload",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2379,
															"src": "1849:37:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint16_$_t_bytes32_$_t_uint32_$_t_bytes_memory_ptr_$returns$_t_uint64_$",
																"typeString": "function (address,uint256,uint16,bytes32,uint32,bytes memory) payable external returns (uint64)"
															}
														},
														"id": 1625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1622,
																		"name": "wormhole",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "1908:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWormhole_$2948",
																			"typeString": "contract IWormhole"
																		}
																	},
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1917:10:4",
																	"memberName": "messageFee",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2870,
																	"src": "1908:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1908:21:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1849:91:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint16_$_t_bytes32_$_t_uint32_$_t_bytes_memory_ptr_$returns$_t_uint64_$value",
															"typeString": "function (address,uint256,uint16,bytes32,uint32,bytes memory) payable external returns (uint64)"
														}
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1849:253:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1831:271:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1640,
																			"name": "tokenBridge",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1566,
																			"src": "2200:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ITokenBridge_$2618",
																				"typeString": "contract ITokenBridge"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ITokenBridge_$2618",
																				"typeString": "contract ITokenBridge"
																			}
																		],
																		"id": 1639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2192:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1638,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2192:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2192:20:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1637,
																"name": "toWormholeFormat",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1991,
																"src": "2175:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
																	"typeString": "function (address) pure returns (bytes32)"
																}
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2175:38:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1643,
																	"name": "wormhole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "2241:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWormhole_$2948",
																		"typeString": "contract IWormhole"
																	}
																},
																"id": 1644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2250:7:4",
																"memberName": "chainId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2850,
																"src": "2241:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
																	"typeString": "function () view external returns (uint16)"
																}
															},
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2241:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 1646,
															"name": "sequence",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "2288:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 1636,
														"name": "VaaKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2977,
														"src": "2133:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_VaaKey_$2977_storage_ptr_$",
															"typeString": "type(struct VaaKey storage pointer)"
														}
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"2159:14:4",
														"2232:7:4",
														"2278:8:4"
													],
													"names": [
														"emitterAddress",
														"chainId",
														"sequence"
													],
													"nodeType": "FunctionCall",
													"src": "2133:179:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$2977_memory_ptr",
														"typeString": "struct VaaKey memory"
													}
												},
												"functionReturnParameters": 1606,
												"id": 1648,
												"nodeType": "Return",
												"src": "2113:199:4"
											}
										]
									},
									"documentation": {
										"id": 1591,
										"nodeType": "StructuredDocumentation",
										"src": "663:884:4",
										"text": " transferTokens wraps common boilerplate for sending tokens to another chain using IWormholeRelayer.\n A payload can be included in the transfer vaa. By including a payload here instead of the deliveryVaa,\n fewer trust assumptions are placed on the WormholeRelayer contract.\n - approves tokenBridge to spend 'amount' of 'token'\n - emits token transfer VAA\n - returns VAA key for inclusion in WormholeRelayer `additionalVaas` argument\n Note: this function uses transferTokensWithPayload instead of transferTokens since the former requires that only the targetAddress\n       can redeem transfers. Otherwise it's possible for another address to redeem the transfer before the targetContract is invoked by\n       the offchain relayer and the target contract would have to be hardened against this."
									},
									"id": 1650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "1562:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1595:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "1587:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1587:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1619:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "1611:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1611:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "1643:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "1636:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1596,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "1673:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "1665:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1665:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "1710:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "1697:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1600,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1697:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1576:148:4"
									},
									"returnParameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "1743:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VaaKey_$2977_memory_ptr",
													"typeString": "struct VaaKey"
												},
												"typeName": {
													"id": 1604,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1603,
														"name": "VaaKey",
														"nameLocations": [
															"1743:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2977,
														"src": "1743:6:4"
													},
													"referencedDeclaration": 2977,
													"src": "1743:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$2977_storage_ptr",
														"typeString": "struct VaaKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1742:15:4"
									},
									"scope": 1725,
									"src": "1553:767:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "3091:631:4",
										"statements": [
											{
												"assignments": [
													1677
												],
												"declarations": [
													{
														"constant": false,
														"id": 1677,
														"mutability": "mutable",
														"name": "vaaKeys",
														"nameLocation": "3118:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "3102:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct VaaKey[]"
														},
														"typeName": {
															"baseType": {
																"id": 1675,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1674,
																	"name": "VaaKey",
																	"nameLocations": [
																		"3102:6:4"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2977,
																	"src": "3102:6:4"
																},
																"referencedDeclaration": 2977,
																"src": "3102:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaaKey_$2977_storage_ptr",
																	"typeString": "struct VaaKey"
																}
															},
															"id": 1676,
															"nodeType": "ArrayTypeName",
															"src": "3102:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_storage_$dyn_storage_ptr",
																"typeString": "struct VaaKey[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1684,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3141:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3128:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct VaaKey memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1679,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1678,
																	"name": "VaaKey",
																	"nameLocations": [
																		"3132:6:4"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2977,
																	"src": "3132:6:4"
																},
																"referencedDeclaration": 2977,
																"src": "3132:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaaKey_$2977_storage_ptr",
																	"typeString": "struct VaaKey"
																}
															},
															"id": 1680,
															"nodeType": "ArrayTypeName",
															"src": "3132:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_storage_$dyn_storage_ptr",
																"typeString": "struct VaaKey[]"
															}
														}
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3128:15:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct VaaKey memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3102:41:4"
											},
											{
												"expression": {
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1685,
															"name": "vaaKeys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1677,
															"src": "3154:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct VaaKey memory[] memory"
															}
														},
														"id": 1687,
														"indexExpression": {
															"hexValue": "30",
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3162:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3154:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$2977_memory_ptr",
															"typeString": "struct VaaKey memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1689,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1662,
																"src": "3182:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1690,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1664,
																"src": "3189:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1691,
																"name": "targetChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1652,
																"src": "3197:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 1692,
																"name": "targetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1654,
																"src": "3210:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3230:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"id": 1694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3224:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1693,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3224:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3224:9:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1688,
															"name": "transferTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1650,
															"src": "3167:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$returns$_t_struct$_VaaKey_$2977_memory_ptr_$",
																"typeString": "function (address,uint256,uint16,address,bytes memory) returns (struct VaaKey memory)"
															}
														},
														"id": 1697,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3167:67:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$2977_memory_ptr",
															"typeString": "struct VaaKey memory"
														}
													},
													"src": "3154:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$2977_memory_ptr",
														"typeString": "struct VaaKey memory"
													}
												},
												"id": 1699,
												"nodeType": "ExpressionStatement",
												"src": "3154:80:4"
											},
											{
												"assignments": [
													1701,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1701,
														"mutability": "mutable",
														"name": "cost",
														"nameLocation": "3256:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1723,
														"src": "3248:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1700,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3248:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1708,
												"initialValue": {
													"arguments": [
														{
															"id": 1704,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1652,
															"src": "3318:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 1705,
															"name": "receiverValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "3344:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1706,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "3372:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1702,
															"name": "wormholeRelayer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "3266:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWormholeRelayer_$3382",
																"typeString": "contract IWormholeRelayer"
															}
														},
														"id": 1703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3282:21:4",
														"memberName": "quoteEVMDeliveryPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3276,
														"src": "3266:37:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint16_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint16,uint256,uint256) view external returns (uint256,uint256)"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3266:125:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3247:144:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1713,
															"name": "targetChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1652,
															"src": "3483:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 1714,
															"name": "targetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1654,
															"src": "3513:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1715,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1656,
															"src": "3545:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1716,
															"name": "receiverValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "3571:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1717,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "3603:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1718,
															"name": "vaaKeys",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1677,
															"src": "3630:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct VaaKey memory[] memory"
															}
														},
														{
															"id": 1719,
															"name": "refundChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "3656:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 1720,
															"name": "refundAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "3686:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct VaaKey memory[] memory"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct VaaKey memory[] memory"
																},
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1709,
																"name": "wormholeRelayer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "3422:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWormholeRelayer_$3382",
																	"typeString": "contract IWormholeRelayer"
																}
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3438:13:4",
															"memberName": "sendVaasToEvm",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3108,
															"src": "3422:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr_$_t_uint16_$_t_address_$returns$_t_uint64_$",
																"typeString": "function (uint16,address,bytes memory,uint256,uint256,struct VaaKey memory[] memory,uint16,address) payable external returns (uint64)"
															}
														},
														"id": 1712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1711,
																"name": "cost",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1701,
																"src": "3459:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3422:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint16_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr_$_t_uint16_$_t_address_$returns$_t_uint64_$value",
															"typeString": "function (uint16,address,bytes memory,uint256,uint256,struct VaaKey memory[] memory,uint16,address) payable external returns (uint64)"
														}
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3422:292:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1672,
												"id": 1722,
												"nodeType": "Return",
												"src": "3402:312:4"
											}
										]
									},
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendTokenWithPayloadToEvm",
									"nameLocation": "2771:25:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "2814:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "2807:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1651,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2807:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "2844:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "2836:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "2881:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "2868:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1655,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2868:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "2907:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "2899:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2899:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "2939:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "2931:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2931:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2966:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "2958:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2958:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2990:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "2982:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "refundChain",
												"nameLocation": "3014:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "3007:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1665,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3007:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "refundAddress",
												"nameLocation": "3044:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "3036:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3036:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2796:268:4"
									},
									"returnParameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "3083:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1670,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3083:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3082:8:4"
									},
									"scope": 1725,
									"src": "2762:960:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1970,
							"src": "611:3114:4",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1726,
										"name": "TokenBase",
										"nameLocations": [
											"3764:9:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1588,
										"src": "3764:9:4"
									},
									"id": 1727,
									"nodeType": "InheritanceSpecifier",
									"src": "3764:9:4"
								}
							],
							"canonicalName": "TokenReceiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1969,
							"linearizedBaseContracts": [
								1969,
								1588,
								261
							],
							"name": "TokenReceiver",
							"nameLocation": "3747:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1757,
										"nodeType": "Block",
										"src": "3881:234:4",
										"statements": [
											{
												"assignments": [
													null,
													1735
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1735,
														"mutability": "mutable",
														"name": "queriedDecimals",
														"nameLocation": "3935:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 1757,
														"src": "3922:28:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1734,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3922:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1746,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "646563696d616c732829",
																	"id": 1743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4025:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_313ce567add4d438edf58b94ff345d7d38c45b17dfc0f947988d7819dca364f9",
																		"typeString": "literal_string \"decimals()\""
																	},
																	"value": "decimals()"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_313ce567add4d438edf58b94ff345d7d38c45b17dfc0f947988d7819dca364f9",
																		"typeString": "literal_string \"decimals()\""
																	}
																],
																"expression": {
																	"id": 1741,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4001:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4005:19:4",
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "4001:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4001:37:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1738,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1729,
																	"src": "3962:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1737,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3954:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1736,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3954:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3954:21:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3976:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3954:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3954:95:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3919:130:4"
											},
											{
												"expression": {
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1747,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1732,
														"src": "4060:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1750,
																"name": "queriedDecimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1735,
																"src": "4082:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"components": [
																	{
																		"id": 1752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4100:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 1751,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "4100:5:4",
																			"typeDescriptions": {}
																		}
																	}
																],
																"id": 1753,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4099:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																}
															],
															"expression": {
																"id": 1748,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "4071:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4075:6:4",
															"memberName": "decode",
															"nodeType": "MemberAccess",
															"src": "4071:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4071:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4060:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1756,
												"nodeType": "ExpressionStatement",
												"src": "4060:47:4"
											}
										]
									},
									"id": 1758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDecimals",
									"nameLocation": "3792:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "3822:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "3814:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3814:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3803:38:4"
									},
									"returnParameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "3871:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "3865:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1731,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3865:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:16:4"
									},
									"scope": 1969,
									"src": "3783:332:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "4289:209:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"id": 1771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1767,
															"name": "tokenHomeChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1760,
															"src": "4320:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1768,
																	"name": "wormhole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "4338:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWormhole_$2948",
																		"typeString": "contract IWormhole"
																	}
																},
																"id": 1769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4347:7:4",
																"memberName": "chainId",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2850,
																"src": "4338:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
																	"typeString": "function () view external returns (uint16)"
																}
															},
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4338:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "4320:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"id": 1777,
																"name": "tokenHomeChain",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "4457:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															{
																"id": 1778,
																"name": "tokenHomeAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1762,
																"src": "4473:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1775,
																"name": "tokenBridge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1566,
																"src": "4432:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ITokenBridge_$2618",
																	"typeString": "contract ITokenBridge"
																}
															},
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4444:12:4",
															"memberName": "wrappedAsset",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2533,
															"src": "4432:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_uint16_$_t_bytes32_$returns$_t_address_$",
																"typeString": "function (uint16,bytes32) view external returns (address)"
															}
														},
														"id": 1779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4432:58:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4320:170:4",
													"trueExpression": {
														"arguments": [
															{
																"id": 1773,
																"name": "tokenHomeAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1762,
																"src": "4395:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1772,
															"name": "fromWormholeFormat",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "4376:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_address_$",
																"typeString": "function (bytes32) pure returns (address)"
															}
														},
														"id": 1774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4376:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1766,
												"id": 1781,
												"nodeType": "Return",
												"src": "4300:190:4"
											}
										]
									},
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenAddressOnThisChain",
									"nameLocation": "4132:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "tokenHomeChain",
												"nameLocation": "4176:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "4169:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1759,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4169:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "tokenHomeAddress",
												"nameLocation": "4209:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "4201:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1761,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4201:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4158:74:4"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "tokenAddressOnThisChain",
												"nameLocation": "4264:23:4",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "4256:31:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4256:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4255:33:4"
									},
									"scope": 1969,
									"src": "4123:375:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1948,
										"nodeType": "Block",
										"src": "4726:1897:4",
										"statements": [
											{
												"assignments": [
													1802
												],
												"declarations": [
													{
														"constant": false,
														"id": 1802,
														"mutability": "mutable",
														"name": "receivedTokens",
														"nameLocation": "4768:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 1948,
														"src": "4737:45:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TokenReceived_$132_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Structs.TokenReceived[]"
														},
														"typeName": {
															"baseType": {
																"id": 1800,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1799,
																	"name": "Structs.TokenReceived",
																	"nameLocations": [
																		"4737:7:4",
																		"4745:13:4"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 132,
																	"src": "4737:21:4"
																},
																"referencedDeclaration": 132,
																"src": "4737:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenReceived_$132_storage_ptr",
																	"typeString": "struct Structs.TokenReceived"
																}
															},
															"id": 1801,
															"nodeType": "ArrayTypeName",
															"src": "4737:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenReceived_$132_storage_$dyn_storage_ptr",
																"typeString": "struct Structs.TokenReceived[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1810,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1807,
																"name": "additionalVaas",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "4827:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																	"typeString": "bytes memory[] memory"
																}
															},
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4842:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4827:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1806,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4785:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TokenReceived_$132_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct Structs.TokenReceived memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1804,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1803,
																	"name": "Structs.TokenReceived",
																	"nameLocations": [
																		"4789:7:4",
																		"4797:13:4"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 132,
																	"src": "4789:21:4"
																},
																"referencedDeclaration": 132,
																"src": "4789:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenReceived_$132_storage_ptr",
																	"typeString": "struct Structs.TokenReceived"
																}
															},
															"id": 1805,
															"nodeType": "ArrayTypeName",
															"src": "4789:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenReceived_$132_storage_$dyn_storage_ptr",
																"typeString": "struct Structs.TokenReceived[]"
															}
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4785:74:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenReceived_$132_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Structs.TokenReceived memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4737:122:4"
											},
											{
												"body": {
													"id": 1937,
													"nodeType": "Block",
													"src": "4924:1445:4",
													"statements": [
														{
															"assignments": [
																1826
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1826,
																	"mutability": "mutable",
																	"name": "parsed",
																	"nameLocation": "4959:6:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1937,
																	"src": "4939:26:4",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VM_$2674_memory_ptr",
																		"typeString": "struct IWormhole.VM"
																	},
																	"typeName": {
																		"id": 1825,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1824,
																			"name": "IWormhole.VM",
																			"nameLocations": [
																				"4939:9:4",
																				"4949:2:4"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2674,
																			"src": "4939:12:4"
																		},
																		"referencedDeclaration": 2674,
																		"src": "4939:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_VM_$2674_storage_ptr",
																			"typeString": "struct IWormhole.VM"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1833,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1829,
																			"name": "additionalVaas",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "4985:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																				"typeString": "bytes memory[] memory"
																			}
																		},
																		"id": 1831,
																		"indexExpression": {
																			"id": 1830,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1812,
																			"src": "5000:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4985:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1827,
																		"name": "wormhole",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "4968:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWormhole_$2948",
																			"typeString": "contract IWormhole"
																		}
																	},
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4977:7:4",
																	"memberName": "parseVM",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2806,
																	"src": "4968:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_struct$_VM_$2674_memory_ptr_$",
																		"typeString": "function (bytes memory) pure external returns (struct IWormhole.VM memory)"
																	}
																},
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4968:35:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VM_$2674_memory_ptr",
																	"typeString": "struct IWormhole.VM memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4939:64:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 1842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1835,
																				"name": "parsed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1826,
																				"src": "5044:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_VM_$2674_memory_ptr",
																					"typeString": "struct IWormhole.VM memory"
																				}
																			},
																			"id": 1836,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5051:14:4",
																			"memberName": "emitterAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2659,
																			"src": "5044:21:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1839,
																						"name": "parsed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1826,
																						"src": "5118:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_VM_$2674_memory_ptr",
																							"typeString": "struct IWormhole.VM memory"
																						}
																					},
																					"id": 1840,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5125:14:4",
																					"memberName": "emitterChainId",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2657,
																					"src": "5118:21:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				],
																				"expression": {
																					"id": 1837,
																					"name": "tokenBridge",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1566,
																					"src": "5090:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ITokenBridge_$2618",
																						"typeString": "contract ITokenBridge"
																					}
																				},
																				"id": 1838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5102:15:4",
																				"memberName": "bridgeContracts",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2540,
																				"src": "5090:27:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_uint16_$returns$_t_bytes32_$",
																					"typeString": "function (uint16) view external returns (bytes32)"
																				}
																			},
																			"id": 1841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5090:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "5044:96:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e6f74206120546f6b656e2042726964676520564141",
																		"id": 1843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5159:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_97f7701d47a07e774ac5a8a9759768a55db9a0927dcdf2b109ecb87275183f9e",
																			"typeString": "literal_string \"Not a Token Bridge VAA\""
																		},
																		"value": "Not a Token Bridge VAA"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_97f7701d47a07e774ac5a8a9759768a55db9a0927dcdf2b109ecb87275183f9e",
																			"typeString": "literal_string \"Not a Token Bridge VAA\""
																		}
																	],
																	"id": 1834,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5018:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5018:180:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1845,
															"nodeType": "ExpressionStatement",
															"src": "5018:180:4"
														},
														{
															"assignments": [
																1850
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1850,
																	"mutability": "mutable",
																	"name": "transfer",
																	"nameLocation": "5253:8:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1937,
																	"src": "5213:48:4",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TransferWithPayload_$2254_memory_ptr",
																		"typeString": "struct ITokenBridge.TransferWithPayload"
																	},
																	"typeName": {
																		"id": 1849,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1848,
																			"name": "ITokenBridge.TransferWithPayload",
																			"nameLocations": [
																				"5213:12:4",
																				"5226:19:4"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2254,
																			"src": "5213:32:4"
																		},
																		"referencedDeclaration": 2254,
																		"src": "5213:32:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TransferWithPayload_$2254_storage_ptr",
																			"typeString": "struct ITokenBridge.TransferWithPayload"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1856,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1853,
																			"name": "parsed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1826,
																			"src": "5319:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_VM_$2674_memory_ptr",
																				"typeString": "struct IWormhole.VM memory"
																			}
																		},
																		"id": 1854,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5326:7:4",
																		"memberName": "payload",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2665,
																		"src": "5319:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1851,
																		"name": "tokenBridge",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "5264:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ITokenBridge_$2618",
																			"typeString": "contract ITokenBridge"
																		}
																	},
																	"id": 1852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5294:24:4",
																	"memberName": "parseTransferWithPayload",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2472,
																	"src": "5264:54:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_struct$_TransferWithPayload_$2254_memory_ptr_$",
																		"typeString": "function (bytes memory) pure external returns (struct ITokenBridge.TransferWithPayload memory)"
																	}
																},
																"id": 1855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5264:70:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferWithPayload_$2254_memory_ptr",
																	"typeString": "struct ITokenBridge.TransferWithPayload memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5213:121:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 1866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1858,
																					"name": "transfer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1850,
																					"src": "5375:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TransferWithPayload_$2254_memory_ptr",
																						"typeString": "struct ITokenBridge.TransferWithPayload memory"
																					}
																				},
																				"id": 1859,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5384:2:4",
																				"memberName": "to",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2247,
																				"src": "5375:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 1863,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "5415:4:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_TokenReceiver_$1969",
																									"typeString": "contract TokenReceiver"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_TokenReceiver_$1969",
																									"typeString": "contract TokenReceiver"
																								}
																							],
																							"id": 1862,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "5407:7:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 1861,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "5407:7:4",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1864,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5407:13:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1860,
																					"name": "toWormholeFormat",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1991,
																					"src": "5390:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
																						"typeString": "function (address) pure returns (bytes32)"
																					}
																				},
																				"id": 1865,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5390:31:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "5375:46:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			},
																			"id": 1872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1867,
																					"name": "transfer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1850,
																					"src": "5446:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TransferWithPayload_$2254_memory_ptr",
																						"typeString": "struct ITokenBridge.TransferWithPayload memory"
																					}
																				},
																				"id": 1868,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5455:7:4",
																				"memberName": "toChain",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2249,
																				"src": "5446:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 1869,
																						"name": "wormhole",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 174,
																						"src": "5466:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IWormhole_$2948",
																							"typeString": "contract IWormhole"
																						}
																					},
																					"id": 1870,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5475:7:4",
																					"memberName": "chainId",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2850,
																					"src": "5466:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
																						"typeString": "function () view external returns (uint16)"
																					}
																				},
																				"id": 1871,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5466:18:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "5446:38:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "5375:109:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "546f6b656e206e6f742073656e7420746f20746869732061646472657373",
																		"id": 1874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5503:32:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1587fd9efdc07d558c078a74a30ad8db081ac9d0d26b6a9d46b25be570878bc2",
																			"typeString": "literal_string \"Token not sent to this address\""
																		},
																		"value": "Token not sent to this address"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1587fd9efdc07d558c078a74a30ad8db081ac9d0d26b6a9d46b25be570878bc2",
																			"typeString": "literal_string \"Token not sent to this address\""
																		}
																	],
																	"id": 1857,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5349:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5349:201:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1876,
															"nodeType": "ExpressionStatement",
															"src": "5349:201:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1880,
																			"name": "additionalVaas",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "5607:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																				"typeString": "bytes memory[] memory"
																			}
																		},
																		"id": 1882,
																		"indexExpression": {
																			"id": 1881,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1812,
																			"src": "5622:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5607:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1877,
																		"name": "tokenBridge",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "5567:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ITokenBridge_$2618",
																			"typeString": "contract ITokenBridge"
																		}
																	},
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5579:27:4",
																	"memberName": "completeTransferWithPayload",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2400,
																	"src": "5567:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) external returns (bytes memory)"
																	}
																},
																"id": 1883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5567:58:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1884,
															"nodeType": "ExpressionStatement",
															"src": "5567:58:4"
														},
														{
															"assignments": [
																1886
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1886,
																	"mutability": "mutable",
																	"name": "thisChainTokenAddress",
																	"nameLocation": "5650:21:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1937,
																	"src": "5642:29:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1885,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5642:7:4",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1893,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1888,
																			"name": "transfer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1850,
																			"src": "5719:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferWithPayload_$2254_memory_ptr",
																				"typeString": "struct ITokenBridge.TransferWithPayload memory"
																			}
																		},
																		"id": 1889,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5728:10:4",
																		"memberName": "tokenChain",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2245,
																		"src": "5719:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	{
																		"expression": {
																			"id": 1890,
																			"name": "transfer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1850,
																			"src": "5757:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TransferWithPayload_$2254_memory_ptr",
																				"typeString": "struct ITokenBridge.TransferWithPayload memory"
																			}
																		},
																		"id": 1891,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5766:12:4",
																		"memberName": "tokenAddress",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2243,
																		"src": "5757:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1887,
																	"name": "getTokenAddressOnThisChain",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1783,
																	"src": "5674:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint16_$_t_bytes32_$returns$_t_address_$",
																		"typeString": "function (uint16,bytes32) view returns (address)"
																	}
																},
																"id": 1892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5674:119:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5642:151:4"
														},
														{
															"assignments": [
																1895
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1895,
																	"mutability": "mutable",
																	"name": "decimals",
																	"nameLocation": "5814:8:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1937,
																	"src": "5808:14:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1894,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "5808:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1899,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1897,
																		"name": "thisChainTokenAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1886,
																		"src": "5837:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1896,
																	"name": "getDecimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1758,
																	"src": "5825:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint8_$",
																		"typeString": "function (address) view returns (uint8)"
																	}
																},
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5825:34:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5808:51:4"
														},
														{
															"assignments": [
																1901
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1901,
																	"mutability": "mutable",
																	"name": "denormalizedAmount",
																	"nameLocation": "5882:18:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1937,
																	"src": "5874:26:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1900,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5874:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1904,
															"initialValue": {
																"expression": {
																	"id": 1902,
																	"name": "transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1850,
																	"src": "5903:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TransferWithPayload_$2254_memory_ptr",
																		"typeString": "struct ITokenBridge.TransferWithPayload memory"
																	}
																},
																"id": 1903,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5912:6:4",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2241,
																"src": "5903:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5874:44:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1905,
																	"name": "decimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1895,
																	"src": "5937:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5948:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "5937:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1920,
															"nodeType": "IfStatement",
															"src": "5933:86:4",
															"trueBody": {
																"expression": {
																	"id": 1918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1908,
																		"name": "denormalizedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1901,
																		"src": "5968:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "*=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"hexValue": "3130",
																					"id": 1911,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5998:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					}
																				],
																				"id": 1910,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5990:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1909,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5990:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5990:11:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					"id": 1915,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1913,
																						"name": "decimals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1895,
																						"src": "6006:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "38",
																						"id": 1914,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6017:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_8_by_1",
																							"typeString": "int_const 8"
																						},
																						"value": "8"
																					},
																					"src": "6006:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"id": 1916,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "6005:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "5990:29:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5968:51:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1919,
																"nodeType": "ExpressionStatement",
																"src": "5968:51:4"
															}
														},
														{
															"expression": {
																"id": 1935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1921,
																		"name": "receivedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1802,
																		"src": "6036:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_TokenReceived_$132_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct Structs.TokenReceived memory[] memory"
																		}
																	},
																	"id": 1923,
																	"indexExpression": {
																		"id": 1922,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "6051:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6036:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenReceived_$132_memory_ptr",
																		"typeString": "struct Structs.TokenReceived memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1926,
																				"name": "transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1850,
																				"src": "6115:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TransferWithPayload_$2254_memory_ptr",
																					"typeString": "struct ITokenBridge.TransferWithPayload memory"
																				}
																			},
																			"id": 1927,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6124:12:4",
																			"memberName": "tokenAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2243,
																			"src": "6115:21:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"expression": {
																				"id": 1928,
																				"name": "transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1850,
																				"src": "6171:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TransferWithPayload_$2254_memory_ptr",
																					"typeString": "struct ITokenBridge.TransferWithPayload memory"
																				}
																			},
																			"id": 1929,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6180:10:4",
																			"memberName": "tokenChain",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2245,
																			"src": "6171:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		{
																			"id": 1930,
																			"name": "thisChainTokenAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1886,
																			"src": "6223:21:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1931,
																			"name": "denormalizedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1901,
																			"src": "6271:18:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 1932,
																				"name": "transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1850,
																				"src": "6326:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_TransferWithPayload_$2254_memory_ptr",
																					"typeString": "struct ITokenBridge.TransferWithPayload memory"
																				}
																			},
																			"id": 1933,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6335:6:4",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2241,
																			"src": "6326:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			{
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1924,
																			"name": "Structs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 133,
																			"src": "6056:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Structs_$133_$",
																				"typeString": "type(library Structs)"
																			}
																		},
																		"id": 1925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6064:13:4",
																		"memberName": "TokenReceived",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 132,
																		"src": "6056:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_TokenReceived_$132_storage_ptr_$",
																			"typeString": "type(struct Structs.TokenReceived storage pointer)"
																		}
																	},
																	"id": 1934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [
																		"6097:16:4",
																		"6155:14:4",
																		"6209:12:4",
																		"6263:6:4",
																		"6308:16:4"
																	],
																	"names": [
																		"tokenHomeAddress",
																		"tokenHomeChain",
																		"tokenAddress",
																		"amount",
																		"amountNormalized"
																	],
																	"nodeType": "FunctionCall",
																	"src": "6056:301:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenReceived_$132_memory_ptr",
																		"typeString": "struct Structs.TokenReceived memory"
																	}
																},
																"src": "6036:321:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenReceived_$132_memory_ptr",
																	"typeString": "struct Structs.TokenReceived memory"
																}
															},
															"id": 1936,
															"nodeType": "ExpressionStatement",
															"src": "6036:321:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1815,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "4892:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1816,
															"name": "additionalVaas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "4896:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																"typeString": "bytes memory[] memory"
															}
														},
														"id": 1817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4911:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4896:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4892:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1938,
												"initializationExpression": {
													"assignments": [
														1812
													],
													"declarations": [
														{
															"constant": false,
															"id": 1812,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4885:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 1938,
															"src": "4877:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1811,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4877:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1814,
													"initialValue": {
														"hexValue": "30",
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4889:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4877:13:4"
												},
												"loopExpression": {
													"expression": {
														"id": 1820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "4919:3:4",
														"subExpression": {
															"id": 1819,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1812,
															"src": "4921:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1821,
													"nodeType": "ExpressionStatement",
													"src": "4919:3:4"
												},
												"nodeType": "ForStatement",
												"src": "4872:1497:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1940,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "6458:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1941,
															"name": "receivedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1802,
															"src": "6480:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenReceived_$132_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct Structs.TokenReceived memory[] memory"
															}
														},
														{
															"id": 1942,
															"name": "sourceAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1790,
															"src": "6509:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1943,
															"name": "sourceChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1792,
															"src": "6537:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 1944,
															"name": "deliveryHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "6563:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1945,
															"name": "additionalVaas",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "6590:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																"typeString": "bytes memory[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_array$_t_struct$_TokenReceived_$132_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct Structs.TokenReceived memory[] memory"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																"typeString": "bytes memory[] memory"
															}
														],
														"id": 1939,
														"name": "receivePayloadAndTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1968,
														"src": "6420:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_array$_t_struct$_TokenReceived_$132_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$_t_uint16_$_t_bytes32_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (bytes memory,struct Structs.TokenReceived memory[] memory,bytes32,uint16,bytes32,bytes memory[] memory)"
														}
													},
													"id": 1946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6420:195:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1947,
												"nodeType": "ExpressionStatement",
												"src": "6420:195:4"
											}
										]
									},
									"functionSelector": "529dca32",
									"id": 1949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receiveWormholeMessages",
									"nameLocation": "4515:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "4562:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "4549:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1784,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4549:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "additionalVaas",
												"nameLocation": "4595:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "4580:29:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 1786,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "4580:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 1787,
													"nodeType": "ArrayTypeName",
													"src": "4580:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "4628:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "4620:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1789,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4620:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "4659:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "4652:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1791,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4652:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "4689:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1949,
												"src": "4681:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1793,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4681:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4538:170:4"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4726:0:4"
									},
									"scope": 1969,
									"src": "4506:2117:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1967,
										"nodeType": "Block",
										"src": "7005:2:4",
										"statements": []
									},
									"id": 1968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "receivePayloadAndTokens",
									"nameLocation": "6738:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "6785:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "6772:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1950,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6772:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "receivedTokens",
												"nameLocation": "6834:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "6803:45:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenReceived_$132_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Structs.TokenReceived[]"
												},
												"typeName": {
													"baseType": {
														"id": 1953,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1952,
															"name": "Structs.TokenReceived",
															"nameLocations": [
																"6803:7:4",
																"6811:13:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 132,
															"src": "6803:21:4"
														},
														"referencedDeclaration": 132,
														"src": "6803:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenReceived_$132_storage_ptr",
															"typeString": "struct Structs.TokenReceived"
														}
													},
													"id": 1954,
													"nodeType": "ArrayTypeName",
													"src": "6803:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenReceived_$132_storage_$dyn_storage_ptr",
														"typeString": "struct Structs.TokenReceived[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "6867:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "6859:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1956,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6859:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "6898:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "6891:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1958,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6891:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "6928:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "6920:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1960,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6920:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "additionalVaas",
												"nameLocation": "6966:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "6951:29:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 1962,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "6951:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 1963,
													"nodeType": "ArrayTypeName",
													"src": "6951:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6761:226:4"
									},
									"returnParameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7005:0:4"
									},
									"scope": 1969,
									"src": "6729:278:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1970,
							"src": "3729:3281:4",
							"usedErrors": [
								3475
							],
							"usedEvents": []
						}
					],
					"src": "0:7012:4"
				},
				"id": 4
			},
			"Nebula-bridge-contracts/src/Utils.sol": {
				"ast": {
					"absolutePath": "Nebula-bridge-contracts/src/Utils.sol",
					"exportedSymbols": {
						"DeliveryProviderCannotReceivePayment": [
							3401
						],
						"DeliveryProviderDoesNotSupportMessageKeyType": [
							3405
						],
						"DeliveryProviderDoesNotSupportTargetChain": [
							3399
						],
						"IWormholeRelayer": [
							3382
						],
						"IWormholeRelayerBase": [
							3025
						],
						"IWormholeRelayerDelivery": [
							3377
						],
						"IWormholeRelayerSend": [
							3327
						],
						"InsufficientRelayerFunds": [
							3471
						],
						"InvalidDeliveryVaa": [
							3435
						],
						"InvalidEmitter": [
							3443
						],
						"InvalidMsgValue": [
							3391
						],
						"InvalidOverrideGasLimit": [
							3461
						],
						"InvalidOverrideReceiverValue": [
							3463
						],
						"InvalidOverrideRefundPerGasUnused": [
							3465
						],
						"InvalidPayloadId": [
							3417
						],
						"InvalidPayloadLength": [
							3423
						],
						"InvalidVaaKeyType": [
							3427
						],
						"MessageKey": [
							2985
						],
						"MessageKeysLengthDoesNotMatchMessagesLength": [
							3449
						],
						"NotAnEvmAddress": [
							3475
						],
						"RETURNDATA_TRUNCATION_THRESHOLD": [
							3385
						],
						"ReentrantDelivery": [
							3411
						],
						"RequestedGasLimitTooLow": [
							3393
						],
						"RequesterNotWormholeRelayer": [
							3455
						],
						"TargetChainIsNotThisChain": [
							3459
						],
						"TooManyMessageKeys": [
							3431
						],
						"VAA_KEY_TYPE": [
							2980
						],
						"VaaKey": [
							2977
						],
						"VaaKeysDoNotMatchVaas": [
							3453
						],
						"addressToBytes32CCTP": [
							2036
						],
						"fromWormholeFormat": [
							2024
						],
						"toWormholeFormat": [
							1991
						]
					},
					"id": 2037,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1971,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "2:24:5"
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol",
							"file": "./interfaces/IWormholeRelayer.sol",
							"id": 1972,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2037,
							"sourceUnit": 3476,
							"src": "30:43:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"body": {
								"id": 1990,
								"nodeType": "Block",
								"src": "140:49:5",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1985,
																	"name": "addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1974,
																	"src": "178:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "170:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1983,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "170:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "170:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1982,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "162:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1981,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "162:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "162:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												],
												"id": 1980,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "154:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_bytes32_$",
													"typeString": "type(bytes32)"
												},
												"typeName": {
													"id": 1979,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "154:7:5",
													"typeDescriptions": {}
												}
											},
											"id": 1988,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "154:31:5",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"functionReturnParameters": 1978,
										"id": 1989,
										"nodeType": "Return",
										"src": "147:38:5"
									}
								]
							},
							"id": 1991,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "toWormholeFormat",
							"nameLocation": "86:16:5",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 1975,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1974,
										"mutability": "mutable",
										"name": "addr",
										"nameLocation": "111:4:5",
										"nodeType": "VariableDeclaration",
										"scope": 1991,
										"src": "103:12:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 1973,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "103:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "102:14:5"
							},
							"returnParameters": {
								"id": 1978,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1977,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 1991,
										"src": "131:7:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 1976,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "131:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "130:9:5"
							},
							"scope": 2037,
							"src": "77:112:5",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2023,
								"nodeType": "Block",
								"src": "269:166:5",
								"statements": [
									{
										"condition": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 2005,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"commonType": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"id": 2003,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"leftExpression": {
													"arguments": [
														{
															"id": 2000,
															"name": "whFormatAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1993,
															"src": "288:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "280:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1998,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "280:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "280:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "BinaryOperation",
												"operator": ">>",
												"rightExpression": {
													"hexValue": "313630",
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "308:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_160_by_1",
														"typeString": "int_const 160"
													},
													"value": "160"
												},
												"src": "280:31:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "!=",
											"rightExpression": {
												"hexValue": "30",
												"id": 2004,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "315:1:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											},
											"src": "280:36:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										},
										"id": 2011,
										"nodeType": "IfStatement",
										"src": "276:100:5",
										"trueBody": {
											"id": 2010,
											"nodeType": "Block",
											"src": "318:58:5",
											"statements": [
												{
													"errorCall": {
														"arguments": [
															{
																"id": 2007,
																"name": "whFormatAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1993,
																"src": "352:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2006,
															"name": "NotAnEvmAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3475,
															"src": "336:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																"typeString": "function (bytes32) pure"
															}
														},
														"id": 2008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "336:32:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2009,
													"nodeType": "RevertStatement",
													"src": "329:39:5"
												}
											]
										}
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2018,
																	"name": "whFormatAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1993,
																	"src": "413:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "405:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2016,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "405:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "405:24:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2015,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "397:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 2014,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "397:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "397:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												],
												"id": 2013,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "389:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": {
													"id": 2012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:5",
													"typeDescriptions": {}
												}
											},
											"id": 2021,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "389:42:5",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"functionReturnParameters": 1997,
										"id": 2022,
										"nodeType": "Return",
										"src": "382:49:5"
									}
								]
							},
							"id": 2024,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "fromWormholeFormat",
							"nameLocation": "202:18:5",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 1994,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1993,
										"mutability": "mutable",
										"name": "whFormatAddress",
										"nameLocation": "229:15:5",
										"nodeType": "VariableDeclaration",
										"scope": 2024,
										"src": "221:23:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 1992,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "221:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "220:25:5"
							},
							"returnParameters": {
								"id": 1997,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1996,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 2024,
										"src": "260:7:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 1995,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "260:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "259:9:5"
							},
							"scope": 2037,
							"src": "193:242:5",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"body": {
								"id": 2035,
								"nodeType": "Block",
								"src": "506:44:5",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"id": 2032,
													"name": "addr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2026,
													"src": "541:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												],
												"id": 2031,
												"name": "toWormholeFormat",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1991,
												"src": "524:16:5",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
													"typeString": "function (address) pure returns (bytes32)"
												}
											},
											"id": 2033,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "524:22:5",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"functionReturnParameters": 2030,
										"id": 2034,
										"nodeType": "Return",
										"src": "517:29:5"
									}
								]
							},
							"id": 2036,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "addressToBytes32CCTP",
							"nameLocation": "448:20:5",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 2027,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2026,
										"mutability": "mutable",
										"name": "addr",
										"nameLocation": "477:4:5",
										"nodeType": "VariableDeclaration",
										"scope": 2036,
										"src": "469:12:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 2025,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "469:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "468:14:5"
							},
							"returnParameters": {
								"id": 2030,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 2029,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 2036,
										"src": "497:7:5",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 2028,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "497:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "496:9:5"
							},
							"scope": 2037,
							"src": "439:111:5",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						}
					],
					"src": "2:548:5"
				},
				"id": 5
			},
			"Nebula-bridge-contracts/src/WormholeRelayerSDK.sol": {
				"ast": {
					"absolutePath": "Nebula-bridge-contracts/src/WormholeRelayerSDK.sol",
					"exportedSymbols": {
						"Base": [
							261
						],
						"CCTPAndTokenBase": [
							312
						],
						"CCTPAndTokenReceiver": [
							1144
						],
						"CCTPAndTokenSender": [
							735
						],
						"CCTPBase": [
							1221
						],
						"CCTPReceiver": [
							1550
						],
						"CCTPSender": [
							1411
						],
						"DeliveryProviderCannotReceivePayment": [
							3401
						],
						"DeliveryProviderDoesNotSupportMessageKeyType": [
							3405
						],
						"DeliveryProviderDoesNotSupportTargetChain": [
							3399
						],
						"IWormholeReceiver": [
							2967
						],
						"IWormholeRelayer": [
							3382
						],
						"IWormholeRelayerBase": [
							3025
						],
						"IWormholeRelayerDelivery": [
							3377
						],
						"IWormholeRelayerSend": [
							3327
						],
						"InsufficientRelayerFunds": [
							3471
						],
						"InvalidDeliveryVaa": [
							3435
						],
						"InvalidEmitter": [
							3443
						],
						"InvalidMsgValue": [
							3391
						],
						"InvalidOverrideGasLimit": [
							3461
						],
						"InvalidOverrideReceiverValue": [
							3463
						],
						"InvalidOverrideRefundPerGasUnused": [
							3465
						],
						"InvalidPayloadId": [
							3417
						],
						"InvalidPayloadLength": [
							3423
						],
						"InvalidVaaKeyType": [
							3427
						],
						"MessageKey": [
							2985
						],
						"MessageKeysLengthDoesNotMatchMessagesLength": [
							3449
						],
						"NotAnEvmAddress": [
							3475
						],
						"RETURNDATA_TRUNCATION_THRESHOLD": [
							3385
						],
						"ReentrantDelivery": [
							3411
						],
						"RequestedGasLimitTooLow": [
							3393
						],
						"RequesterNotWormholeRelayer": [
							3455
						],
						"TargetChainIsNotThisChain": [
							3459
						],
						"TokenBase": [
							1588
						],
						"TokenReceiver": [
							1969
						],
						"TokenSender": [
							1725
						],
						"TooManyMessageKeys": [
							3431
						],
						"VAA_KEY_TYPE": [
							2980
						],
						"VaaKey": [
							2977
						],
						"VaaKeysDoNotMatchVaas": [
							3453
						],
						"addressToBytes32CCTP": [
							2036
						],
						"fromWormholeFormat": [
							2024
						],
						"toWormholeFormat": [
							1991
						]
					},
					"id": 2056,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2038,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:6"
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol",
							"file": "./interfaces/IWormholeReceiver.sol",
							"id": 2039,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2056,
							"sourceUnit": 2968,
							"src": "28:44:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol",
							"file": "./interfaces/IWormholeRelayer.sol",
							"id": 2040,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2056,
							"sourceUnit": 3476,
							"src": "74:43:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/Utils.sol",
							"file": "./Utils.sol",
							"id": 2041,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2056,
							"sourceUnit": 2037,
							"src": "119:21:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/Base.sol",
							"file": "./Base.sol",
							"id": 2043,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2056,
							"sourceUnit": 262,
							"src": "142:32:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2042,
										"name": "Base",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 261,
										"src": "150:4:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/TokenBase.sol",
							"file": "./TokenBase.sol",
							"id": 2047,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2056,
							"sourceUnit": 1970,
							"src": "176:70:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2044,
										"name": "TokenBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1588,
										"src": "184:9:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2045,
										"name": "TokenReceiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1969,
										"src": "195:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2046,
										"name": "TokenSender",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1725,
										"src": "210:11:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/CCTPBase.sol",
							"file": "./CCTPBase.sol",
							"id": 2051,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2056,
							"sourceUnit": 1551,
							"src": "248:66:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2048,
										"name": "CCTPBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1221,
										"src": "256:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2049,
										"name": "CCTPReceiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1550,
										"src": "266:12:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2050,
										"name": "CCTPSender",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1411,
										"src": "280:10:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/CCTPAndTokenBase.sol",
							"file": "./CCTPAndTokenBase.sol",
							"id": 2055,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2056,
							"sourceUnit": 1145,
							"src": "316:98:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2052,
										"name": "CCTPAndTokenBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 312,
										"src": "324:16:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2053,
										"name": "CCTPAndTokenReceiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1144,
										"src": "342:20:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2054,
										"name": "CCTPAndTokenSender",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 735,
										"src": "364:18:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "0:418:6"
				},
				"id": 6
			},
			"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol": {
				"ast": {
					"absolutePath": "Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IMessageTransmitter.sol",
					"exportedSymbols": {
						"IMessageTransmitter": [
							2065
						],
						"IReceiver": [
							2079
						],
						"IRelayer": [
							2121
						]
					},
					"id": 2066,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2057,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "634:23:7"
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol",
							"file": "./IRelayer.sol",
							"id": 2058,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2066,
							"sourceUnit": 2122,
							"src": "661:24:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol",
							"file": "./IReceiver.sol",
							"id": 2059,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2066,
							"sourceUnit": 2080,
							"src": "687:25:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2061,
										"name": "IRelayer",
										"nameLocations": [
											"877:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2121,
										"src": "877:8:7"
									},
									"id": 2062,
									"nodeType": "InheritanceSpecifier",
									"src": "877:8:7"
								},
								{
									"baseName": {
										"id": 2063,
										"name": "IReceiver",
										"nameLocations": [
											"887:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2079,
										"src": "887:9:7"
									},
									"id": 2064,
									"nodeType": "InheritanceSpecifier",
									"src": "887:9:7"
								}
							],
							"canonicalName": "IMessageTransmitter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2060,
								"nodeType": "StructuredDocumentation",
								"src": "716:126:7",
								"text": " @title IMessageTransmitter\n @notice Interface for message transmitters, which both relay and receive messages."
							},
							"fullyImplemented": false,
							"id": 2065,
							"linearizedBaseContracts": [
								2065,
								2079,
								2121
							],
							"name": "IMessageTransmitter",
							"nameLocation": "854:19:7",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2066,
							"src": "844:59:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "634:271:7"
				},
				"id": 7
			},
			"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol": {
				"ast": {
					"absolutePath": "Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IReceiver.sol",
					"exportedSymbols": {
						"IReceiver": [
							2079
						]
					},
					"id": 2080,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2067,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "634:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IReceiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2068,
								"nodeType": "StructuredDocumentation",
								"src": "661:128:8",
								"text": " @title IReceiver\n @notice Receives messages on destination chain and forwards them to IMessageDestinationHandler"
							},
							"fullyImplemented": false,
							"id": 2079,
							"linearizedBaseContracts": [
								2079
							],
							"name": "IReceiver",
							"nameLocation": "801:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2069,
										"nodeType": "StructuredDocumentation",
										"src": "818:283:8",
										"text": " @notice Receives an incoming message, validating the header and passing\n the body to application-specific handler.\n @param message The message raw bytes\n @param signature The message signature\n @return success bool, true if successful"
									},
									"functionSelector": "57ecfd28",
									"id": 2078,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "receiveMessage",
									"nameLocation": "1116:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1146:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2078,
												"src": "1131:22:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2070,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1131:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1170:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2078,
												"src": "1155:24:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2072,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1155:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1130:50:8"
									},
									"returnParameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1222:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2078,
												"src": "1217:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2075,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1217:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1216:14:8"
									},
									"scope": 2079,
									"src": "1107:124:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2080,
							"src": "791:443:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "634:602:8"
				},
				"id": 8
			},
			"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol": {
				"ast": {
					"absolutePath": "Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/IRelayer.sol",
					"exportedSymbols": {
						"IRelayer": [
							2121
						]
					},
					"id": 2122,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2081,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "634:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRelayer",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2082,
								"nodeType": "StructuredDocumentation",
								"src": "661:96:9",
								"text": " @title IRelayer\n @notice Sends messages from source domain to destination domain"
							},
							"fullyImplemented": false,
							"id": 2121,
							"linearizedBaseContracts": [
								2121
							],
							"name": "IRelayer",
							"nameLocation": "769:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2083,
										"nodeType": "StructuredDocumentation",
										"src": "785:429:9",
										"text": " @notice Sends an outgoing message from the source domain.\n @dev Increment nonce, format the message, and emit `MessageSent` event with message information.\n @param destinationDomain Domain of destination chain\n @param recipient Address of message recipient on destination domain as bytes32\n @param messageBody Raw bytes content of message\n @return nonce reserved by message"
									},
									"functionSelector": "0ba469bc",
									"id": 2094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendMessage",
									"nameLocation": "1229:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "destinationDomain",
												"nameLocation": "1258:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "1251:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2084,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1251:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1294:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "1286:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2086,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "messageBody",
												"nameLocation": "1329:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "1314:26:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2088,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1314:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:107:9"
									},
									"returnParameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "1366:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2091,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1366:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1365:8:9"
									},
									"scope": 2121,
									"src": "1220:154:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2095,
										"nodeType": "StructuredDocumentation",
										"src": "1382:901:9",
										"text": " @notice Sends an outgoing message from the source domain, with a specified caller on the\n destination domain.\n @dev Increment nonce, format the message, and emit `MessageSent` event with message information.\n WARNING: if the `destinationCaller` does not represent a valid address as bytes32, then it will not be possible\n to broadcast the message on the destination domain. This is an advanced feature, and the standard\n sendMessage() should be preferred for use cases where a specific destination caller is not required.\n @param destinationDomain Domain of destination chain\n @param recipient Address of message recipient on destination domain as bytes32\n @param destinationCaller caller on the destination domain, as bytes32\n @param messageBody Raw bytes content of message\n @return nonce reserved by message"
									},
									"functionSelector": "f7259a75",
									"id": 2108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendMessageWithCaller",
									"nameLocation": "2298:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "destinationDomain",
												"nameLocation": "2337:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "2330:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2096,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2330:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2373:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "2365:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2098,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2365:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "destinationCaller",
												"nameLocation": "2401:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "2393:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2100,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2393:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "messageBody",
												"nameLocation": "2444:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "2429:26:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2102,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2429:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2319:143:9"
									},
									"returnParameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "2481:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2105,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2481:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:8:9"
									},
									"scope": 2121,
									"src": "2289:200:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2109,
										"nodeType": "StructuredDocumentation",
										"src": "2497:443:9",
										"text": " @notice Replace a message with a new message body and/or destination caller.\n @dev The `originalAttestation` must be a valid attestation of `originalMessage`.\n @param originalMessage original message to replace\n @param originalAttestation attestation of `originalMessage`\n @param newMessageBody new message body of replaced message\n @param newDestinationCaller the new destination caller"
									},
									"functionSelector": "b857b774",
									"id": 2120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "replaceMessage",
									"nameLocation": "2955:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "originalMessage",
												"nameLocation": "2995:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "2980:30:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2110,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2980:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "originalAttestation",
												"nameLocation": "3036:19:9",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "3021:34:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3021:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "newMessageBody",
												"nameLocation": "3081:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "3066:29:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3066:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "newDestinationCaller",
												"nameLocation": "3114:20:9",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "3106:28:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3106:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2969:172:9"
									},
									"returnParameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3150:0:9"
									},
									"scope": 2121,
									"src": "2946:205:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2122,
							"src": "759:2395:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "634:2522:9"
				},
				"id": 9
			},
			"Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol": {
				"ast": {
					"absolutePath": "Nebula-bridge-contracts/src/interfaces/CCTPInterfaces/ITokenMessenger.sol",
					"exportedSymbols": {
						"ITokenMessenger": [
							2140
						]
					},
					"id": 2141,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2123,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITokenMessenger",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2140,
							"linearizedBaseContracts": [
								2140
							],
							"name": "ITokenMessenger",
							"nameLocation": "39:15:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2124,
										"nodeType": "StructuredDocumentation",
										"src": "61:1402:10",
										"text": " @notice Deposits and burns tokens from sender to be minted on destination domain. The mint\n on the destination domain must be called by `destinationCaller`.\n WARNING: if the `destinationCaller` does not represent a valid address as bytes32, then it will not be possible\n to broadcast the message on the destination domain. This is an advanced feature, and the standard\n depositForBurn() should be preferred for use cases where a specific destination caller is not required.\n Emits a `DepositForBurn` event.\n @dev reverts if:\n - given destinationCaller is zero address\n - given burnToken is not supported\n - given destinationDomain has no TokenMessenger registered\n - transferFrom() reverts. For example, if sender's burnToken balance or approved allowance\n to this contract is less than `amount`.\n - burn() reverts. For example, if `amount` is 0.\n - MessageTransmitter returns false or reverts.\n @param amount amount of tokens to burn\n @param destinationDomain destination domain\n @param mintRecipient address of mint recipient on destination domain\n @param burnToken address of contract to burn deposited tokens, on local domain\n @param destinationCaller caller on the destination domain, as bytes32\n @return nonce unique nonce reserved by message"
									},
									"functionSelector": "f856ddb6",
									"id": 2139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "depositForBurnWithCaller",
									"nameLocation": "1478:24:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1521:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "1513:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1513:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "destinationDomain",
												"nameLocation": "1545:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "1538:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2127,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1538:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "mintRecipient",
												"nameLocation": "1581:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "1573:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2129,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "burnToken",
												"nameLocation": "1613:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "1605:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1605:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "destinationCaller",
												"nameLocation": "1641:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "1633:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2133,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1633:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:163:10"
									},
									"returnParameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1691:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "1684:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2136,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1684:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:14:10"
									},
									"scope": 2140,
									"src": "1469:229:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2141,
							"src": "29:1672:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "2:1701:10"
				},
				"id": 10
			},
			"Nebula-bridge-contracts/src/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "Nebula-bridge-contracts/src/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							2218
						]
					},
					"id": 2219,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2142,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2143,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:11",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 2218,
							"linearizedBaseContracts": [
								2218
							],
							"name": "IERC20",
							"nameLocation": "220:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2144,
										"nodeType": "StructuredDocumentation",
										"src": "234:163:11",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2152,
									"name": "Transfer",
									"nameLocation": "409:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2146,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "434:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "418:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2148,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "456:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "440:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2150,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "468:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "460:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:57:11"
									},
									"src": "403:72:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2153,
										"nodeType": "StructuredDocumentation",
										"src": "483:151:11",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2161,
									"name": "Approval",
									"nameLocation": "646:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "671:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "655:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2157,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "694:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "678:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2159,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "711:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2161,
												"src": "703:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:63:11"
									},
									"src": "640:78:11"
								},
								{
									"documentation": {
										"id": 2162,
										"nodeType": "StructuredDocumentation",
										"src": "726:68:11",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "809:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:11"
									},
									"returnParameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2167,
												"src": "846:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:11"
									},
									"scope": 2218,
									"src": "800:55:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2168,
										"nodeType": "StructuredDocumentation",
										"src": "863:74:11",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "952:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "962:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:11"
									},
									"returnParameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "1002:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:9:11"
									},
									"scope": 2218,
									"src": "943:68:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2176,
										"nodeType": "StructuredDocumentation",
										"src": "1019:208:11",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1242:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1259:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "1251:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1271:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "1263:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:28:11"
									},
									"returnParameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "1297:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1297:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1296:6:11"
									},
									"scope": 2218,
									"src": "1233:70:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2186,
										"nodeType": "StructuredDocumentation",
										"src": "1311:270:11",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1596:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1614:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "1606:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1629:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "1621:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1605:32:11"
									},
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "1661:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1660:9:11"
									},
									"scope": 2218,
									"src": "1587:83:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2196,
										"nodeType": "StructuredDocumentation",
										"src": "1678:655:11",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2348:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2364:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "2356:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2381:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "2373:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:33:11"
									},
									"returnParameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2205,
												"src": "2407:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2202,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2407:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:6:11"
									},
									"scope": 2218,
									"src": "2339:74:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2206,
										"nodeType": "StructuredDocumentation",
										"src": "2421:295:11",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2731:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2752:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "2744:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2744:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2766:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "2758:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2758:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2778:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "2770:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:42:11"
									},
									"returnParameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2217,
												"src": "2804:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2804:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2803:6:11"
									},
									"scope": 2218,
									"src": "2722:88:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2219,
							"src": "210:2603:11",
							"usedErrors": [],
							"usedEvents": [
								2152,
								2161
							]
						}
					],
					"src": "109:2706:11"
				},
				"id": 11
			},
			"Nebula-bridge-contracts/src/interfaces/ITokenBridge.sol": {
				"ast": {
					"absolutePath": "Nebula-bridge-contracts/src/interfaces/ITokenBridge.sol",
					"exportedSymbols": {
						"IERC20": [
							2218
						],
						"ITokenBridge": [
							2618
						],
						"IWETH": [
							2632
						],
						"IWormhole": [
							2948
						]
					},
					"id": 2619,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2220,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "65:23:12"
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/IWETH.sol",
							"file": "./IWETH.sol",
							"id": 2221,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2619,
							"sourceUnit": 2633,
							"src": "92:21:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/IWormhole.sol",
							"file": "./IWormhole.sol",
							"id": 2222,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2619,
							"sourceUnit": 2949,
							"src": "115:25:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITokenBridge",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2618,
							"linearizedBaseContracts": [
								2618
							],
							"name": "ITokenBridge",
							"nameLocation": "154:12:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ITokenBridge.Transfer",
									"id": 2237,
									"members": [
										{
											"constant": false,
											"id": 2224,
											"mutability": "mutable",
											"name": "payloadID",
											"nameLocation": "207:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 2237,
											"src": "201:15:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2223,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "201:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2226,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "235:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2237,
											"src": "227:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2225,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "227:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2228,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "260:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 2237,
											"src": "252:20:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2227,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "252:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2230,
											"mutability": "mutable",
											"name": "tokenChain",
											"nameLocation": "290:10:12",
											"nodeType": "VariableDeclaration",
											"scope": 2237,
											"src": "283:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2229,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "283:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2232,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "319:2:12",
											"nodeType": "VariableDeclaration",
											"scope": 2237,
											"src": "311:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2231,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "311:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2234,
											"mutability": "mutable",
											"name": "toChain",
											"nameLocation": "339:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 2237,
											"src": "332:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2233,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "332:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2236,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "365:3:12",
											"nodeType": "VariableDeclaration",
											"scope": 2237,
											"src": "357:11:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2235,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "357:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Transfer",
									"nameLocation": "181:8:12",
									"nodeType": "StructDefinition",
									"scope": 2618,
									"src": "174:202:12",
									"visibility": "public"
								},
								{
									"canonicalName": "ITokenBridge.TransferWithPayload",
									"id": 2254,
									"members": [
										{
											"constant": false,
											"id": 2239,
											"mutability": "mutable",
											"name": "payloadID",
											"nameLocation": "428:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 2254,
											"src": "422:15:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2238,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "422:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2241,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "456:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2254,
											"src": "448:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2240,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "448:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2243,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "481:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 2254,
											"src": "473:20:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2242,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "473:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2245,
											"mutability": "mutable",
											"name": "tokenChain",
											"nameLocation": "511:10:12",
											"nodeType": "VariableDeclaration",
											"scope": 2254,
											"src": "504:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2244,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "504:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2247,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "540:2:12",
											"nodeType": "VariableDeclaration",
											"scope": 2254,
											"src": "532:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2246,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "532:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2249,
											"mutability": "mutable",
											"name": "toChain",
											"nameLocation": "560:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 2254,
											"src": "553:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2248,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "553:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2251,
											"mutability": "mutable",
											"name": "fromAddress",
											"nameLocation": "586:11:12",
											"nodeType": "VariableDeclaration",
											"scope": 2254,
											"src": "578:19:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2250,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "578:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2253,
											"mutability": "mutable",
											"name": "payload",
											"nameLocation": "614:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 2254,
											"src": "608:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2252,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "608:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TransferWithPayload",
									"nameLocation": "391:19:12",
									"nodeType": "StructDefinition",
									"scope": 2618,
									"src": "384:245:12",
									"visibility": "public"
								},
								{
									"canonicalName": "ITokenBridge.AssetMeta",
									"id": 2267,
									"members": [
										{
											"constant": false,
											"id": 2256,
											"mutability": "mutable",
											"name": "payloadID",
											"nameLocation": "671:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 2267,
											"src": "665:15:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2255,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "665:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2258,
											"mutability": "mutable",
											"name": "tokenAddress",
											"nameLocation": "699:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 2267,
											"src": "691:20:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2257,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "691:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2260,
											"mutability": "mutable",
											"name": "tokenChain",
											"nameLocation": "729:10:12",
											"nodeType": "VariableDeclaration",
											"scope": 2267,
											"src": "722:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2259,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "722:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2262,
											"mutability": "mutable",
											"name": "decimals",
											"nameLocation": "756:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 2267,
											"src": "750:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2261,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "750:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2264,
											"mutability": "mutable",
											"name": "symbol",
											"nameLocation": "783:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2267,
											"src": "775:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2263,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "775:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2266,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "808:4:12",
											"nodeType": "VariableDeclaration",
											"scope": 2267,
											"src": "800:12:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2265,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "800:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AssetMeta",
									"nameLocation": "644:9:12",
									"nodeType": "StructDefinition",
									"scope": 2618,
									"src": "637:183:12",
									"visibility": "public"
								},
								{
									"canonicalName": "ITokenBridge.RegisterChain",
									"id": 2278,
									"members": [
										{
											"constant": false,
											"id": 2269,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "868:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2278,
											"src": "860:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2268,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "860:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2271,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "891:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2278,
											"src": "885:12:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2270,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "885:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2273,
											"mutability": "mutable",
											"name": "chainId",
											"nameLocation": "915:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 2278,
											"src": "908:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2272,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "908:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2275,
											"mutability": "mutable",
											"name": "emitterChainID",
											"nameLocation": "940:14:12",
											"nodeType": "VariableDeclaration",
											"scope": 2278,
											"src": "933:21:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2274,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "933:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2277,
											"mutability": "mutable",
											"name": "emitterAddress",
											"nameLocation": "973:14:12",
											"nodeType": "VariableDeclaration",
											"scope": 2278,
											"src": "965:22:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2276,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "965:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RegisterChain",
									"nameLocation": "835:13:12",
									"nodeType": "StructDefinition",
									"scope": 2618,
									"src": "828:167:12",
									"visibility": "public"
								},
								{
									"canonicalName": "ITokenBridge.UpgradeContract",
									"id": 2287,
									"members": [
										{
											"constant": false,
											"id": 2280,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "1045:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2287,
											"src": "1037:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2279,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1037:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2282,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "1068:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2287,
											"src": "1062:12:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2281,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1062:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2284,
											"mutability": "mutable",
											"name": "chainId",
											"nameLocation": "1092:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 2287,
											"src": "1085:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2283,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1085:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2286,
											"mutability": "mutable",
											"name": "newContract",
											"nameLocation": "1118:11:12",
											"nodeType": "VariableDeclaration",
											"scope": 2287,
											"src": "1110:19:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2285,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1110:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UpgradeContract",
									"nameLocation": "1010:15:12",
									"nodeType": "StructDefinition",
									"scope": 2618,
									"src": "1003:134:12",
									"visibility": "public"
								},
								{
									"canonicalName": "ITokenBridge.RecoverChainId",
									"id": 2296,
									"members": [
										{
											"constant": false,
											"id": 2289,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "1186:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2296,
											"src": "1178:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2288,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1178:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2291,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "1209:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2296,
											"src": "1203:12:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2290,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1203:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2293,
											"mutability": "mutable",
											"name": "evmChainId",
											"nameLocation": "1234:10:12",
											"nodeType": "VariableDeclaration",
											"scope": 2296,
											"src": "1226:18:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2292,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1226:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2295,
											"mutability": "mutable",
											"name": "newChainId",
											"nameLocation": "1262:10:12",
											"nodeType": "VariableDeclaration",
											"scope": 2296,
											"src": "1255:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2294,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1255:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RecoverChainId",
									"nameLocation": "1152:14:12",
									"nodeType": "StructDefinition",
									"scope": 2618,
									"src": "1145:135:12",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a49",
									"id": 2302,
									"name": "ContractUpgraded",
									"nameLocation": "1294:16:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldContract",
												"nameLocation": "1327:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "1311:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2300,
												"indexed": true,
												"mutability": "mutable",
												"name": "newContract",
												"nameLocation": "1356:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "1340:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1310:58:12"
									},
									"src": "1288:81:12"
								},
								{
									"functionSelector": "e89bc401",
									"id": 2310,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_parseTransferCommon",
									"nameLocation": "1386:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "1420:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "1407:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2303,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1407:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:22:12"
									},
									"returnParameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "transfer",
												"nameLocation": "1468:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "1452:24:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Transfer_$2237_memory_ptr",
													"typeString": "struct ITokenBridge.Transfer"
												},
												"typeName": {
													"id": 2307,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2306,
														"name": "Transfer",
														"nameLocations": [
															"1452:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2237,
														"src": "1452:8:12"
													},
													"referencedDeclaration": 2237,
													"src": "1452:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Transfer_$2237_storage_ptr",
														"typeString": "struct ITokenBridge.Transfer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1451:26:12"
									},
									"scope": 2618,
									"src": "1377:101:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c48fa115",
									"id": 2319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "attestToken",
									"nameLocation": "1495:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "1515:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "1507:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1507:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1536:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "1529:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2313,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1529:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1506:36:12"
									},
									"returnParameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1576:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2319,
												"src": "1569:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2316,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1569:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1568:17:12"
									},
									"scope": 2618,
									"src": "1486:100:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9981509f",
									"id": 2332,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wrapAndTransferETH",
									"nameLocation": "1603:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2321,
												"mutability": "mutable",
												"name": "recipientChain",
												"nameLocation": "1629:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "1622:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2320,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1622:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1653:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "1645:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1645:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "arbiterFee",
												"nameLocation": "1672:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "1664:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1691:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "1684:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2326,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1684:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:76:12"
									},
									"returnParameters": {
										"id": 2331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1758:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "1751:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2329,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1751:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1750:17:12"
									},
									"scope": 2618,
									"src": "1594:174:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bee9cdfc",
									"id": 2345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wrapAndTransferETHWithPayload",
									"nameLocation": "1785:29:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "recipientChain",
												"nameLocation": "1822:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "1815:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2333,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1815:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1846:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "1838:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2335,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1864:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "1857:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2337,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1857:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "1884:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "1871:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1871:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1814:78:12"
									},
									"returnParameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1953:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2345,
												"src": "1946:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2342,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1946:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1945:17:12"
									},
									"scope": 2618,
									"src": "1776:187:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0f5287b0",
									"id": 2362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "1980:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2013:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "2005:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2037:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "2029:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "recipientChain",
												"nameLocation": "2061:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "2054:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2350,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2054:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2094:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "2086:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2352,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "arbiterFee",
												"nameLocation": "2122:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "2114:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "2150:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "2143:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2356,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2143:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1994:168:12"
									},
									"returnParameters": {
										"id": 2361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "2196:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "2189:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2359,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2189:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2188:17:12"
									},
									"scope": 2618,
									"src": "1971:235:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c5a5ebda",
									"id": 2379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokensWithPayload",
									"nameLocation": "2223:25:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2267:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "2259:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2259:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2291:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "2283:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "recipientChain",
												"nameLocation": "2315:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "2308:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2367,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2308:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2348:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "2340:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2369,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2340:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "2375:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "2368:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2371,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2368:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "2404:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "2391:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2373,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2391:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:170:12"
									},
									"returnParameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "2452:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "2445:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2376,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2445:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2444:17:12"
									},
									"scope": 2618,
									"src": "2214:248:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f768441f",
									"id": 2386,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateWrapped",
									"nameLocation": "2479:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2506:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "2493:22:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2380,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2493:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:24:12"
									},
									"returnParameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2543:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "2535:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2535:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2534:15:12"
									},
									"scope": 2618,
									"src": "2470:80:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8059810",
									"id": 2393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createWrapped",
									"nameLocation": "2567:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2388,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2594:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "2581:22:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2387,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2581:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2580:24:12"
									},
									"returnParameters": {
										"id": 2392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2631:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "2623:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2623:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2622:15:12"
									},
									"scope": 2618,
									"src": "2558:80:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c3f511c1",
									"id": 2400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "completeTransferWithPayload",
									"nameLocation": "2655:27:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2696:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "2683:22:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2683:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:24:12"
									},
									"returnParameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "2725:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2397,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2725:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:14:12"
									},
									"scope": 2618,
									"src": "2646:93:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1c8475e4",
									"id": 2407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "completeTransferAndUnwrapETHWithPayload",
									"nameLocation": "2756:39:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2809:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "2796:22:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2401,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2796:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:24:12"
									},
									"returnParameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "2838:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2404,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2838:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2837:14:12"
									},
									"scope": 2618,
									"src": "2747:105:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c6878519",
									"id": 2412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "completeTransfer",
									"nameLocation": "2869:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2899:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "2886:22:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2408,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2886:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2885:24:12"
									},
									"returnParameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2918:0:12"
									},
									"scope": 2618,
									"src": "2860:59:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ff200cde",
									"id": 2417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "completeTransferAndUnwrapETH",
									"nameLocation": "2936:28:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "encodedVm",
												"nameLocation": "2978:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "2965:22:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2413,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2965:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:24:12"
									},
									"returnParameters": {
										"id": 2416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2997:0:12"
									},
									"scope": 2618,
									"src": "2927:71:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b046223b",
									"id": 2425,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "encodeAssetMeta",
									"nameLocation": "3015:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "meta",
												"nameLocation": "3048:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2425,
												"src": "3031:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AssetMeta_$2267_memory_ptr",
													"typeString": "struct ITokenBridge.AssetMeta"
												},
												"typeName": {
													"id": 2419,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2418,
														"name": "AssetMeta",
														"nameLocations": [
															"3031:9:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2267,
														"src": "3031:9:12"
													},
													"referencedDeclaration": 2267,
													"src": "3031:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AssetMeta_$2267_storage_ptr",
														"typeString": "struct ITokenBridge.AssetMeta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3030:23:12"
									},
									"returnParameters": {
										"id": 2424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3090:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2425,
												"src": "3077:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2422,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3077:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3076:22:12"
									},
									"scope": 2618,
									"src": "3006:93:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5f854266",
									"id": 2433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "encodeTransfer",
									"nameLocation": "3116:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "transfer",
												"nameLocation": "3147:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "3131:24:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Transfer_$2237_memory_ptr",
													"typeString": "struct ITokenBridge.Transfer"
												},
												"typeName": {
													"id": 2427,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2426,
														"name": "Transfer",
														"nameLocations": [
															"3131:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2237,
														"src": "3131:8:12"
													},
													"referencedDeclaration": 2237,
													"src": "3131:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Transfer_$2237_storage_ptr",
														"typeString": "struct ITokenBridge.Transfer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3130:26:12"
									},
									"returnParameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2431,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3193:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2433,
												"src": "3180:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2430,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3180:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:22:12"
									},
									"scope": 2618,
									"src": "3107:95:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d56e2e24",
									"id": 2441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "encodeTransferWithPayload",
									"nameLocation": "3219:25:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "transfer",
												"nameLocation": "3272:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "3245:35:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TransferWithPayload_$2254_memory_ptr",
													"typeString": "struct ITokenBridge.TransferWithPayload"
												},
												"typeName": {
													"id": 2435,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2434,
														"name": "TransferWithPayload",
														"nameLocations": [
															"3245:19:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2254,
														"src": "3245:19:12"
													},
													"referencedDeclaration": 2254,
													"src": "3245:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TransferWithPayload_$2254_storage_ptr",
														"typeString": "struct ITokenBridge.TransferWithPayload"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3244:37:12"
									},
									"returnParameters": {
										"id": 2440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2439,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3345:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "3332:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2438,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3332:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3331:22:12"
									},
									"scope": 2618,
									"src": "3210:144:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0f509008",
									"id": 2448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parsePayloadID",
									"nameLocation": "3371:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3399:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "3386:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2442,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3386:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:22:12"
									},
									"returnParameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "payloadID",
												"nameLocation": "3437:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "3431:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2445,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3431:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3430:17:12"
									},
									"scope": 2618,
									"src": "3362:86:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "07dfd8fb",
									"id": 2456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseAssetMeta",
									"nameLocation": "3465:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2450,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3493:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "3480:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2449,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3480:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:22:12"
									},
									"returnParameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "meta",
												"nameLocation": "3542:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "3525:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AssetMeta_$2267_memory_ptr",
													"typeString": "struct ITokenBridge.AssetMeta"
												},
												"typeName": {
													"id": 2453,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2452,
														"name": "AssetMeta",
														"nameLocations": [
															"3525:9:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2267,
														"src": "3525:9:12"
													},
													"referencedDeclaration": 2267,
													"src": "3525:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AssetMeta_$2267_storage_ptr",
														"typeString": "struct ITokenBridge.AssetMeta"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3524:23:12"
									},
									"scope": 2618,
									"src": "3456:92:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2b511375",
									"id": 2464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseTransfer",
									"nameLocation": "3565:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3592:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "3579:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2457,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3579:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3578:22:12"
									},
									"returnParameters": {
										"id": 2463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2462,
												"mutability": "mutable",
												"name": "transfer",
												"nameLocation": "3640:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "3624:24:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Transfer_$2237_memory_ptr",
													"typeString": "struct ITokenBridge.Transfer"
												},
												"typeName": {
													"id": 2461,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2460,
														"name": "Transfer",
														"nameLocations": [
															"3624:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2237,
														"src": "3624:8:12"
													},
													"referencedDeclaration": 2237,
													"src": "3624:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Transfer_$2237_storage_ptr",
														"typeString": "struct ITokenBridge.Transfer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3623:26:12"
									},
									"scope": 2618,
									"src": "3556:94:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ea63738d",
									"id": 2472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseTransferWithPayload",
									"nameLocation": "3667:24:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "3705:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2472,
												"src": "3692:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3692:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3691:22:12"
									},
									"returnParameters": {
										"id": 2471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "transfer",
												"nameLocation": "3791:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2472,
												"src": "3764:35:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TransferWithPayload_$2254_memory_ptr",
													"typeString": "struct ITokenBridge.TransferWithPayload"
												},
												"typeName": {
													"id": 2469,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2468,
														"name": "TransferWithPayload",
														"nameLocations": [
															"3764:19:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2254,
														"src": "3764:19:12"
													},
													"referencedDeclaration": 2254,
													"src": "3764:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TransferWithPayload_$2254_storage_ptr",
														"typeString": "struct ITokenBridge.TransferWithPayload"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3763:37:12"
									},
									"scope": 2618,
									"src": "3658:143:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2c3c02a4",
									"id": 2479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceActionIsConsumed",
									"nameLocation": "3818:26:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2474,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3853:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2479,
												"src": "3845:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2473,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3845:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3844:14:12"
									},
									"returnParameters": {
										"id": 2478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2479,
												"src": "3882:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2476,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3882:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3881:6:12"
									},
									"scope": 2618,
									"src": "3809:79:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d60b347f",
									"id": 2486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isInitialized",
									"nameLocation": "3905:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "3927:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "3919:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:14:12"
									},
									"returnParameters": {
										"id": 2485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "3956:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2483,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3956:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3955:6:12"
									},
									"scope": 2618,
									"src": "3896:66:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "aa4efa5b",
									"id": 2493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isTransferCompleted",
									"nameLocation": "3979:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4007:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2493,
												"src": "3999:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2487,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3999:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:12"
									},
									"returnParameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2493,
												"src": "4036:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4036:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4035:6:12"
									},
									"scope": 2618,
									"src": "3970:72:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "84acd1bb",
									"id": 2499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wormhole",
									"nameLocation": "4059:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4067:2:12"
									},
									"returnParameters": {
										"id": 2498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2499,
												"src": "4093:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IWormhole_$2948",
													"typeString": "contract IWormhole"
												},
												"typeName": {
													"id": 2496,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2495,
														"name": "IWormhole",
														"nameLocations": [
															"4093:9:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2948,
														"src": "4093:9:12"
													},
													"referencedDeclaration": 2948,
													"src": "4093:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWormhole_$2948",
														"typeString": "contract IWormhole"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4092:11:12"
									},
									"scope": 2618,
									"src": "4050:54:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a8a0592",
									"id": 2504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "chainId",
									"nameLocation": "4121:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4128:2:12"
									},
									"returnParameters": {
										"id": 2503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "4154:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2501,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4154:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4153:8:12"
									},
									"scope": 2618,
									"src": "4112:50:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "64d42b17",
									"id": 2509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "evmChainId",
									"nameLocation": "4179:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4189:2:12"
									},
									"returnParameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "4215:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4215:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4214:9:12"
									},
									"scope": 2618,
									"src": "4170:54:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e039f224",
									"id": 2514,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isFork",
									"nameLocation": "4241:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4247:2:12"
									},
									"returnParameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "4273:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2511,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4273:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4272:6:12"
									},
									"scope": 2618,
									"src": "4232:47:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fbe3c2cd",
									"id": 2519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceChainId",
									"nameLocation": "4296:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4313:2:12"
									},
									"returnParameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "4339:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2516,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4339:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4338:8:12"
									},
									"scope": 2618,
									"src": "4287:60:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b172b222",
									"id": 2524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceContract",
									"nameLocation": "4364:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4382:2:12"
									},
									"returnParameters": {
										"id": 2523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2524,
												"src": "4408:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2521,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4408:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4407:9:12"
									},
									"scope": 2618,
									"src": "4355:62:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1ff1e286",
									"id": 2533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wrappedAsset",
									"nameLocation": "4434:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2526,
												"mutability": "mutable",
												"name": "tokenChainId",
												"nameLocation": "4454:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "4447:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2525,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4447:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "4476:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "4468:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2527,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4468:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4446:43:12"
									},
									"returnParameters": {
										"id": 2532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "4513:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4513:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4512:9:12"
									},
									"scope": 2618,
									"src": "4425:97:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad66a5f1",
									"id": 2540,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bridgeContracts",
									"nameLocation": "4539:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "chainId_",
												"nameLocation": "4562:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "4555:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2534,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4555:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4554:17:12"
									},
									"returnParameters": {
										"id": 2539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "4595:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2537,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4595:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4594:9:12"
									},
									"scope": 2618,
									"src": "4530:74:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2f3a3d5d",
									"id": 2545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenImplementation",
									"nameLocation": "4621:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4640:2:12"
									},
									"returnParameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2545,
												"src": "4666:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4665:9:12"
									},
									"scope": 2618,
									"src": "4612:63:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 2551,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "4692:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4696:2:12"
									},
									"returnParameters": {
										"id": 2550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2551,
												"src": "4722:5:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IWETH_$2632",
													"typeString": "contract IWETH"
												},
												"typeName": {
													"id": 2548,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2547,
														"name": "IWETH",
														"nameLocations": [
															"4722:5:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2632,
														"src": "4722:5:12"
													},
													"referencedDeclaration": 2632,
													"src": "4722:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWETH_$2632",
														"typeString": "contract IWETH"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4721:7:12"
									},
									"scope": 2618,
									"src": "4683:46:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b96c7e4d",
									"id": 2558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "outstandingBridged",
									"nameLocation": "4746:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2553,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4773:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "4765:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4765:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4764:15:12"
									},
									"returnParameters": {
										"id": 2557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2558,
												"src": "4803:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4803:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:9:12"
									},
									"scope": 2618,
									"src": "4737:75:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1a2be4da",
									"id": 2565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isWrappedAsset",
									"nameLocation": "4829:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2560,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4852:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "4844:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:15:12"
									},
									"returnParameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "4882:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2562,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4882:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4881:6:12"
									},
									"scope": 2618,
									"src": "4820:68:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "739fc8d1",
									"id": 2570,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "finality",
									"nameLocation": "4905:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4913:2:12"
									},
									"returnParameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2570,
												"src": "4939:5:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2567,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4939:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4938:7:12"
									},
									"scope": 2618,
									"src": "4896:50:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c60da1b",
									"id": 2575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "4963:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4977:2:12"
									},
									"returnParameters": {
										"id": 2574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "5003:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5003:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5002:9:12"
									},
									"scope": 2618,
									"src": "4954:58:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8129fc1c",
									"id": 2578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "5029:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5039:2:12"
									},
									"returnParameters": {
										"id": 2577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5050:0:12"
									},
									"scope": 2618,
									"src": "5020:31:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a5799f93",
									"id": 2583,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerChain",
									"nameLocation": "5068:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "encodedVM",
												"nameLocation": "5095:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "5082:22:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2579,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5082:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5081:24:12"
									},
									"returnParameters": {
										"id": 2582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5114:0:12"
									},
									"scope": 2618,
									"src": "5059:56:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "25394645",
									"id": 2588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "upgrade",
									"nameLocation": "5132:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "encodedVM",
												"nameLocation": "5153:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2588,
												"src": "5140:22:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5140:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5139:24:12"
									},
									"returnParameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5172:0:12"
									},
									"scope": 2618,
									"src": "5123:50:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "178149e7",
									"id": 2593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitRecoverChainId",
									"nameLocation": "5190:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "encodedVM",
												"nameLocation": "5224:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2593,
												"src": "5211:22:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5211:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:24:12"
									},
									"returnParameters": {
										"id": 2592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5243:0:12"
									},
									"scope": 2618,
									"src": "5181:63:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "01f53255",
									"id": 2601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseRegisterChain",
									"nameLocation": "5261:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2595,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "5293:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "5280:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5280:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5279:22:12"
									},
									"returnParameters": {
										"id": 2600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2599,
												"mutability": "mutable",
												"name": "chain",
												"nameLocation": "5346:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "5325:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RegisterChain_$2278_memory_ptr",
													"typeString": "struct ITokenBridge.RegisterChain"
												},
												"typeName": {
													"id": 2598,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2597,
														"name": "RegisterChain",
														"nameLocations": [
															"5325:13:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2278,
														"src": "5325:13:12"
													},
													"referencedDeclaration": 2278,
													"src": "5325:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RegisterChain_$2278_storage_ptr",
														"typeString": "struct ITokenBridge.RegisterChain"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:28:12"
									},
									"scope": 2618,
									"src": "5252:101:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fbeeacd9",
									"id": 2609,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseUpgrade",
									"nameLocation": "5370:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "encoded",
												"nameLocation": "5396:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2609,
												"src": "5383:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2602,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5383:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5382:22:12"
									},
									"returnParameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "chain",
												"nameLocation": "5451:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2609,
												"src": "5428:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UpgradeContract_$2287_memory_ptr",
													"typeString": "struct ITokenBridge.UpgradeContract"
												},
												"typeName": {
													"id": 2606,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2605,
														"name": "UpgradeContract",
														"nameLocations": [
															"5428:15:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2287,
														"src": "5428:15:12"
													},
													"referencedDeclaration": 2287,
													"src": "5428:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UpgradeContract_$2287_storage_ptr",
														"typeString": "struct ITokenBridge.UpgradeContract"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5427:30:12"
									},
									"scope": 2618,
									"src": "5361:97:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cb4cfea8",
									"id": 2617,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseRecoverChainId",
									"nameLocation": "5475:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "encodedRecoverChainId",
												"nameLocation": "5508:21:12",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "5495:34:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2610,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:36:12"
									},
									"returnParameters": {
										"id": 2616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "rci",
												"nameLocation": "5603:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2617,
												"src": "5581:25:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RecoverChainId_$2296_memory_ptr",
													"typeString": "struct ITokenBridge.RecoverChainId"
												},
												"typeName": {
													"id": 2614,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2613,
														"name": "RecoverChainId",
														"nameLocations": [
															"5581:14:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2296,
														"src": "5581:14:12"
													},
													"referencedDeclaration": 2296,
													"src": "5581:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RecoverChainId_$2296_storage_ptr",
														"typeString": "struct ITokenBridge.RecoverChainId"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5580:27:12"
									},
									"scope": 2618,
									"src": "5466:142:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2619,
							"src": "144:5467:12",
							"usedErrors": [],
							"usedEvents": [
								2302
							]
						}
					],
					"src": "65:5548:12"
				},
				"id": 12
			},
			"Nebula-bridge-contracts/src/interfaces/IWETH.sol": {
				"ast": {
					"absolutePath": "Nebula-bridge-contracts/src/interfaces/IWETH.sol",
					"exportedSymbols": {
						"IERC20": [
							2218
						],
						"IWETH": [
							2632
						]
					},
					"id": 2633,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2620,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "65:23:13"
						},
						{
							"absolutePath": "Nebula-bridge-contracts/src/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2621,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2633,
							"sourceUnit": 2219,
							"src": "92:22:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2622,
										"name": "IERC20",
										"nameLocations": [
											"137:6:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2218,
										"src": "137:6:13"
									},
									"id": 2623,
									"nodeType": "InheritanceSpecifier",
									"src": "137:6:13"
								}
							],
							"canonicalName": "IWETH",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2632,
							"linearizedBaseContracts": [
								2632,
								2218
							],
							"name": "IWETH",
							"nameLocation": "128:5:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 2626,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "160:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:13"
									},
									"returnParameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:0:13"
									},
									"scope": 2632,
									"src": "151:36:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 2631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "202:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2628,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "219:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2631,
												"src": "211:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "210:16:13"
									},
									"returnParameters": {
										"id": 2630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "235:0:13"
									},
									"scope": 2632,
									"src": "193:43:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2633,
							"src": "118:121:13",
							"usedErrors": [],
							"usedEvents": [
								2152,
								2161
							]
						}
					],
					"src": "65:176:13"
				},
				"id": 13
			},
			"Nebula-bridge-contracts/src/interfaces/IWormhole.sol": {
				"ast": {
					"absolutePath": "Nebula-bridge-contracts/src/interfaces/IWormhole.sol",
					"exportedSymbols": {
						"IWormhole": [
							2948
						]
					},
					"id": 2949,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2634,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "67:23:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWormhole",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2948,
							"linearizedBaseContracts": [
								2948
							],
							"name": "IWormhole",
							"nameLocation": "104:9:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IWormhole.GuardianSet",
									"id": 2640,
									"members": [
										{
											"constant": false,
											"id": 2637,
											"mutability": "mutable",
											"name": "keys",
											"nameLocation": "161:4:14",
											"nodeType": "VariableDeclaration",
											"scope": 2640,
											"src": "151:14:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 2635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "151:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2636,
												"nodeType": "ArrayTypeName",
												"src": "151:9:14",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2639,
											"mutability": "mutable",
											"name": "expirationTime",
											"nameLocation": "183:14:14",
											"nodeType": "VariableDeclaration",
											"scope": 2640,
											"src": "176:21:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2638,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "176:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "GuardianSet",
									"nameLocation": "128:11:14",
									"nodeType": "StructDefinition",
									"scope": 2948,
									"src": "121:84:14",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.Signature",
									"id": 2649,
									"members": [
										{
											"constant": false,
											"id": 2642,
											"mutability": "mutable",
											"name": "r",
											"nameLocation": "249:1:14",
											"nodeType": "VariableDeclaration",
											"scope": 2649,
											"src": "241:9:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2641,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "241:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2644,
											"mutability": "mutable",
											"name": "s",
											"nameLocation": "269:1:14",
											"nodeType": "VariableDeclaration",
											"scope": 2649,
											"src": "261:9:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2643,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "261:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2646,
											"mutability": "mutable",
											"name": "v",
											"nameLocation": "287:1:14",
											"nodeType": "VariableDeclaration",
											"scope": 2649,
											"src": "281:7:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2645,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "281:5:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2648,
											"mutability": "mutable",
											"name": "guardianIndex",
											"nameLocation": "305:13:14",
											"nodeType": "VariableDeclaration",
											"scope": 2649,
											"src": "299:19:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2647,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "299:5:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Signature",
									"nameLocation": "220:9:14",
									"nodeType": "StructDefinition",
									"scope": 2948,
									"src": "213:113:14",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.VM",
									"id": 2674,
									"members": [
										{
											"constant": false,
											"id": 2651,
											"mutability": "mutable",
											"name": "version",
											"nameLocation": "361:7:14",
											"nodeType": "VariableDeclaration",
											"scope": 2674,
											"src": "355:13:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2650,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "355:5:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2653,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "386:9:14",
											"nodeType": "VariableDeclaration",
											"scope": 2674,
											"src": "379:16:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2652,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "379:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2655,
											"mutability": "mutable",
											"name": "nonce",
											"nameLocation": "413:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2674,
											"src": "406:12:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2654,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "406:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2657,
											"mutability": "mutable",
											"name": "emitterChainId",
											"nameLocation": "436:14:14",
											"nodeType": "VariableDeclaration",
											"scope": 2674,
											"src": "429:21:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2656,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "429:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2659,
											"mutability": "mutable",
											"name": "emitterAddress",
											"nameLocation": "469:14:14",
											"nodeType": "VariableDeclaration",
											"scope": 2674,
											"src": "461:22:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2658,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "461:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2661,
											"mutability": "mutable",
											"name": "sequence",
											"nameLocation": "501:8:14",
											"nodeType": "VariableDeclaration",
											"scope": 2674,
											"src": "494:15:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2660,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "494:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2663,
											"mutability": "mutable",
											"name": "consistencyLevel",
											"nameLocation": "526:16:14",
											"nodeType": "VariableDeclaration",
											"scope": 2674,
											"src": "520:22:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2662,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "520:5:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2665,
											"mutability": "mutable",
											"name": "payload",
											"nameLocation": "559:7:14",
											"nodeType": "VariableDeclaration",
											"scope": 2674,
											"src": "553:13:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2664,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "553:5:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2667,
											"mutability": "mutable",
											"name": "guardianSetIndex",
											"nameLocation": "584:16:14",
											"nodeType": "VariableDeclaration",
											"scope": 2674,
											"src": "577:23:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2666,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "577:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2671,
											"mutability": "mutable",
											"name": "signatures",
											"nameLocation": "623:10:14",
											"nodeType": "VariableDeclaration",
											"scope": 2674,
											"src": "611:22:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Signature_$2649_storage_$dyn_storage_ptr",
												"typeString": "struct IWormhole.Signature[]"
											},
											"typeName": {
												"baseType": {
													"id": 2669,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2668,
														"name": "Signature",
														"nameLocations": [
															"611:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2649,
														"src": "611:9:14"
													},
													"referencedDeclaration": 2649,
													"src": "611:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Signature_$2649_storage_ptr",
														"typeString": "struct IWormhole.Signature"
													}
												},
												"id": 2670,
												"nodeType": "ArrayTypeName",
												"src": "611:11:14",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Signature_$2649_storage_$dyn_storage_ptr",
													"typeString": "struct IWormhole.Signature[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2673,
											"mutability": "mutable",
											"name": "hash",
											"nameLocation": "652:4:14",
											"nodeType": "VariableDeclaration",
											"scope": 2674,
											"src": "644:12:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2672,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "644:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VM",
									"nameLocation": "341:2:14",
									"nodeType": "StructDefinition",
									"scope": 2948,
									"src": "334:330:14",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.ContractUpgrade",
									"id": 2683,
									"members": [
										{
											"constant": false,
											"id": 2676,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "714:6:14",
											"nodeType": "VariableDeclaration",
											"scope": 2683,
											"src": "706:14:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2675,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "706:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2678,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "737:6:14",
											"nodeType": "VariableDeclaration",
											"scope": 2683,
											"src": "731:12:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2677,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "731:5:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2680,
											"mutability": "mutable",
											"name": "chain",
											"nameLocation": "761:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2683,
											"src": "754:12:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2679,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "754:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2682,
											"mutability": "mutable",
											"name": "newContract",
											"nameLocation": "785:11:14",
											"nodeType": "VariableDeclaration",
											"scope": 2683,
											"src": "777:19:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2681,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "777:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ContractUpgrade",
									"nameLocation": "679:15:14",
									"nodeType": "StructDefinition",
									"scope": 2948,
									"src": "672:132:14",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.GuardianSetUpgrade",
									"id": 2695,
									"members": [
										{
											"constant": false,
											"id": 2685,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "857:6:14",
											"nodeType": "VariableDeclaration",
											"scope": 2695,
											"src": "849:14:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2684,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "849:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2687,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "880:6:14",
											"nodeType": "VariableDeclaration",
											"scope": 2695,
											"src": "874:12:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2686,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "874:5:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2689,
											"mutability": "mutable",
											"name": "chain",
											"nameLocation": "904:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2695,
											"src": "897:12:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2688,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "897:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2692,
											"mutability": "mutable",
											"name": "newGuardianSet",
											"nameLocation": "932:14:14",
											"nodeType": "VariableDeclaration",
											"scope": 2695,
											"src": "920:26:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_GuardianSet_$2640_storage_ptr",
												"typeString": "struct IWormhole.GuardianSet"
											},
											"typeName": {
												"id": 2691,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2690,
													"name": "GuardianSet",
													"nameLocations": [
														"920:11:14"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2640,
													"src": "920:11:14"
												},
												"referencedDeclaration": 2640,
												"src": "920:11:14",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_GuardianSet_$2640_storage_ptr",
													"typeString": "struct IWormhole.GuardianSet"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2694,
											"mutability": "mutable",
											"name": "newGuardianSetIndex",
											"nameLocation": "964:19:14",
											"nodeType": "VariableDeclaration",
											"scope": 2695,
											"src": "957:26:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2693,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "957:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "GuardianSetUpgrade",
									"nameLocation": "819:18:14",
									"nodeType": "StructDefinition",
									"scope": 2948,
									"src": "812:179:14",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.SetMessageFee",
									"id": 2704,
									"members": [
										{
											"constant": false,
											"id": 2697,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "1039:6:14",
											"nodeType": "VariableDeclaration",
											"scope": 2704,
											"src": "1031:14:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2696,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1031:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2699,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "1062:6:14",
											"nodeType": "VariableDeclaration",
											"scope": 2704,
											"src": "1056:12:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2698,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1056:5:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2701,
											"mutability": "mutable",
											"name": "chain",
											"nameLocation": "1086:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2704,
											"src": "1079:12:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2700,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1079:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2703,
											"mutability": "mutable",
											"name": "messageFee",
											"nameLocation": "1110:10:14",
											"nodeType": "VariableDeclaration",
											"scope": 2704,
											"src": "1102:18:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2702,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1102:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SetMessageFee",
									"nameLocation": "1006:13:14",
									"nodeType": "StructDefinition",
									"scope": 2948,
									"src": "999:129:14",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.TransferFees",
									"id": 2715,
									"members": [
										{
											"constant": false,
											"id": 2706,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "1175:6:14",
											"nodeType": "VariableDeclaration",
											"scope": 2715,
											"src": "1167:14:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2705,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1167:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2708,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "1198:6:14",
											"nodeType": "VariableDeclaration",
											"scope": 2715,
											"src": "1192:12:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2707,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1192:5:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2710,
											"mutability": "mutable",
											"name": "chain",
											"nameLocation": "1222:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2715,
											"src": "1215:12:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2709,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1215:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2712,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1246:6:14",
											"nodeType": "VariableDeclaration",
											"scope": 2715,
											"src": "1238:14:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2711,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1238:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2714,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1271:9:14",
											"nodeType": "VariableDeclaration",
											"scope": 2715,
											"src": "1263:17:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2713,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1263:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TransferFees",
									"nameLocation": "1143:12:14",
									"nodeType": "StructDefinition",
									"scope": 2948,
									"src": "1136:152:14",
									"visibility": "public"
								},
								{
									"canonicalName": "IWormhole.RecoverChainId",
									"id": 2724,
									"members": [
										{
											"constant": false,
											"id": 2717,
											"mutability": "mutable",
											"name": "module",
											"nameLocation": "1337:6:14",
											"nodeType": "VariableDeclaration",
											"scope": 2724,
											"src": "1329:14:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2716,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1329:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2719,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "1360:6:14",
											"nodeType": "VariableDeclaration",
											"scope": 2724,
											"src": "1354:12:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2718,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1354:5:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2721,
											"mutability": "mutable",
											"name": "evmChainId",
											"nameLocation": "1385:10:14",
											"nodeType": "VariableDeclaration",
											"scope": 2724,
											"src": "1377:18:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2720,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1377:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2723,
											"mutability": "mutable",
											"name": "newChainId",
											"nameLocation": "1413:10:14",
											"nodeType": "VariableDeclaration",
											"scope": 2724,
											"src": "1406:17:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2722,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1406:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RecoverChainId",
									"nameLocation": "1303:14:14",
									"nodeType": "StructDefinition",
									"scope": 2948,
									"src": "1296:135:14",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b2",
									"id": 2736,
									"name": "LogMessagePublished",
									"nameLocation": "1445:19:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2726,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1491:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "1475:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2728,
												"indexed": false,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1506:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "1499:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2727,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1499:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2730,
												"indexed": false,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1523:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "1516:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2729,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1516:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2732,
												"indexed": false,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "1536:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "1530:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2731,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1530:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2734,
												"indexed": false,
												"mutability": "mutable",
												"name": "consistencyLevel",
												"nameLocation": "1551:16:14",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "1545:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2733,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1545:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1464:110:14"
									},
									"src": "1439:136:14"
								},
								{
									"anonymous": false,
									"eventSelector": "2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a49",
									"id": 2742,
									"name": "ContractUpgraded",
									"nameLocation": "1587:16:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2738,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldContract",
												"nameLocation": "1620:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "1604:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2740,
												"indexed": true,
												"mutability": "mutable",
												"name": "newContract",
												"nameLocation": "1649:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "1633:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1633:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1603:58:14"
									},
									"src": "1581:81:14"
								},
								{
									"anonymous": false,
									"eventSelector": "2384dbc52f7b617fb7c5aa71e5455a21ff21d58604bb6daef6af2bb44aadebdd",
									"id": 2746,
									"name": "GuardianSetAdded",
									"nameLocation": "1674:16:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2744,
												"indexed": true,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1706:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2746,
												"src": "1691:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2743,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1691:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1690:22:14"
									},
									"src": "1668:45:14"
								},
								{
									"functionSelector": "b19a437e",
									"id": 2757,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "publishMessage",
									"nameLocation": "1730:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2748,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1752:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2757,
												"src": "1745:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2747,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1745:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2750,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "1772:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2757,
												"src": "1759:20:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2749,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1759:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "consistencyLevel",
												"nameLocation": "1787:16:14",
												"nodeType": "VariableDeclaration",
												"scope": 2757,
												"src": "1781:22:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1781:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:60:14"
									},
									"returnParameters": {
										"id": 2756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2755,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1865:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2757,
												"src": "1858:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2754,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1858:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1857:17:14"
									},
									"scope": 2948,
									"src": "1721:154:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8129fc1c",
									"id": 2760,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "1892:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1902:2:14"
									},
									"returnParameters": {
										"id": 2759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1913:0:14"
									},
									"scope": 2948,
									"src": "1883:31:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c0fd8bde",
									"id": 2772,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseAndVerifyVM",
									"nameLocation": "1931:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2762,
												"mutability": "mutable",
												"name": "encodedVM",
												"nameLocation": "1963:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "1948:24:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2761,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1948:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1947:26:14"
									},
									"returnParameters": {
										"id": 2771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2766,
												"mutability": "mutable",
												"name": "vm",
												"nameLocation": "2034:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "2024:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VM_$2674_memory_ptr",
													"typeString": "struct IWormhole.VM"
												},
												"typeName": {
													"id": 2765,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2764,
														"name": "VM",
														"nameLocations": [
															"2024:2:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2674,
														"src": "2024:2:14"
													},
													"referencedDeclaration": 2674,
													"src": "2024:2:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VM_$2674_storage_ptr",
														"typeString": "struct IWormhole.VM"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "valid",
												"nameLocation": "2043:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "2038:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2767,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2038:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2770,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "2064:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2772,
												"src": "2050:20:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2769,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2050:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2023:48:14"
									},
									"scope": 2948,
									"src": "1922:150:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "875be02a",
									"id": 2782,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "verifyVM",
									"nameLocation": "2089:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "vm",
												"nameLocation": "2108:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "2098:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VM_$2674_memory_ptr",
													"typeString": "struct IWormhole.VM"
												},
												"typeName": {
													"id": 2774,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2773,
														"name": "VM",
														"nameLocations": [
															"2098:2:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2674,
														"src": "2098:2:14"
													},
													"referencedDeclaration": 2674,
													"src": "2098:2:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VM_$2674_storage_ptr",
														"typeString": "struct IWormhole.VM"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2097:14:14"
									},
									"returnParameters": {
										"id": 2781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2778,
												"mutability": "mutable",
												"name": "valid",
												"nameLocation": "2140:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "2135:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2777,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2135:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2780,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "2161:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "2147:20:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2779,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2147:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2134:34:14"
									},
									"scope": 2948,
									"src": "2080:89:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a0cce1b3",
									"id": 2798,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "verifySignatures",
									"nameLocation": "2186:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2784,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2211:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "2203:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2783,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2203:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2788,
												"mutability": "mutable",
												"name": "signatures",
												"nameLocation": "2236:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "2217:29:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Signature_$2649_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IWormhole.Signature[]"
												},
												"typeName": {
													"baseType": {
														"id": 2786,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2785,
															"name": "Signature",
															"nameLocations": [
																"2217:9:14"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2649,
															"src": "2217:9:14"
														},
														"referencedDeclaration": 2649,
														"src": "2217:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Signature_$2649_storage_ptr",
															"typeString": "struct IWormhole.Signature"
														}
													},
													"id": 2787,
													"nodeType": "ArrayTypeName",
													"src": "2217:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Signature_$2649_storage_$dyn_storage_ptr",
														"typeString": "struct IWormhole.Signature[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2791,
												"mutability": "mutable",
												"name": "guardianSet",
												"nameLocation": "2267:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "2248:30:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_GuardianSet_$2640_memory_ptr",
													"typeString": "struct IWormhole.GuardianSet"
												},
												"typeName": {
													"id": 2790,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2789,
														"name": "GuardianSet",
														"nameLocations": [
															"2248:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2640,
														"src": "2248:11:14"
													},
													"referencedDeclaration": 2640,
													"src": "2248:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_GuardianSet_$2640_storage_ptr",
														"typeString": "struct IWormhole.GuardianSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2202:77:14"
									},
									"returnParameters": {
										"id": 2797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2794,
												"mutability": "mutable",
												"name": "valid",
												"nameLocation": "2335:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "2330:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2793,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2330:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2796,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "2356:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2798,
												"src": "2342:20:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2795,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2342:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2329:34:14"
									},
									"scope": 2948,
									"src": "2177:187:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9e11893",
									"id": 2806,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseVM",
									"nameLocation": "2381:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2800,
												"mutability": "mutable",
												"name": "encodedVM",
												"nameLocation": "2402:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2806,
												"src": "2389:22:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2799,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2389:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2388:24:14"
									},
									"returnParameters": {
										"id": 2805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "vm",
												"nameLocation": "2446:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 2806,
												"src": "2436:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VM_$2674_memory_ptr",
													"typeString": "struct IWormhole.VM"
												},
												"typeName": {
													"id": 2803,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2802,
														"name": "VM",
														"nameLocations": [
															"2436:2:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2674,
														"src": "2436:2:14"
													},
													"referencedDeclaration": 2674,
													"src": "2436:2:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VM_$2674_storage_ptr",
														"typeString": "struct IWormhole.VM"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2435:14:14"
									},
									"scope": 2948,
									"src": "2372:78:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f8ce560a",
									"id": 2813,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quorum",
									"nameLocation": "2467:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2808,
												"mutability": "mutable",
												"name": "numGuardians",
												"nameLocation": "2482:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "2474:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2474:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2473:22:14"
									},
									"returnParameters": {
										"id": 2812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2811,
												"mutability": "mutable",
												"name": "numSignaturesRequiredForQuorum",
												"nameLocation": "2527:30:14",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "2519:38:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2519:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2518:40:14"
									},
									"scope": 2948,
									"src": "2458:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f951975a",
									"id": 2821,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getGuardianSet",
									"nameLocation": "2576:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2598:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "2591:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2814,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2591:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2590:14:14"
									},
									"returnParameters": {
										"id": 2820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "2628:18:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_GuardianSet_$2640_memory_ptr",
													"typeString": "struct IWormhole.GuardianSet"
												},
												"typeName": {
													"id": 2818,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2817,
														"name": "GuardianSet",
														"nameLocations": [
															"2628:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2640,
														"src": "2628:11:14"
													},
													"referencedDeclaration": 2640,
													"src": "2628:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_GuardianSet_$2640_storage_ptr",
														"typeString": "struct IWormhole.GuardianSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2627:20:14"
									},
									"scope": 2948,
									"src": "2567:81:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1cfe7951",
									"id": 2826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentGuardianSetIndex",
									"nameLocation": "2665:26:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2691:2:14"
									},
									"returnParameters": {
										"id": 2825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2826,
												"src": "2717:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2823,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2717:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2716:8:14"
									},
									"scope": 2948,
									"src": "2656:69:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "eb8d3f12",
									"id": 2831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getGuardianSetExpiry",
									"nameLocation": "2742:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2762:2:14"
									},
									"returnParameters": {
										"id": 2830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2831,
												"src": "2788:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2828,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2788:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2787:8:14"
									},
									"scope": 2948,
									"src": "2733:63:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2c3c02a4",
									"id": 2838,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceActionIsConsumed",
									"nameLocation": "2813:26:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2833,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2848:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "2840:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2832,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2840:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2839:14:14"
									},
									"returnParameters": {
										"id": 2837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "2877:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2835,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2877:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:6:14"
									},
									"scope": 2948,
									"src": "2804:79:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d60b347f",
									"id": 2845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isInitialized",
									"nameLocation": "2900:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2840,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "2922:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "2914:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2914:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2913:14:14"
									},
									"returnParameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "2951:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2842,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2951:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2950:6:14"
									},
									"scope": 2948,
									"src": "2891:66:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a8a0592",
									"id": 2850,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "chainId",
									"nameLocation": "2974:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2981:2:14"
									},
									"returnParameters": {
										"id": 2849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2850,
												"src": "3007:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2847,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3007:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3006:8:14"
									},
									"scope": 2948,
									"src": "2965:50:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e039f224",
									"id": 2855,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isFork",
									"nameLocation": "3032:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3038:2:14"
									},
									"returnParameters": {
										"id": 2854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "3064:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2852,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3064:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3063:6:14"
									},
									"scope": 2948,
									"src": "3023:47:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fbe3c2cd",
									"id": 2860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceChainId",
									"nameLocation": "3087:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3104:2:14"
									},
									"returnParameters": {
										"id": 2859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2860,
												"src": "3130:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2857,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3130:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3129:8:14"
									},
									"scope": 2948,
									"src": "3078:60:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b172b222",
									"id": 2865,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceContract",
									"nameLocation": "3155:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3173:2:14"
									},
									"returnParameters": {
										"id": 2864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2865,
												"src": "3199:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2862,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3199:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3198:9:14"
									},
									"scope": 2948,
									"src": "3146:62:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1a90a219",
									"id": 2870,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "messageFee",
									"nameLocation": "3225:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3235:2:14"
									},
									"returnParameters": {
										"id": 2869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2870,
												"src": "3261:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3261:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3260:9:14"
									},
									"scope": 2948,
									"src": "3216:54:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "64d42b17",
									"id": 2875,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "evmChainId",
									"nameLocation": "3287:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3297:2:14"
									},
									"returnParameters": {
										"id": 2874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "3323:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:9:14"
									},
									"scope": 2948,
									"src": "3278:54:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4cf842b5",
									"id": 2882,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nextSequence",
									"nameLocation": "3349:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "emitter",
												"nameLocation": "3370:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "3362:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3362:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3361:17:14"
									},
									"returnParameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2882,
												"src": "3402:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2879,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3402:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3401:8:14"
									},
									"scope": 2948,
									"src": "3340:70:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4fdc60fa",
									"id": 2890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseContractUpgrade",
									"nameLocation": "3427:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2884,
												"mutability": "mutable",
												"name": "encodedUpgrade",
												"nameLocation": "3461:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "3448:27:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2883,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3448:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3447:29:14"
									},
									"returnParameters": {
										"id": 2889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "cu",
												"nameLocation": "3523:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "3500:25:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ContractUpgrade_$2683_memory_ptr",
													"typeString": "struct IWormhole.ContractUpgrade"
												},
												"typeName": {
													"id": 2887,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2886,
														"name": "ContractUpgrade",
														"nameLocations": [
															"3500:15:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2683,
														"src": "3500:15:14"
													},
													"referencedDeclaration": 2683,
													"src": "3500:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ContractUpgrade_$2683_storage_ptr",
														"typeString": "struct IWormhole.ContractUpgrade"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3499:27:14"
									},
									"scope": 2948,
									"src": "3418:109:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "04ca84cf",
									"id": 2898,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseGuardianSetUpgrade",
									"nameLocation": "3544:23:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2892,
												"mutability": "mutable",
												"name": "encodedUpgrade",
												"nameLocation": "3581:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 2898,
												"src": "3568:27:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2891,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3568:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3567:29:14"
									},
									"returnParameters": {
										"id": 2897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2896,
												"mutability": "mutable",
												"name": "gsu",
												"nameLocation": "3673:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 2898,
												"src": "3647:29:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_GuardianSetUpgrade_$2695_memory_ptr",
													"typeString": "struct IWormhole.GuardianSetUpgrade"
												},
												"typeName": {
													"id": 2895,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2894,
														"name": "GuardianSetUpgrade",
														"nameLocations": [
															"3647:18:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2695,
														"src": "3647:18:14"
													},
													"referencedDeclaration": 2695,
													"src": "3647:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_GuardianSetUpgrade_$2695_storage_ptr",
														"typeString": "struct IWormhole.GuardianSetUpgrade"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:31:14"
									},
									"scope": 2948,
									"src": "3535:143:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "515f3247",
									"id": 2906,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseSetMessageFee",
									"nameLocation": "3695:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2900,
												"mutability": "mutable",
												"name": "encodedSetMessageFee",
												"nameLocation": "3727:20:14",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "3714:33:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2899,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3714:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3713:35:14"
									},
									"returnParameters": {
										"id": 2905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2904,
												"mutability": "mutable",
												"name": "smf",
												"nameLocation": "3793:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 2906,
												"src": "3772:24:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SetMessageFee_$2704_memory_ptr",
													"typeString": "struct IWormhole.SetMessageFee"
												},
												"typeName": {
													"id": 2903,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2902,
														"name": "SetMessageFee",
														"nameLocations": [
															"3772:13:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2704,
														"src": "3772:13:14"
													},
													"referencedDeclaration": 2704,
													"src": "3772:13:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SetMessageFee_$2704_storage_ptr",
														"typeString": "struct IWormhole.SetMessageFee"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3771:26:14"
									},
									"scope": 2948,
									"src": "3686:112:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0319e59c",
									"id": 2914,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseTransferFees",
									"nameLocation": "3815:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2908,
												"mutability": "mutable",
												"name": "encodedTransferFees",
												"nameLocation": "3846:19:14",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "3833:32:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2907,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3833:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3832:34:14"
									},
									"returnParameters": {
										"id": 2913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2912,
												"mutability": "mutable",
												"name": "tf",
												"nameLocation": "3910:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "3890:22:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TransferFees_$2715_memory_ptr",
													"typeString": "struct IWormhole.TransferFees"
												},
												"typeName": {
													"id": 2911,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2910,
														"name": "TransferFees",
														"nameLocations": [
															"3890:12:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2715,
														"src": "3890:12:14"
													},
													"referencedDeclaration": 2715,
													"src": "3890:12:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TransferFees_$2715_storage_ptr",
														"typeString": "struct IWormhole.TransferFees"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3889:24:14"
									},
									"scope": 2948,
									"src": "3806:108:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cb4cfea8",
									"id": 2922,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "parseRecoverChainId",
									"nameLocation": "3931:19:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2916,
												"mutability": "mutable",
												"name": "encodedRecoverChainId",
												"nameLocation": "3964:21:14",
												"nodeType": "VariableDeclaration",
												"scope": 2922,
												"src": "3951:34:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2915,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3951:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3950:36:14"
									},
									"returnParameters": {
										"id": 2921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2920,
												"mutability": "mutable",
												"name": "rci",
												"nameLocation": "4059:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 2922,
												"src": "4037:25:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RecoverChainId_$2724_memory_ptr",
													"typeString": "struct IWormhole.RecoverChainId"
												},
												"typeName": {
													"id": 2919,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2918,
														"name": "RecoverChainId",
														"nameLocations": [
															"4037:14:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2724,
														"src": "4037:14:14"
													},
													"referencedDeclaration": 2724,
													"src": "4037:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RecoverChainId_$2724_storage_ptr",
														"typeString": "struct IWormhole.RecoverChainId"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4036:27:14"
									},
									"scope": 2948,
									"src": "3922:142:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5cb8cae2",
									"id": 2927,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitContractUpgrade",
									"nameLocation": "4081:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "_vm",
												"nameLocation": "4116:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 2927,
												"src": "4103:16:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2923,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4103:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4102:18:14"
									},
									"returnParameters": {
										"id": 2926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:14"
									},
									"scope": 2948,
									"src": "4072:58:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f42bc641",
									"id": 2932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitSetMessageFee",
									"nameLocation": "4147:19:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2929,
												"mutability": "mutable",
												"name": "_vm",
												"nameLocation": "4180:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 2932,
												"src": "4167:16:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2928,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4167:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4166:18:14"
									},
									"returnParameters": {
										"id": 2931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4193:0:14"
									},
									"scope": 2948,
									"src": "4138:56:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6606b4e0",
									"id": 2937,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitNewGuardianSet",
									"nameLocation": "4211:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2934,
												"mutability": "mutable",
												"name": "_vm",
												"nameLocation": "4245:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 2937,
												"src": "4232:16:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2933,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4232:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4231:18:14"
									},
									"returnParameters": {
										"id": 2936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4258:0:14"
									},
									"scope": 2948,
									"src": "4202:57:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "93df337e",
									"id": 2942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitTransferFees",
									"nameLocation": "4276:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2939,
												"mutability": "mutable",
												"name": "_vm",
												"nameLocation": "4308:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 2942,
												"src": "4295:16:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2938,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4295:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4294:18:14"
									},
									"returnParameters": {
										"id": 2941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4321:0:14"
									},
									"scope": 2948,
									"src": "4267:55:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "178149e7",
									"id": 2947,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitRecoverChainId",
									"nameLocation": "4339:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2944,
												"mutability": "mutable",
												"name": "_vm",
												"nameLocation": "4373:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 2947,
												"src": "4360:16:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2943,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4360:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4359:18:14"
									},
									"returnParameters": {
										"id": 2946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4386:0:14"
									},
									"scope": 2948,
									"src": "4330:57:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2949,
							"src": "94:4296:14",
							"usedErrors": [],
							"usedEvents": [
								2736,
								2742,
								2746
							]
						}
					],
					"src": "67:4325:14"
				},
				"id": 14
			},
			"Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol": {
				"ast": {
					"absolutePath": "Nebula-bridge-contracts/src/interfaces/IWormholeReceiver.sol",
					"exportedSymbols": {
						"IWormholeReceiver": [
							2967
						]
					},
					"id": 2968,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2950,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWormholeReceiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2951,
								"nodeType": "StructuredDocumentation",
								"src": "67:82:15",
								"text": " @notice Interface for a contract which can receive Wormhole messages."
							},
							"fullyImplemented": false,
							"id": 2967,
							"linearizedBaseContracts": [
								2967
							],
							"name": "IWormholeReceiver",
							"nameLocation": "161:17:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2952,
										"nodeType": "StructuredDocumentation",
										"src": "186:2164:15",
										"text": " @notice When a `send` is performed with this contract as the target, this function will be\n     invoked by the WormholeRelayer contract\n NOTE: This function should be restricted such that only the Wormhole Relayer contract can call it.\n We also recommend that this function checks that `sourceChain` and `sourceAddress` are indeed who\n       you expect to have requested the calling of `send` on the source chain\n The invocation of this function corresponding to the `send` request will have msg.value equal\n   to the receiverValue specified in the send request.\n If the invocation of this function reverts or exceeds the gas limit\n   specified by the send requester, this delivery will result in a `ReceiverFailure`.\n @param payload - an arbitrary message which was included in the delivery by the\n     requester. This message's signature will already have been verified (as long as msg.sender is the Wormhole Relayer contract)\n @param additionalMessages - Additional messages which were requested to be included in this delivery.\n      Note: There are no contract-level guarantees that the messages in this array are what was requested\n      so **you should verify any sensitive information given here!**\n      For example, if a 'VaaKey' was specified on the source chain, then MAKE SURE the corresponding message here\n      has valid signatures (by calling `parseAndVerifyVM(message)` on the Wormhole core contract)\n      This field can be used to perform and relay TokenBridge or CCTP transfers, and there are example\n      usages of this at\n         https://github.com/wormhole-foundation/hello-token\n         https://github.com/wormhole-foundation/hello-cctp\n @param sourceAddress - the (wormhole format) address on the sending chain which requested\n     this delivery.\n @param sourceChain - the wormhole chain ID where this delivery was requested.\n @param deliveryHash - the VAA hash of the deliveryVAA."
									},
									"functionSelector": "529dca32",
									"id": 2966,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "receiveWormholeMessages",
									"nameLocation": "2365:23:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2954,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "2412:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "2399:20:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2953,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2399:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2957,
												"mutability": "mutable",
												"name": "additionalMessages",
												"nameLocation": "2445:18:15",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "2430:33:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 2955,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "2430:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 2956,
													"nodeType": "ArrayTypeName",
													"src": "2430:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2959,
												"mutability": "mutable",
												"name": "sourceAddress",
												"nameLocation": "2482:13:15",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "2474:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2958,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2474:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2961,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "2513:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "2506:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2960,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2506:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2963,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "2543:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "2535:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2962,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2535:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2388:174:15"
									},
									"returnParameters": {
										"id": 2965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2579:0:15"
									},
									"scope": 2967,
									"src": "2356:224:15",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2968,
							"src": "151:2432:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "40:2545:15"
				},
				"id": 15
			},
			"Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol": {
				"ast": {
					"absolutePath": "Nebula-bridge-contracts/src/interfaces/IWormholeRelayer.sol",
					"exportedSymbols": {
						"DeliveryProviderCannotReceivePayment": [
							3401
						],
						"DeliveryProviderDoesNotSupportMessageKeyType": [
							3405
						],
						"DeliveryProviderDoesNotSupportTargetChain": [
							3399
						],
						"IWormholeRelayer": [
							3382
						],
						"IWormholeRelayerBase": [
							3025
						],
						"IWormholeRelayerDelivery": [
							3377
						],
						"IWormholeRelayerSend": [
							3327
						],
						"InsufficientRelayerFunds": [
							3471
						],
						"InvalidDeliveryVaa": [
							3435
						],
						"InvalidEmitter": [
							3443
						],
						"InvalidMsgValue": [
							3391
						],
						"InvalidOverrideGasLimit": [
							3461
						],
						"InvalidOverrideReceiverValue": [
							3463
						],
						"InvalidOverrideRefundPerGasUnused": [
							3465
						],
						"InvalidPayloadId": [
							3417
						],
						"InvalidPayloadLength": [
							3423
						],
						"InvalidVaaKeyType": [
							3427
						],
						"MessageKey": [
							2985
						],
						"MessageKeysLengthDoesNotMatchMessagesLength": [
							3449
						],
						"NotAnEvmAddress": [
							3475
						],
						"RETURNDATA_TRUNCATION_THRESHOLD": [
							3385
						],
						"ReentrantDelivery": [
							3411
						],
						"RequestedGasLimitTooLow": [
							3393
						],
						"RequesterNotWormholeRelayer": [
							3455
						],
						"TargetChainIsNotThisChain": [
							3459
						],
						"TooManyMessageKeys": [
							3431
						],
						"VAA_KEY_TYPE": [
							2980
						],
						"VaaKey": [
							2977
						],
						"VaaKeysDoNotMatchVaas": [
							3453
						]
					},
					"id": 3476,
					"license": "Apache 2",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2969,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40:23:16"
						},
						{
							"canonicalName": "VaaKey",
							"documentation": {
								"id": 2970,
								"nodeType": "StructuredDocumentation",
								"src": "479:302:16",
								"text": " @notice VaaKey identifies a wormhole message\n @custom:member chainId Wormhole chain ID of the chain where this VAA was emitted from\n @custom:member emitterAddress Address of the emitter of the VAA, in Wormhole bytes32 format\n @custom:member sequence Sequence number of the VAA"
							},
							"id": 2977,
							"members": [
								{
									"constant": false,
									"id": 2972,
									"mutability": "mutable",
									"name": "chainId",
									"nameLocation": "811:7:16",
									"nodeType": "VariableDeclaration",
									"scope": 2977,
									"src": "804:14:16",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 2971,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "804:6:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2974,
									"mutability": "mutable",
									"name": "emitterAddress",
									"nameLocation": "833:14:16",
									"nodeType": "VariableDeclaration",
									"scope": 2977,
									"src": "825:22:16",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2973,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "825:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2976,
									"mutability": "mutable",
									"name": "sequence",
									"nameLocation": "861:8:16",
									"nodeType": "VariableDeclaration",
									"scope": 2977,
									"src": "854:15:16",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2975,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "854:6:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "VaaKey",
							"nameLocation": "790:6:16",
							"nodeType": "StructDefinition",
							"scope": 3476,
							"src": "783:90:16",
							"visibility": "public"
						},
						{
							"constant": true,
							"id": 2980,
							"mutability": "constant",
							"name": "VAA_KEY_TYPE",
							"nameLocation": "969:12:16",
							"nodeType": "VariableDeclaration",
							"scope": 3476,
							"src": "954:31:16",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint8",
								"typeString": "uint8"
							},
							"typeName": {
								"id": 2978,
								"name": "uint8",
								"nodeType": "ElementaryTypeName",
								"src": "954:5:16",
								"typeDescriptions": {
									"typeIdentifier": "t_uint8",
									"typeString": "uint8"
								}
							},
							"value": {
								"hexValue": "31",
								"id": 2979,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "984:1:16",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_1_by_1",
									"typeString": "int_const 1"
								},
								"value": "1"
							},
							"visibility": "internal"
						},
						{
							"canonicalName": "MessageKey",
							"id": 2985,
							"members": [
								{
									"constant": false,
									"id": 2982,
									"mutability": "mutable",
									"name": "keyType",
									"nameLocation": "1021:7:16",
									"nodeType": "VariableDeclaration",
									"scope": 2985,
									"src": "1015:13:16",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2981,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1015:5:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2984,
									"mutability": "mutable",
									"name": "encodedKey",
									"nameLocation": "1117:10:16",
									"nodeType": "VariableDeclaration",
									"scope": 2985,
									"src": "1111:16:16",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 2983,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1111:5:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "MessageKey",
							"nameLocation": "997:10:16",
							"nodeType": "StructDefinition",
							"scope": 3476,
							"src": "990:141:16",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWormholeRelayerBase",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3025,
							"linearizedBaseContracts": [
								3025
							],
							"name": "IWormholeRelayerBase",
							"nameLocation": "1145:20:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "da8540426b64ece7b164a9dce95448765f0a7263ef3ff85091c9c7361e485364",
									"id": 2993,
									"name": "SendEvent",
									"nameLocation": "1179:9:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2987,
												"indexed": true,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "1214:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "1199:23:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2986,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1199:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2989,
												"indexed": false,
												"mutability": "mutable",
												"name": "deliveryQuote",
												"nameLocation": "1241:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "1233:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2991,
												"indexed": false,
												"mutability": "mutable",
												"name": "paymentForExtraReceiverValue",
												"nameLocation": "1273:28:16",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "1265:36:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1188:120:16"
									},
									"src": "1173:136:16"
								},
								{
									"functionSelector": "3e8267e7",
									"id": 3000,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRegisteredWormholeRelayerContract",
									"nameLocation": "1326:36:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2995,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "1380:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3000,
												"src": "1373:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2994,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1373:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1362:32:16"
									},
									"returnParameters": {
										"id": 2999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3000,
												"src": "1418:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2997,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1417:9:16"
									},
									"scope": 3025,
									"src": "1317:110:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3001,
										"nodeType": "StructuredDocumentation",
										"src": "1435:184:16",
										"text": " @notice Returns true if a delivery has been attempted for the given deliveryHash\n Note: invalid deliveries where the tx reverts are not considered attempted"
									},
									"functionSelector": "d0625a19",
									"id": 3008,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deliveryAttempted",
									"nameLocation": "1634:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3003,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "1670:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 3008,
												"src": "1662:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3002,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1662:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1651:38:16"
									},
									"returnParameters": {
										"id": 3007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3006,
												"mutability": "mutable",
												"name": "attempted",
												"nameLocation": "1718:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 3008,
												"src": "1713:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3005,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1713:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1712:16:16"
									},
									"scope": 3025,
									"src": "1625:104:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3009,
										"nodeType": "StructuredDocumentation",
										"src": "1737:87:16",
										"text": " @notice block number at which a delivery was successfully executed"
									},
									"functionSelector": "40984f08",
									"id": 3016,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deliverySuccessBlock",
									"nameLocation": "1839:20:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3011,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "1878:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 3016,
												"src": "1870:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3010,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:38:16"
									},
									"returnParameters": {
										"id": 3015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3014,
												"mutability": "mutable",
												"name": "blockNumber",
												"nameLocation": "1929:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3016,
												"src": "1921:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1921:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1920:21:16"
									},
									"scope": 3025,
									"src": "1830:112:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3017,
										"nodeType": "StructuredDocumentation",
										"src": "1950:97:16",
										"text": " @notice block number of the latest attempt to execute a delivery that failed"
									},
									"functionSelector": "5a3b92e8",
									"id": 3024,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deliveryFailureBlock",
									"nameLocation": "2062:20:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3019,
												"mutability": "mutable",
												"name": "deliveryHash",
												"nameLocation": "2101:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 3024,
												"src": "2093:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3018,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2093:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2082:38:16"
									},
									"returnParameters": {
										"id": 3023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3022,
												"mutability": "mutable",
												"name": "blockNumber",
												"nameLocation": "2152:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3024,
												"src": "2144:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2144:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:21:16"
									},
									"scope": 3025,
									"src": "2053:112:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3476,
							"src": "1135:1033:16",
							"usedErrors": [],
							"usedEvents": [
								2993
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3027,
										"name": "IWormholeRelayerBase",
										"nameLocations": [
											"2296:20:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3025,
										"src": "2296:20:16"
									},
									"id": 3028,
									"nodeType": "InheritanceSpecifier",
									"src": "2296:20:16"
								}
							],
							"canonicalName": "IWormholeRelayerSend",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3026,
								"nodeType": "StructuredDocumentation",
								"src": "2172:88:16",
								"text": " @title IWormholeRelayerSend\n @notice The interface to request deliveries"
							},
							"fullyImplemented": false,
							"id": 3327,
							"linearizedBaseContracts": [
								3327,
								3025
							],
							"name": "IWormholeRelayerSend",
							"nameLocation": "2272:20:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3029,
										"nodeType": "StructuredDocumentation",
										"src": "2324:1219:16",
										"text": " @notice Publishes an instruction for the default delivery provider\n to relay a payload to the address `targetAddress` on chain `targetChain`\n with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\n Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendPayloadToEvm` function\n with `refundChain` and `refundAddress` as parameters\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param gasLimit gas limit with which to call `targetAddress`.\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "8fecdd02",
									"id": 3044,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendPayloadToEvm",
									"nameLocation": "3558:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3031,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "3592:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "3585:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3030,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "3585:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3033,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "3622:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "3614:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3614:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3035,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "3659:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "3646:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3034,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3646:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3037,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "3685:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "3677:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3677:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3039,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "3717:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "3709:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3709:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3574:158:16"
									},
									"returnParameters": {
										"id": 3043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3042,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "3766:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "3759:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3041,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3759:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3758:17:16"
									},
									"scope": 3327,
									"src": "3549:227:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3045,
										"nodeType": "StructuredDocumentation",
										"src": "3784:1413:16",
										"text": " @notice Publishes an instruction for the default delivery provider\n to relay a payload to the address `targetAddress` on chain `targetChain`\n with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\n Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\n        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\n @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n @param refundAddress The address on `refundChain` to deliver any refund to\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "4b5ca6f4",
									"id": 3064,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendPayloadToEvm",
									"nameLocation": "5212:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3047,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "5246:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "5239:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3046,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5239:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3049,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "5276:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "5268:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5268:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3051,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "5313:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "5300:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3050,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5300:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3053,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "5339:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "5331:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3055,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "5371:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "5363:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5363:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3057,
												"mutability": "mutable",
												"name": "refundChain",
												"nameLocation": "5397:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "5390:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3056,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5390:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3059,
												"mutability": "mutable",
												"name": "refundAddress",
												"nameLocation": "5427:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "5419:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5228:219:16"
									},
									"returnParameters": {
										"id": 3063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3062,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "5481:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3064,
												"src": "5474:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3061,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5474:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5473:17:16"
									},
									"scope": 3327,
									"src": "5203:288:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3065,
										"nodeType": "StructuredDocumentation",
										"src": "5499:1338:16",
										"text": " @notice Publishes an instruction for the default delivery provider\n to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\n with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\n Any refunds (from leftover gas) will be paid to the delivery provider. In order to receive the refunds, use the `sendVaasToEvm` function\n with `refundChain` and `refundAddress` as parameters\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param gasLimit gas limit with which to call `targetAddress`.\n @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "329a2be7",
									"id": 3084,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendVaasToEvm",
									"nameLocation": "6852:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3067,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "6883:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "6876:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3066,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6876:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3069,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "6913:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "6905:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6905:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3071,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "6950:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "6937:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3070,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6937:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3073,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "6976:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "6968:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3075,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "7008:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "7000:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7000:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3079,
												"mutability": "mutable",
												"name": "vaaKeys",
												"nameLocation": "7043:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "7027:23:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct VaaKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 3077,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3076,
															"name": "VaaKey",
															"nameLocations": [
																"7027:6:16"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2977,
															"src": "7027:6:16"
														},
														"referencedDeclaration": 2977,
														"src": "7027:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$2977_storage_ptr",
															"typeString": "struct VaaKey"
														}
													},
													"id": 3078,
													"nodeType": "ArrayTypeName",
													"src": "7027:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_storage_$dyn_storage_ptr",
														"typeString": "struct VaaKey[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6865:192:16"
									},
									"returnParameters": {
										"id": 3083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3082,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "7091:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "7084:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3081,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "7084:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7083:17:16"
									},
									"scope": 3327,
									"src": "6843:258:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3085,
										"nodeType": "StructuredDocumentation",
										"src": "7109:1535:16",
										"text": " @notice Publishes an instruction for the default delivery provider\n to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\n with gas limit `gasLimit` and `msg.value` equal to `receiverValue`\n Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to `quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit)`\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\n        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\n @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\n @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n @param refundAddress The address on `refundChain` to deliver any refund to\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "32b2fc0e",
									"id": 3108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendVaasToEvm",
									"nameLocation": "8659:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3087,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "8690:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "8683:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3086,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8683:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3089,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "8720:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "8712:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8712:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3091,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "8757:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "8744:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8744:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3093,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "8783:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "8775:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8775:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3095,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "8815:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "8807:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8807:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3099,
												"mutability": "mutable",
												"name": "vaaKeys",
												"nameLocation": "8850:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "8834:23:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct VaaKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 3097,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3096,
															"name": "VaaKey",
															"nameLocations": [
																"8834:6:16"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2977,
															"src": "8834:6:16"
														},
														"referencedDeclaration": 2977,
														"src": "8834:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$2977_storage_ptr",
															"typeString": "struct VaaKey"
														}
													},
													"id": 3098,
													"nodeType": "ArrayTypeName",
													"src": "8834:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_storage_$dyn_storage_ptr",
														"typeString": "struct VaaKey[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3101,
												"mutability": "mutable",
												"name": "refundChain",
												"nameLocation": "8875:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "8868:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3100,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "8868:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3103,
												"mutability": "mutable",
												"name": "refundAddress",
												"nameLocation": "8905:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "8897:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8897:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8672:253:16"
									},
									"returnParameters": {
										"id": 3107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3106,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "8959:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "8952:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3105,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8952:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8951:17:16"
									},
									"scope": 3327,
									"src": "8650:319:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3109,
										"nodeType": "StructuredDocumentation",
										"src": "8977:2256:16",
										"text": " @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\n to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\n with gas limit `gasLimit` and `msg.value` equal to\n receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\n Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to\n quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\n        (in addition to the `receiverValue` specified)\n @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\n        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\n @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n @param refundAddress The address on `refundChain` to deliver any refund to\n @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\n @param consistencyLevel Consistency level with which to publish the delivery instructions - see\n        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "3a2c767d",
									"id": 3138,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendToEvm",
									"nameLocation": "11248:9:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3111,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "11275:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "11268:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3110,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "11268:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3113,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "11305:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "11297:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11297:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3115,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "11342:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "11329:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11329:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3117,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "11368:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "11360:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11360:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3119,
												"mutability": "mutable",
												"name": "paymentForExtraReceiverValue",
												"nameLocation": "11400:28:16",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "11392:36:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11392:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3121,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "11447:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "11439:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11439:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3123,
												"mutability": "mutable",
												"name": "refundChain",
												"nameLocation": "11473:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "11466:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3122,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "11466:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3125,
												"mutability": "mutable",
												"name": "refundAddress",
												"nameLocation": "11503:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "11495:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11495:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3127,
												"mutability": "mutable",
												"name": "deliveryProviderAddress",
												"nameLocation": "11535:23:16",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "11527:31:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11527:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3131,
												"mutability": "mutable",
												"name": "vaaKeys",
												"nameLocation": "11585:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "11569:23:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct VaaKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 3129,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3128,
															"name": "VaaKey",
															"nameLocations": [
																"11569:6:16"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2977,
															"src": "11569:6:16"
														},
														"referencedDeclaration": 2977,
														"src": "11569:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$2977_storage_ptr",
															"typeString": "struct VaaKey"
														}
													},
													"id": 3130,
													"nodeType": "ArrayTypeName",
													"src": "11569:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_storage_$dyn_storage_ptr",
														"typeString": "struct VaaKey[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3133,
												"mutability": "mutable",
												"name": "consistencyLevel",
												"nameLocation": "11609:16:16",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "11603:22:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3132,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11603:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11257:375:16"
									},
									"returnParameters": {
										"id": 3137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3136,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "11666:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3138,
												"src": "11659:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3135,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "11659:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11658:17:16"
									},
									"scope": 3327,
									"src": "11239:437:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3139,
										"nodeType": "StructuredDocumentation",
										"src": "11684:2540:16",
										"text": " @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\n to relay a payload and external messages specified by `messageKeys` to the address `targetAddress` on chain `targetChain`\n with gas limit `gasLimit` and `msg.value` equal to\n receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\n Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to\n quoteEVMDeliveryPrice(targetChain, receiverValue, gasLimit, deliveryProviderAddress) + paymentForExtraReceiverValue\n Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected\n DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver)\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\n        (in addition to the `receiverValue` specified)\n @param gasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\n        `targetChainRefundPerGasUnused` rate quoted by the delivery provider\n @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n @param refundAddress The address on `refundChain` to deliver any refund to\n @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @param messageKeys Additional messagess to pass in as parameter in call to `targetAddress`\n @param consistencyLevel Consistency level with which to publish the delivery instructions - see\n        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "c055120e",
									"id": 3168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sendToEvm",
									"nameLocation": "14239:9:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3141,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "14266:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3168,
												"src": "14259:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3140,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "14259:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3143,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "14296:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3168,
												"src": "14288:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14288:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3145,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "14333:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3168,
												"src": "14320:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3144,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14320:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3147,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "14359:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3168,
												"src": "14351:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14351:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3149,
												"mutability": "mutable",
												"name": "paymentForExtraReceiverValue",
												"nameLocation": "14391:28:16",
												"nodeType": "VariableDeclaration",
												"scope": 3168,
												"src": "14383:36:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14383:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3151,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "14438:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3168,
												"src": "14430:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14430:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3153,
												"mutability": "mutable",
												"name": "refundChain",
												"nameLocation": "14464:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3168,
												"src": "14457:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3152,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "14457:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3155,
												"mutability": "mutable",
												"name": "refundAddress",
												"nameLocation": "14494:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3168,
												"src": "14486:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14486:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3157,
												"mutability": "mutable",
												"name": "deliveryProviderAddress",
												"nameLocation": "14526:23:16",
												"nodeType": "VariableDeclaration",
												"scope": 3168,
												"src": "14518:31:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14518:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3161,
												"mutability": "mutable",
												"name": "messageKeys",
												"nameLocation": "14580:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3168,
												"src": "14560:31:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_MessageKey_$2985_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct MessageKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 3159,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3158,
															"name": "MessageKey",
															"nameLocations": [
																"14560:10:16"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2985,
															"src": "14560:10:16"
														},
														"referencedDeclaration": 2985,
														"src": "14560:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MessageKey_$2985_storage_ptr",
															"typeString": "struct MessageKey"
														}
													},
													"id": 3160,
													"nodeType": "ArrayTypeName",
													"src": "14560:12:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MessageKey_$2985_storage_$dyn_storage_ptr",
														"typeString": "struct MessageKey[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3163,
												"mutability": "mutable",
												"name": "consistencyLevel",
												"nameLocation": "14608:16:16",
												"nodeType": "VariableDeclaration",
												"scope": 3168,
												"src": "14602:22:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3162,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "14602:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14248:383:16"
									},
									"returnParameters": {
										"id": 3167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3166,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "14665:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3168,
												"src": "14658:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3165,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "14658:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14657:17:16"
									},
									"scope": 3327,
									"src": "14230:445:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3169,
										"nodeType": "StructuredDocumentation",
										"src": "14683:2323:16",
										"text": " @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\n to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\n with `msg.value` equal to\n receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\n Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to\n quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\n        (in addition to the `receiverValue` specified)\n @param encodedExecutionParameters encoded information on how to execute delivery that may impact pricing\n        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\n @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n @param refundAddress The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\n @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @param vaaKeys Additional VAAs to pass in as parameter in call to `targetAddress`\n @param consistencyLevel Consistency level with which to publish the delivery instructions - see\n        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "c81fb7fe",
									"id": 3198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nameLocation": "17021:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3171,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "17043:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3198,
												"src": "17036:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3170,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "17036:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3173,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "17073:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3198,
												"src": "17065:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3172,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17065:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3175,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "17110:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3198,
												"src": "17097:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17097:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3177,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "17136:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3198,
												"src": "17128:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17128:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3179,
												"mutability": "mutable",
												"name": "paymentForExtraReceiverValue",
												"nameLocation": "17168:28:16",
												"nodeType": "VariableDeclaration",
												"scope": 3198,
												"src": "17160:36:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17160:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3181,
												"mutability": "mutable",
												"name": "encodedExecutionParameters",
												"nameLocation": "17220:26:16",
												"nodeType": "VariableDeclaration",
												"scope": 3198,
												"src": "17207:39:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3180,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17207:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3183,
												"mutability": "mutable",
												"name": "refundChain",
												"nameLocation": "17264:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3198,
												"src": "17257:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3182,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "17257:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3185,
												"mutability": "mutable",
												"name": "refundAddress",
												"nameLocation": "17294:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3198,
												"src": "17286:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3184,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17286:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3187,
												"mutability": "mutable",
												"name": "deliveryProviderAddress",
												"nameLocation": "17326:23:16",
												"nodeType": "VariableDeclaration",
												"scope": 3198,
												"src": "17318:31:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17318:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3191,
												"mutability": "mutable",
												"name": "vaaKeys",
												"nameLocation": "17376:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3198,
												"src": "17360:23:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct VaaKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 3189,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3188,
															"name": "VaaKey",
															"nameLocations": [
																"17360:6:16"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2977,
															"src": "17360:6:16"
														},
														"referencedDeclaration": 2977,
														"src": "17360:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaaKey_$2977_storage_ptr",
															"typeString": "struct VaaKey"
														}
													},
													"id": 3190,
													"nodeType": "ArrayTypeName",
													"src": "17360:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_VaaKey_$2977_storage_$dyn_storage_ptr",
														"typeString": "struct VaaKey[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3193,
												"mutability": "mutable",
												"name": "consistencyLevel",
												"nameLocation": "17400:16:16",
												"nodeType": "VariableDeclaration",
												"scope": 3198,
												"src": "17394:22:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3192,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "17394:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17025:398:16"
									},
									"returnParameters": {
										"id": 3197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3196,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "17457:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3198,
												"src": "17450:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3195,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "17450:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17449:17:16"
									},
									"scope": 3327,
									"src": "17012:455:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3199,
										"nodeType": "StructuredDocumentation",
										"src": "17475:2590:16",
										"text": " @notice Publishes an instruction for the delivery provider at `deliveryProviderAddress`\n to relay a payload and VAAs specified by `vaaKeys` to the address `targetAddress` on chain `targetChain`\n with `msg.value` equal to\n receiverValue + (arbitrary amount that is paid for by paymentForExtraReceiverValue of this chain's wei) in targetChain wei.\n Any refunds (from leftover gas) will be sent to `refundAddress` on chain `refundChain`\n `targetAddress` must implement the IWormholeReceiver interface\n This function must be called with `msg.value` equal to\n quoteDeliveryPrice(targetChain, receiverValue, encodedExecutionParameters, deliveryProviderAddress) + paymentForExtraReceiverValue\n Note: MessageKeys can specify wormhole messages (VaaKeys) or other types of messages (ex. USDC CCTP attestations). Ensure the selected\n DeliveryProvider supports all the MessageKey.keyType values specified or it will not be delivered!\n @param targetChain in Wormhole Chain ID format\n @param targetAddress address to call on targetChain (that implements IWormholeReceiver), in Wormhole bytes32 format\n @param payload arbitrary bytes to pass in as parameter in call to `targetAddress`\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param paymentForExtraReceiverValue amount (in current chain currency units) to spend on extra receiverValue\n        (in addition to the `receiverValue` specified)\n @param encodedExecutionParameters encoded information on how to execute delivery that may impact pricing\n        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\n @param refundChain The chain to deliver any refund to, in Wormhole Chain ID format\n @param refundAddress The address on `refundChain` to deliver any refund to, in Wormhole bytes32 format\n @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @param messageKeys Additional messagess to pass in as parameter in call to `targetAddress`\n @param consistencyLevel Consistency level with which to publish the delivery instructions - see\n        https://book.wormhole.com/wormhole/3_coreLayerContracts.html?highlight=consistency#consistency-levels\n @return sequence sequence number of published VAA containing delivery instructions"
									},
									"functionSelector": "cee4bda0",
									"id": 3228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nameLocation": "20080:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3201,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "20102:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3228,
												"src": "20095:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3200,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "20095:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3203,
												"mutability": "mutable",
												"name": "targetAddress",
												"nameLocation": "20132:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3228,
												"src": "20124:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3202,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20124:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3205,
												"mutability": "mutable",
												"name": "payload",
												"nameLocation": "20169:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3228,
												"src": "20156:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20156:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3207,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "20195:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3228,
												"src": "20187:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20187:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3209,
												"mutability": "mutable",
												"name": "paymentForExtraReceiverValue",
												"nameLocation": "20227:28:16",
												"nodeType": "VariableDeclaration",
												"scope": 3228,
												"src": "20219:36:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20219:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3211,
												"mutability": "mutable",
												"name": "encodedExecutionParameters",
												"nameLocation": "20279:26:16",
												"nodeType": "VariableDeclaration",
												"scope": 3228,
												"src": "20266:39:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3210,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20266:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3213,
												"mutability": "mutable",
												"name": "refundChain",
												"nameLocation": "20323:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3228,
												"src": "20316:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3212,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "20316:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3215,
												"mutability": "mutable",
												"name": "refundAddress",
												"nameLocation": "20353:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3228,
												"src": "20345:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3214,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "20345:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3217,
												"mutability": "mutable",
												"name": "deliveryProviderAddress",
												"nameLocation": "20385:23:16",
												"nodeType": "VariableDeclaration",
												"scope": 3228,
												"src": "20377:31:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20377:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3221,
												"mutability": "mutable",
												"name": "messageKeys",
												"nameLocation": "20439:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3228,
												"src": "20419:31:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_MessageKey_$2985_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct MessageKey[]"
												},
												"typeName": {
													"baseType": {
														"id": 3219,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3218,
															"name": "MessageKey",
															"nameLocations": [
																"20419:10:16"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2985,
															"src": "20419:10:16"
														},
														"referencedDeclaration": 2985,
														"src": "20419:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MessageKey_$2985_storage_ptr",
															"typeString": "struct MessageKey"
														}
													},
													"id": 3220,
													"nodeType": "ArrayTypeName",
													"src": "20419:12:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MessageKey_$2985_storage_$dyn_storage_ptr",
														"typeString": "struct MessageKey[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3223,
												"mutability": "mutable",
												"name": "consistencyLevel",
												"nameLocation": "20467:16:16",
												"nodeType": "VariableDeclaration",
												"scope": 3228,
												"src": "20461:22:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3222,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "20461:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20084:406:16"
									},
									"returnParameters": {
										"id": 3227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3226,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "20524:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3228,
												"src": "20517:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3225,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "20517:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20516:17:16"
									},
									"scope": 3327,
									"src": "20071:463:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3229,
										"nodeType": "StructuredDocumentation",
										"src": "20542:1850:16",
										"text": " @notice Requests a previously published delivery instruction to be redelivered\n (e.g. with a different delivery provider)\n This function must be called with `msg.value` equal to\n quoteEVMDeliveryPrice(targetChain, newReceiverValue, newGasLimit, newDeliveryProviderAddress)\n  @notice *** This will only be able to succeed if the following is true **\n         - newGasLimit >= gas limit of the old instruction\n         - newReceiverValue >= receiver value of the old instruction\n         - newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`\n @param deliveryVaaKey VaaKey identifying the wormhole message containing the\n        previously published delivery instructions\n @param targetChain The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\n @param newReceiverValue new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param newGasLimit gas limit with which to call `targetAddress`. Any units of gas unused will be refunded according to the\n        `targetChainRefundPerGasUnused` rate quoted by the delivery provider, to the refund chain and address specified in the original request\n @param newDeliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @return sequence sequence number of published VAA containing redelivery instructions\n @notice *** This will only be able to succeed if the following is true **\n         - newGasLimit >= gas limit of the old instruction\n         - newReceiverValue >= receiver value of the old instruction"
									},
									"functionSelector": "8b0301b1",
									"id": 3245,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "resendToEvm",
									"nameLocation": "22407:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3232,
												"mutability": "mutable",
												"name": "deliveryVaaKey",
												"nameLocation": "22443:14:16",
												"nodeType": "VariableDeclaration",
												"scope": 3245,
												"src": "22429:28:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VaaKey_$2977_memory_ptr",
													"typeString": "struct VaaKey"
												},
												"typeName": {
													"id": 3231,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3230,
														"name": "VaaKey",
														"nameLocations": [
															"22429:6:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2977,
														"src": "22429:6:16"
													},
													"referencedDeclaration": 2977,
													"src": "22429:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$2977_storage_ptr",
														"typeString": "struct VaaKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3234,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "22475:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3245,
												"src": "22468:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3233,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "22468:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3236,
												"mutability": "mutable",
												"name": "newReceiverValue",
												"nameLocation": "22505:16:16",
												"nodeType": "VariableDeclaration",
												"scope": 3245,
												"src": "22497:24:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22497:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3238,
												"mutability": "mutable",
												"name": "newGasLimit",
												"nameLocation": "22540:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3245,
												"src": "22532:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22532:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3240,
												"mutability": "mutable",
												"name": "newDeliveryProviderAddress",
												"nameLocation": "22570:26:16",
												"nodeType": "VariableDeclaration",
												"scope": 3245,
												"src": "22562:34:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22562:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22418:185:16"
									},
									"returnParameters": {
										"id": 3244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3243,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "22637:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3245,
												"src": "22630:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3242,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "22630:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22629:17:16"
									},
									"scope": 3327,
									"src": "22398:249:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3246,
										"nodeType": "StructuredDocumentation",
										"src": "22655:1575:16",
										"text": " @notice Requests a previously published delivery instruction to be redelivered\n This function must be called with `msg.value` equal to\n quoteDeliveryPrice(targetChain, newReceiverValue, newEncodedExecutionParameters, newDeliveryProviderAddress)\n @param deliveryVaaKey VaaKey identifying the wormhole message containing the\n        previously published delivery instructions\n @param targetChain The target chain that the original delivery targeted. Must match targetChain from original delivery instructions\n @param newReceiverValue new msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param newEncodedExecutionParameters new encoded information on how to execute delivery that may impact pricing\n        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\n @param newDeliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @return sequence sequence number of published VAA containing redelivery instructions\n  @notice *** This will only be able to succeed if the following is true **\n         - (For EVM_V1) newGasLimit >= gas limit of the old instruction\n         - newReceiverValue >= receiver value of the old instruction\n         - (For EVM_V1) newDeliveryProvider's `targetChainRefundPerGasUnused` >= old relay provider's `targetChainRefundPerGasUnused`"
									},
									"functionSelector": "b686d089",
									"id": 3262,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "resend",
									"nameLocation": "24245:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3249,
												"mutability": "mutable",
												"name": "deliveryVaaKey",
												"nameLocation": "24276:14:16",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "24262:28:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VaaKey_$2977_memory_ptr",
													"typeString": "struct VaaKey"
												},
												"typeName": {
													"id": 3248,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3247,
														"name": "VaaKey",
														"nameLocations": [
															"24262:6:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2977,
														"src": "24262:6:16"
													},
													"referencedDeclaration": 2977,
													"src": "24262:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaaKey_$2977_storage_ptr",
														"typeString": "struct VaaKey"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3251,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "24308:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "24301:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3250,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "24301:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3253,
												"mutability": "mutable",
												"name": "newReceiverValue",
												"nameLocation": "24338:16:16",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "24330:24:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24330:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3255,
												"mutability": "mutable",
												"name": "newEncodedExecutionParameters",
												"nameLocation": "24378:29:16",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "24365:42:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3254,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24365:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3257,
												"mutability": "mutable",
												"name": "newDeliveryProviderAddress",
												"nameLocation": "24426:26:16",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "24418:34:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24418:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24251:208:16"
									},
									"returnParameters": {
										"id": 3261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3260,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "24493:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3262,
												"src": "24486:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3259,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "24486:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24485:17:16"
									},
									"scope": 3327,
									"src": "24236:267:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3263,
										"nodeType": "StructuredDocumentation",
										"src": "24511:1142:16",
										"text": " @notice Returns the price to request a relay to chain `targetChain`, using the default delivery provider\n @param targetChain in Wormhole Chain ID format\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param gasLimit gas limit with which to call `targetAddress`.\n @return nativePriceQuote Price, in units of current chain currency, that the delivery provider charges to perform the relay\n @return targetChainRefundPerGasUnused amount of target chain currency that will be refunded per unit of gas unused,\n         if a refundAddress is specified.\n         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a\n         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.\n         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain."
									},
									"functionSelector": "c23ee3c3",
									"id": 3276,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteEVMDeliveryPrice",
									"nameLocation": "25668:21:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3265,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "25707:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3276,
												"src": "25700:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3264,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "25700:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3267,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "25737:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3276,
												"src": "25729:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25729:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3269,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "25769:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3276,
												"src": "25761:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25761:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25689:95:16"
									},
									"returnParameters": {
										"id": 3275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3272,
												"mutability": "mutable",
												"name": "nativePriceQuote",
												"nameLocation": "25857:16:16",
												"nodeType": "VariableDeclaration",
												"scope": 3276,
												"src": "25849:24:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25849:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3274,
												"mutability": "mutable",
												"name": "targetChainRefundPerGasUnused",
												"nameLocation": "25896:29:16",
												"nodeType": "VariableDeclaration",
												"scope": 3276,
												"src": "25888:37:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25888:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25834:102:16"
									},
									"scope": 3327,
									"src": "25659:278:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3277,
										"nodeType": "StructuredDocumentation",
										"src": "25945:1277:16",
										"text": " @notice Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\n @param targetChain in Wormhole Chain ID format\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param gasLimit gas limit with which to call `targetAddress`.\n @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @return nativePriceQuote Price, in units of current chain currency, that the delivery provider charges to perform the relay\n @return targetChainRefundPerGasUnused amount of target chain currency that will be refunded per unit of gas unused,\n         if a refundAddress is specified\n         Note: This value can be overridden by the delivery provider on the target chain. The returned value here should be considered to be a\n         promise by the delivery provider of the amount of refund per gas unused that will be returned to the refundAddress at the target chain.\n         If a delivery provider decides to override, this will be visible as part of the emitted Delivery event on the target chain."
									},
									"functionSelector": "80ebabd0",
									"id": 3292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteEVMDeliveryPrice",
									"nameLocation": "27237:21:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3279,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "27276:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "27269:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3278,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "27269:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3281,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "27306:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "27298:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27298:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3283,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "27338:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "27330:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27330:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3285,
												"mutability": "mutable",
												"name": "deliveryProviderAddress",
												"nameLocation": "27365:23:16",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "27357:31:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27357:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27258:137:16"
									},
									"returnParameters": {
										"id": 3291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3288,
												"mutability": "mutable",
												"name": "nativePriceQuote",
												"nameLocation": "27468:16:16",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "27460:24:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27460:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3290,
												"mutability": "mutable",
												"name": "targetChainRefundPerGasUnused",
												"nameLocation": "27507:29:16",
												"nodeType": "VariableDeclaration",
												"scope": 3292,
												"src": "27499:37:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27499:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27445:102:16"
									},
									"scope": 3327,
									"src": "27228:320:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3293,
										"nodeType": "StructuredDocumentation",
										"src": "27556:1207:16",
										"text": " @notice Returns the price to request a relay to chain `targetChain`, using delivery provider `deliveryProviderAddress`\n @param targetChain in Wormhole Chain ID format\n @param receiverValue msg.value that delivery provider should pass in for call to `targetAddress` (in targetChain currency units)\n @param encodedExecutionParameters encoded information on how to execute delivery that may impact pricing\n        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` with which to call `targetAddress`\n @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @return nativePriceQuote Price, in units of current chain currency, that the delivery provider charges to perform the relay\n @return encodedExecutionInfo encoded information on how the delivery will be executed\n        e.g. for version EVM_V1, this is a struct that encodes the `gasLimit` and `targetChainRefundPerGasUnused`\n             (which is the amount of target chain currency that will be refunded per unit of gas unused,\n              if a refundAddress is specified)"
									},
									"functionSelector": "a79629d8",
									"id": 3308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteDeliveryPrice",
									"nameLocation": "28778:18:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3295,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "28814:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3308,
												"src": "28807:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3294,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "28807:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3297,
												"mutability": "mutable",
												"name": "receiverValue",
												"nameLocation": "28844:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3308,
												"src": "28836:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28836:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3299,
												"mutability": "mutable",
												"name": "encodedExecutionParameters",
												"nameLocation": "28881:26:16",
												"nodeType": "VariableDeclaration",
												"scope": 3308,
												"src": "28868:39:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3298,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28868:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3301,
												"mutability": "mutable",
												"name": "deliveryProviderAddress",
												"nameLocation": "28926:23:16",
												"nodeType": "VariableDeclaration",
												"scope": 3308,
												"src": "28918:31:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28918:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28796:160:16"
									},
									"returnParameters": {
										"id": 3307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3304,
												"mutability": "mutable",
												"name": "nativePriceQuote",
												"nameLocation": "29015:16:16",
												"nodeType": "VariableDeclaration",
												"scope": 3308,
												"src": "29007:24:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29007:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3306,
												"mutability": "mutable",
												"name": "encodedExecutionInfo",
												"nameLocation": "29046:20:16",
												"nodeType": "VariableDeclaration",
												"scope": 3308,
												"src": "29033:33:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29033:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29006:61:16"
									},
									"scope": 3327,
									"src": "28769:299:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3309,
										"nodeType": "StructuredDocumentation",
										"src": "29076:650:16",
										"text": " @notice Returns the (extra) amount of target chain currency that `targetAddress`\n will be called with, if the `paymentForExtraReceiverValue` field is set to `currentChainAmount`\n @param targetChain in Wormhole Chain ID format\n @param currentChainAmount The value that `paymentForExtraReceiverValue` will be set to\n @param deliveryProviderAddress The address of the desired delivery provider's implementation of IDeliveryProvider\n @return targetChainAmount The amount such that if `targetAddress` will be called with `msg.value` equal to\n         receiverValue + targetChainAmount"
									},
									"functionSelector": "2385904a",
									"id": 3320,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteNativeForChain",
									"nameLocation": "29741:19:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3311,
												"mutability": "mutable",
												"name": "targetChain",
												"nameLocation": "29778:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3320,
												"src": "29771:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3310,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "29771:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3313,
												"mutability": "mutable",
												"name": "currentChainAmount",
												"nameLocation": "29808:18:16",
												"nodeType": "VariableDeclaration",
												"scope": 3320,
												"src": "29800:26:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29800:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3315,
												"mutability": "mutable",
												"name": "deliveryProviderAddress",
												"nameLocation": "29845:23:16",
												"nodeType": "VariableDeclaration",
												"scope": 3320,
												"src": "29837:31:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29837:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29760:115:16"
									},
									"returnParameters": {
										"id": 3319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3318,
												"mutability": "mutable",
												"name": "targetChainAmount",
												"nameLocation": "29907:17:16",
												"nodeType": "VariableDeclaration",
												"scope": 3320,
												"src": "29899:25:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29899:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29898:27:16"
									},
									"scope": 3327,
									"src": "29732:194:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3321,
										"nodeType": "StructuredDocumentation",
										"src": "29934:271:16",
										"text": " @notice Returns the address of the current default delivery provider\n @return deliveryProvider The address of (the default delivery provider)'s contract on this source\n   chain. This must be a contract that implements IDeliveryProvider."
									},
									"functionSelector": "24320c9f",
									"id": 3326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDefaultDeliveryProvider",
									"nameLocation": "30220:26:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30246:2:16"
									},
									"returnParameters": {
										"id": 3325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3324,
												"mutability": "mutable",
												"name": "deliveryProvider",
												"nameLocation": "30307:16:16",
												"nodeType": "VariableDeclaration",
												"scope": 3326,
												"src": "30299:24:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30299:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30298:26:16"
									},
									"scope": 3327,
									"src": "30211:114:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3476,
							"src": "2262:28066:16",
							"usedErrors": [],
							"usedEvents": [
								2993
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3329,
										"name": "IWormholeRelayerBase",
										"nameLocations": [
											"30502:20:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3025,
										"src": "30502:20:16"
									},
									"id": 3330,
									"nodeType": "InheritanceSpecifier",
									"src": "30502:20:16"
								}
							],
							"canonicalName": "IWormholeRelayerDelivery",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3328,
								"nodeType": "StructuredDocumentation",
								"src": "30332:130:16",
								"text": " @title IWormholeRelayerDelivery\n @notice The interface to execute deliveries. Only relevant for Delivery Providers"
							},
							"fullyImplemented": false,
							"id": 3377,
							"linearizedBaseContracts": [
								3377,
								3025
							],
							"name": "IWormholeRelayerDelivery",
							"nameLocation": "30474:24:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IWormholeRelayerDelivery.DeliveryStatus",
									"id": 3333,
									"members": [
										{
											"id": 3331,
											"name": "SUCCESS",
											"nameLocation": "30561:7:16",
											"nodeType": "EnumValue",
											"src": "30561:7:16"
										},
										{
											"id": 3332,
											"name": "RECEIVER_FAILURE",
											"nameLocation": "30579:16:16",
											"nodeType": "EnumValue",
											"src": "30579:16:16"
										}
									],
									"name": "DeliveryStatus",
									"nameLocation": "30535:14:16",
									"nodeType": "EnumDefinition",
									"src": "30530:72:16"
								},
								{
									"canonicalName": "IWormholeRelayerDelivery.RefundStatus",
									"id": 3340,
									"members": [
										{
											"id": 3334,
											"name": "REFUND_SENT",
											"nameLocation": "30639:11:16",
											"nodeType": "EnumValue",
											"src": "30639:11:16"
										},
										{
											"id": 3335,
											"name": "REFUND_FAIL",
											"nameLocation": "30661:11:16",
											"nodeType": "EnumValue",
											"src": "30661:11:16"
										},
										{
											"id": 3336,
											"name": "CROSS_CHAIN_REFUND_SENT",
											"nameLocation": "30683:23:16",
											"nodeType": "EnumValue",
											"src": "30683:23:16"
										},
										{
											"id": 3337,
											"name": "CROSS_CHAIN_REFUND_FAIL_PROVIDER_NOT_SUPPORTED",
											"nameLocation": "30717:46:16",
											"nodeType": "EnumValue",
											"src": "30717:46:16"
										},
										{
											"id": 3338,
											"name": "CROSS_CHAIN_REFUND_FAIL_NOT_ENOUGH",
											"nameLocation": "30774:34:16",
											"nodeType": "EnumValue",
											"src": "30774:34:16"
										},
										{
											"id": 3339,
											"name": "NO_REFUND_REQUESTED",
											"nameLocation": "30819:19:16",
											"nodeType": "EnumValue",
											"src": "30819:19:16"
										}
									],
									"name": "RefundStatus",
									"nameLocation": "30615:12:16",
									"nodeType": "EnumDefinition",
									"src": "30610:235:16"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3341,
										"nodeType": "StructuredDocumentation",
										"src": "30853:1484:16",
										"text": " @custom:member recipientContract - The target contract address\n @custom:member sourceChain - The chain which this delivery was requested from (in wormhole\n     ChainID format)\n @custom:member sequence - The wormhole sequence number of the delivery VAA on the source chain\n     corresponding to this delivery request\n @custom:member deliveryVaaHash - The hash of the delivery VAA corresponding to this delivery\n     request\n @custom:member gasUsed - The amount of gas that was used to call your target contract\n @custom:member status:\n   - RECEIVER_FAILURE, if the target contract reverts\n   - SUCCESS, if the target contract doesn't revert\n @custom:member additionalStatusInfo:\n   - If status is SUCCESS, then this is empty.\n   - If status is RECEIVER_FAILURE, this is `RETURNDATA_TRUNCATION_THRESHOLD` bytes of the\n       return data (i.e. potentially truncated revert reason information).\n @custom:member refundStatus - Result of the refund. REFUND_SUCCESS or REFUND_FAIL are for\n     refunds where targetChain=refundChain; the others are for targetChain!=refundChain,\n     where a cross chain refund is necessary, or if the default code path is used where no refund is requested (NO_REFUND_REQUESTED)\n @custom:member overridesInfo:\n   - If not an override: empty bytes array\n   - Otherwise: An encoded `DeliveryOverride`"
									},
									"eventSelector": "bccc00b713f54173962e7de6098f643d8ebf53d488d71f4b2a5171496d038f9e",
									"id": 3363,
									"name": "Delivery",
									"nameLocation": "32349:8:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3343,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipientContract",
												"nameLocation": "32384:17:16",
												"nodeType": "VariableDeclaration",
												"scope": 3363,
												"src": "32368:33:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32368:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3345,
												"indexed": true,
												"mutability": "mutable",
												"name": "sourceChain",
												"nameLocation": "32427:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 3363,
												"src": "32412:26:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3344,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "32412:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3347,
												"indexed": true,
												"mutability": "mutable",
												"name": "sequence",
												"nameLocation": "32464:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3363,
												"src": "32449:23:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3346,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "32449:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3349,
												"indexed": false,
												"mutability": "mutable",
												"name": "deliveryVaaHash",
												"nameLocation": "32491:15:16",
												"nodeType": "VariableDeclaration",
												"scope": 3363,
												"src": "32483:23:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32483:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3352,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "32532:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 3363,
												"src": "32517:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_DeliveryStatus_$3333",
													"typeString": "enum IWormholeRelayerDelivery.DeliveryStatus"
												},
												"typeName": {
													"id": 3351,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3350,
														"name": "DeliveryStatus",
														"nameLocations": [
															"32517:14:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3333,
														"src": "32517:14:16"
													},
													"referencedDeclaration": 3333,
													"src": "32517:14:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_DeliveryStatus_$3333",
														"typeString": "enum IWormholeRelayerDelivery.DeliveryStatus"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3354,
												"indexed": false,
												"mutability": "mutable",
												"name": "gasUsed",
												"nameLocation": "32557:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3363,
												"src": "32549:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32549:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3357,
												"indexed": false,
												"mutability": "mutable",
												"name": "refundStatus",
												"nameLocation": "32588:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 3363,
												"src": "32575:25:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RefundStatus_$3340",
													"typeString": "enum IWormholeRelayerDelivery.RefundStatus"
												},
												"typeName": {
													"id": 3356,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3355,
														"name": "RefundStatus",
														"nameLocations": [
															"32575:12:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3340,
														"src": "32575:12:16"
													},
													"referencedDeclaration": 3340,
													"src": "32575:12:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RefundStatus_$3340",
														"typeString": "enum IWormholeRelayerDelivery.RefundStatus"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3359,
												"indexed": false,
												"mutability": "mutable",
												"name": "additionalStatusInfo",
												"nameLocation": "32617:20:16",
												"nodeType": "VariableDeclaration",
												"scope": 3363,
												"src": "32611:26:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32611:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3361,
												"indexed": false,
												"mutability": "mutable",
												"name": "overridesInfo",
												"nameLocation": "32654:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 3363,
												"src": "32648:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32648:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32357:317:16"
									},
									"src": "32343:332:16"
								},
								{
									"documentation": {
										"id": 3364,
										"nodeType": "StructuredDocumentation",
										"src": "32683:1611:16",
										"text": " @notice The delivery provider calls `deliver` to relay messages as described by one delivery instruction\n The delivery provider must pass in the specified (by VaaKeys[]) signed wormhole messages (VAAs) from the source chain\n as well as the signed wormhole message with the delivery instructions (the delivery VAA)\n The messages will be relayed to the target address (with the specified gas limit and receiver value) iff the following checks are met:\n - the delivery VAA has a valid signature\n - the delivery VAA's emitter is one of these WormholeRelayer contracts\n - the delivery provider passed in at least enough of this chain's currency as msg.value (enough meaning the maximum possible refund)\n - the instruction's target chain is this chain\n - the relayed signed VAAs match the descriptions in container.messages (the VAA hashes match, or the emitter address, sequence number pair matches, depending on the description given)\n @param encodedVMs - An array of signed wormhole messages (all from the same source chain\n     transaction)\n @param encodedDeliveryVAA - Signed wormhole message from the source chain's WormholeRelayer\n     contract with payload being the encoded delivery instruction container\n @param relayerRefundAddress - The address to which any refunds to the delivery provider\n     should be sent\n @param deliveryOverrides - Optional overrides field which must be either an empty bytes array or\n     an encoded DeliveryOverride struct"
									},
									"functionSelector": "a60eb4c8",
									"id": 3376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deliver",
									"nameLocation": "34309:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3367,
												"mutability": "mutable",
												"name": "encodedVMs",
												"nameLocation": "34342:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 3376,
												"src": "34327:25:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 3365,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "34327:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 3366,
													"nodeType": "ArrayTypeName",
													"src": "34327:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3369,
												"mutability": "mutable",
												"name": "encodedDeliveryVAA",
												"nameLocation": "34376:18:16",
												"nodeType": "VariableDeclaration",
												"scope": 3376,
												"src": "34363:31:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3368,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34363:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3371,
												"mutability": "mutable",
												"name": "relayerRefundAddress",
												"nameLocation": "34421:20:16",
												"nodeType": "VariableDeclaration",
												"scope": 3376,
												"src": "34405:36:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34405:15:16",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3373,
												"mutability": "mutable",
												"name": "deliveryOverrides",
												"nameLocation": "34465:17:16",
												"nodeType": "VariableDeclaration",
												"scope": 3376,
												"src": "34452:30:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3372,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34452:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34316:173:16"
									},
									"returnParameters": {
										"id": 3375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34506:0:16"
									},
									"scope": 3377,
									"src": "34300:207:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3476,
							"src": "30464:4046:16",
							"usedErrors": [],
							"usedEvents": [
								2993,
								3363
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3378,
										"name": "IWormholeRelayerDelivery",
										"nameLocations": [
											"34544:24:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3377,
										"src": "34544:24:16"
									},
									"id": 3379,
									"nodeType": "InheritanceSpecifier",
									"src": "34544:24:16"
								},
								{
									"baseName": {
										"id": 3380,
										"name": "IWormholeRelayerSend",
										"nameLocations": [
											"34570:20:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3327,
										"src": "34570:20:16"
									},
									"id": 3381,
									"nodeType": "InheritanceSpecifier",
									"src": "34570:20:16"
								}
							],
							"canonicalName": "IWormholeRelayer",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3382,
							"linearizedBaseContracts": [
								3382,
								3327,
								3377,
								3025
							],
							"name": "IWormholeRelayer",
							"nameLocation": "34524:16:16",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3476,
							"src": "34514:79:16",
							"usedErrors": [],
							"usedEvents": [
								2993,
								3363
							]
						},
						{
							"constant": true,
							"id": 3385,
							"mutability": "constant",
							"name": "RETURNDATA_TRUNCATION_THRESHOLD",
							"nameLocation": "34964:31:16",
							"nodeType": "VariableDeclaration",
							"scope": 3476,
							"src": "34947:54:16",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 3383,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "34947:7:16",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "313332",
								"id": 3384,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "34998:3:16",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_132_by_1",
									"typeString": "int_const 132"
								},
								"value": "132"
							},
							"visibility": "internal"
						},
						{
							"errorSelector": "1f89f671",
							"id": 3391,
							"name": "InvalidMsgValue",
							"nameLocation": "35124:15:16",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3390,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3387,
										"mutability": "mutable",
										"name": "msgValue",
										"nameLocation": "35148:8:16",
										"nodeType": "VariableDeclaration",
										"scope": 3391,
										"src": "35140:16:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 3386,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "35140:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3389,
										"mutability": "mutable",
										"name": "totalFee",
										"nameLocation": "35166:8:16",
										"nodeType": "VariableDeclaration",
										"scope": 3391,
										"src": "35158:16:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 3388,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "35158:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "35139:36:16"
							},
							"src": "35118:58:16"
						},
						{
							"errorSelector": "71ae1330",
							"id": 3393,
							"name": "RequestedGasLimitTooLow",
							"nameLocation": "35186:23:16",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3392,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "35209:2:16"
							},
							"src": "35180:32:16"
						},
						{
							"errorSelector": "66b69b9d",
							"id": 3399,
							"name": "DeliveryProviderDoesNotSupportTargetChain",
							"nameLocation": "35222:41:16",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3398,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3395,
										"mutability": "mutable",
										"name": "relayer",
										"nameLocation": "35278:7:16",
										"nodeType": "VariableDeclaration",
										"scope": 3399,
										"src": "35270:15:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 3394,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "35270:7:16",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3397,
										"mutability": "mutable",
										"name": "chainId",
										"nameLocation": "35299:7:16",
										"nodeType": "VariableDeclaration",
										"scope": 3399,
										"src": "35292:14:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 3396,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "35292:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "35263:46:16"
							},
							"src": "35216:94:16"
						},
						{
							"errorSelector": "95d64fa0",
							"id": 3401,
							"name": "DeliveryProviderCannotReceivePayment",
							"nameLocation": "35318:36:16",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3400,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "35354:2:16"
							},
							"src": "35312:45:16"
						},
						{
							"errorSelector": "82273f20",
							"id": 3405,
							"name": "DeliveryProviderDoesNotSupportMessageKeyType",
							"nameLocation": "35365:44:16",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3404,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3403,
										"mutability": "mutable",
										"name": "keyType",
										"nameLocation": "35416:7:16",
										"nodeType": "VariableDeclaration",
										"scope": 3405,
										"src": "35410:13:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"typeName": {
											"id": 3402,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "35410:5:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "35409:15:16"
							},
							"src": "35359:66:16"
						},
						{
							"errorSelector": "20b84ced",
							"id": 3411,
							"name": "ReentrantDelivery",
							"nameLocation": "35524:17:16",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3410,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3407,
										"mutability": "mutable",
										"name": "msgSender",
										"nameLocation": "35550:9:16",
										"nodeType": "VariableDeclaration",
										"scope": 3411,
										"src": "35542:17:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 3406,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "35542:7:16",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3409,
										"mutability": "mutable",
										"name": "lockedBy",
										"nameLocation": "35569:8:16",
										"nodeType": "VariableDeclaration",
										"scope": 3411,
										"src": "35561:16:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 3408,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "35561:7:16",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "35541:37:16"
							},
							"src": "35518:61:16"
						},
						{
							"errorSelector": "79cbfdbe",
							"id": 3417,
							"name": "InvalidPayloadId",
							"nameLocation": "35589:16:16",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3416,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3413,
										"mutability": "mutable",
										"name": "parsed",
										"nameLocation": "35612:6:16",
										"nodeType": "VariableDeclaration",
										"scope": 3417,
										"src": "35606:12:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"typeName": {
											"id": 3412,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "35606:5:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3415,
										"mutability": "mutable",
										"name": "expected",
										"nameLocation": "35626:8:16",
										"nodeType": "VariableDeclaration",
										"scope": 3417,
										"src": "35620:14:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"typeName": {
											"id": 3414,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "35620:5:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "35605:30:16"
							},
							"src": "35583:53:16"
						},
						{
							"errorSelector": "c37906a0",
							"id": 3423,
							"name": "InvalidPayloadLength",
							"nameLocation": "35644:20:16",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3422,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3419,
										"mutability": "mutable",
										"name": "received",
										"nameLocation": "35673:8:16",
										"nodeType": "VariableDeclaration",
										"scope": 3423,
										"src": "35665:16:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 3418,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "35665:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3421,
										"mutability": "mutable",
										"name": "expected",
										"nameLocation": "35691:8:16",
										"nodeType": "VariableDeclaration",
										"scope": 3423,
										"src": "35683:16:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 3420,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "35683:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "35664:36:16"
							},
							"src": "35638:63:16"
						},
						{
							"errorSelector": "249ede70",
							"id": 3427,
							"name": "InvalidVaaKeyType",
							"nameLocation": "35709:17:16",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3426,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3425,
										"mutability": "mutable",
										"name": "parsed",
										"nameLocation": "35733:6:16",
										"nodeType": "VariableDeclaration",
										"scope": 3427,
										"src": "35727:12:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"typeName": {
											"id": 3424,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "35727:5:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "35726:14:16"
							},
							"src": "35703:38:16"
						},
						{
							"errorSelector": "12d6a5c7",
							"id": 3431,
							"name": "TooManyMessageKeys",
							"nameLocation": "35749:18:16",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3430,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3429,
										"mutability": "mutable",
										"name": "numMessageKeys",
										"nameLocation": "35776:14:16",
										"nodeType": "VariableDeclaration",
										"scope": 3431,
										"src": "35768:22:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 3428,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "35768:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "35767:24:16"
							},
							"src": "35743:49:16"
						},
						{
							"errorSelector": "b72c3b7f",
							"id": 3435,
							"name": "InvalidDeliveryVaa",
							"nameLocation": "35802:18:16",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3434,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3433,
										"mutability": "mutable",
										"name": "reason",
										"nameLocation": "35828:6:16",
										"nodeType": "VariableDeclaration",
										"scope": 3435,
										"src": "35821:13:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_string_memory_ptr",
											"typeString": "string"
										},
										"typeName": {
											"id": 3432,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "35821:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "35820:15:16"
							},
							"src": "35796:40:16"
						},
						{
							"errorSelector": "776c06ce",
							"id": 3443,
							"name": "InvalidEmitter",
							"nameLocation": "35986:14:16",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3442,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3437,
										"mutability": "mutable",
										"name": "emitter",
										"nameLocation": "36009:7:16",
										"nodeType": "VariableDeclaration",
										"scope": 3443,
										"src": "36001:15:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 3436,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "36001:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3439,
										"mutability": "mutable",
										"name": "registered",
										"nameLocation": "36026:10:16",
										"nodeType": "VariableDeclaration",
										"scope": 3443,
										"src": "36018:18:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 3438,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "36018:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3441,
										"mutability": "mutable",
										"name": "chainId",
										"nameLocation": "36045:7:16",
										"nodeType": "VariableDeclaration",
										"scope": 3443,
										"src": "36038:14:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 3440,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "36038:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "36000:53:16"
							},
							"src": "35980:74:16"
						},
						{
							"errorSelector": "65c1f7cd",
							"id": 3449,
							"name": "MessageKeysLengthDoesNotMatchMessagesLength",
							"nameLocation": "36062:43:16",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3448,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3445,
										"mutability": "mutable",
										"name": "keys",
										"nameLocation": "36114:4:16",
										"nodeType": "VariableDeclaration",
										"scope": 3449,
										"src": "36106:12:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 3444,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "36106:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3447,
										"mutability": "mutable",
										"name": "vaas",
										"nameLocation": "36128:4:16",
										"nodeType": "VariableDeclaration",
										"scope": 3449,
										"src": "36120:12:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 3446,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "36120:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "36105:28:16"
							},
							"src": "36056:78:16"
						},
						{
							"errorSelector": "eb5e161c",
							"id": 3453,
							"name": "VaaKeysDoNotMatchVaas",
							"nameLocation": "36142:21:16",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3452,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3451,
										"mutability": "mutable",
										"name": "index",
										"nameLocation": "36170:5:16",
										"nodeType": "VariableDeclaration",
										"scope": 3453,
										"src": "36164:11:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										},
										"typeName": {
											"id": 3450,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "36164:5:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "36163:13:16"
							},
							"src": "36136:41:16"
						},
						{
							"errorSelector": "72132d5a",
							"id": 3455,
							"name": "RequesterNotWormholeRelayer",
							"nameLocation": "36374:27:16",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3454,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "36401:2:16"
							},
							"src": "36368:36:16"
						},
						{
							"errorSelector": "d8215fc9",
							"id": 3459,
							"name": "TargetChainIsNotThisChain",
							"nameLocation": "36514:25:16",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3458,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3457,
										"mutability": "mutable",
										"name": "targetChain",
										"nameLocation": "36547:11:16",
										"nodeType": "VariableDeclaration",
										"scope": 3459,
										"src": "36540:18:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										},
										"typeName": {
											"id": 3456,
											"name": "uint16",
											"nodeType": "ElementaryTypeName",
											"src": "36540:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "36539:20:16"
							},
							"src": "36508:52:16"
						},
						{
							"errorSelector": "afe343e8",
							"id": 3461,
							"name": "InvalidOverrideGasLimit",
							"nameLocation": "36648:23:16",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3460,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "36671:2:16"
							},
							"src": "36642:32:16"
						},
						{
							"errorSelector": "e3704808",
							"id": 3463,
							"name": "InvalidOverrideReceiverValue",
							"nameLocation": "36767:28:16",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3462,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "36795:2:16"
							},
							"src": "36761:37:16"
						},
						{
							"errorSelector": "0cfb7d9e",
							"id": 3465,
							"name": "InvalidOverrideRefundPerGasUnused",
							"nameLocation": "36908:33:16",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3464,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "36941:2:16"
							},
							"src": "36902:42:16"
						},
						{
							"errorSelector": "02216bc0",
							"id": 3471,
							"name": "InsufficientRelayerFunds",
							"nameLocation": "37093:24:16",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3470,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3467,
										"mutability": "mutable",
										"name": "msgValue",
										"nameLocation": "37126:8:16",
										"nodeType": "VariableDeclaration",
										"scope": 3471,
										"src": "37118:16:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 3466,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "37118:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 3469,
										"mutability": "mutable",
										"name": "minimum",
										"nameLocation": "37144:7:16",
										"nodeType": "VariableDeclaration",
										"scope": 3471,
										"src": "37136:15:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 3468,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "37136:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "37117:35:16"
							},
							"src": "37087:66:16"
						},
						{
							"errorSelector": "33b960d0",
							"id": 3475,
							"name": "NotAnEvmAddress",
							"nameLocation": "37309:15:16",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 3474,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3473,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 3475,
										"src": "37325:7:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										},
										"typeName": {
											"id": 3472,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "37325:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "37324:9:16"
							},
							"src": "37303:31:16"
						}
					],
					"src": "40:37296:16"
				},
				"id": 16
			}
		}
	}
}